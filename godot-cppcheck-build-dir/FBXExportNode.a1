<?xml version="1.0"?>
<analyzerinfo checksum="1857512833">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Node::start_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;Node::start_pos&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="77" column="5"/>
            <symbol>Node::start_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Node::end_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;Node::end_pos&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="77" column="5"/>
            <symbol>Node::end_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Node::property_start&apos; is not initialized in the constructor." verbose="Member variable &apos;Node::property_start&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="77" column="5"/>
            <symbol>Node::property_start</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Node::start_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;Node::start_pos&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="87" column="5"/>
            <symbol>Node::start_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Node::end_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;Node::end_pos&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="87" column="5"/>
            <symbol>Node::end_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Node::property_start&apos; is not initialized in the constructor." verbose="Member variable &apos;Node::property_start&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="87" column="5"/>
            <symbol>Node::property_start</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Assimp::Node::AddProperties&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Assimp::Node::AddProperties&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="108" column="10"/>
            <symbol>Assimp::Node::AddProperties</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Assimp::Node::BeginAscii&apos; can be const." verbose="The member function &apos;Assimp::Node::BeginAscii&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="195" column="10"/>
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" line="383" column="17"/>
            <symbol>Assimp::Node::BeginAscii</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Assimp::Node::BeginChildrenAscii&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Assimp::Node::BeginChildrenAscii&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="197" column="10"/>
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" line="398" column="17"/>
            <symbol>Assimp::Node::BeginChildrenAscii</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Assimp::Node::EndAscii&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Assimp::Node::EndAscii&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="199" column="10"/>
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" line="418" column="17"/>
            <symbol>Assimp::Node::EndAscii</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Node&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="77" column="5"/>
            <symbol>Node</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;Dump&apos; argument 1 names different: declaration &apos;s&apos; definition &apos;outstream&apos;." verbose="Function &apos;Dump&apos; argument 1 names different: declaration &apos;s&apos; definition &apos;outstream&apos;." cwe="628" inconclusive="true">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" line="171" column="29"/>
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/FBX/FBXExportNode.h" line="163" column="39"/>
            <symbol>Dump</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="AddP70int" lineNumber="64"/>
    <functiondecl functionName="AddP70bool" lineNumber="72"/>
    <functiondecl functionName="AddP70double" lineNumber="80"/>
    <functiondecl functionName="AddP70numberA" lineNumber="88"/>
    <functiondecl functionName="AddP70color" lineNumber="96"/>
    <functiondecl functionName="AddP70colorA" lineNumber="104"/>
    <functiondecl functionName="AddP70vector" lineNumber="112"/>
    <functiondecl functionName="AddP70vectorA" lineNumber="120"/>
    <functiondecl functionName="AddP70string" lineNumber="128"/>
    <functiondecl functionName="AddP70enum" lineNumber="136"/>
    <functiondecl functionName="AddP70time" lineNumber="144"/>
    <functiondecl functionName="Dump" lineNumber="155"/>
    <functiondecl functionName="Dump" lineNumber="170"/>
    <functiondecl functionName="Begin" lineNumber="186"/>
    <functiondecl functionName="DumpProperties" lineNumber="201"/>
    <functiondecl functionName="EndProperties" lineNumber="214"/>
    <functiondecl functionName="EndProperties" lineNumber="221"/>
    <functiondecl functionName="BeginChildren" lineNumber="234"/>
    <functiondecl functionName="DumpChildren" lineNumber="247"/>
    <functiondecl functionName="End" lineNumber="261"/>
    <functiondecl functionName="DumpBinary" lineNumber="279"/>
    <functiondecl functionName="DumpAscii" lineNumber="300"/>
    <functiondecl functionName="BeginBinary" lineNumber="322"/>
    <functiondecl functionName="DumpPropertiesBinary" lineNumber="340"/>
    <functiondecl functionName="EndPropertiesBinary" lineNumber="347"/>
    <functiondecl functionName="DumpChildrenBinary" lineNumber="361"/>
    <functiondecl functionName="EndBinary" lineNumber="368"/>
    <functiondecl functionName="BeginAscii" lineNumber="383"/>
    <functiondecl functionName="DumpPropertiesAscii" lineNumber="390"/>
    <functiondecl functionName="BeginChildrenAscii" lineNumber="398"/>
    <functiondecl functionName="DumpChildrenAscii" lineNumber="405"/>
    <functiondecl functionName="EndAscii" lineNumber="418"/>
    <functiondecl functionName="WritePropertyNodeAscii" lineNumber="429"/>
    <functiondecl functionName="WritePropertyNodeAscii" lineNumber="465"/>
    <functiondecl functionName="WritePropertyNodeBinary" lineNumber="502"/>
    <functiondecl functionName="WritePropertyNodeBinary" lineNumber="520"/>
    <functiondecl functionName="WritePropertyNode" lineNumber="541"/>
    <functiondecl functionName="WritePropertyNode" lineNumber="557"/>
    <functioncall functionName="AddChild"/>
    <functioncall functionName="AddProperties"/>
    <functioncall functionName="Begin"/>
    <functioncall functionName="BeginAscii"/>
    <functioncall functionName="BeginBinary"/>
    <functioncall functionName="BeginChildrenAscii"/>
    <functioncall functionName="DeadlyExportError"/>
    <functioncall functionName="Dump"/>
    <functioncall functionName="DumpAscii"/>
    <functioncall functionName="DumpBinary"/>
    <functioncall functionName="DumpChildrenAscii"/>
    <functioncall functionName="DumpChildrenBinary"/>
    <functioncall functionName="DumpPropertiesAscii"/>
    <functioncall functionName="DumpPropertiesBinary"/>
    <functioncall functionName="End"/>
    <functioncall functionName="EndAscii"/>
    <functioncall functionName="EndBinary"/>
    <functioncall functionName="EndProperties"/>
    <functioncall functionName="EndPropertiesBinary"/>
    <functioncall functionName="NULL_RECORD"/>
    <functioncall functionName="Node"/>
    <functioncall functionName="PutChar"/>
    <functioncall functionName="PutF8"/>
    <functioncall functionName="PutI4"/>
    <functioncall functionName="PutString"/>
    <functioncall functionName="PutU1"/>
    <functioncall functionName="PutU4"/>
    <functioncall functionName="RotOrder_EulerXZY"/>
    <functioncall functionName="RotOrder_EulerYXZ"/>
    <functioncall functionName="RotOrder_EulerYZX"/>
    <functioncall functionName="RotOrder_EulerZXY"/>
    <functioncall functionName="RotOrder_EulerZYX"/>
    <functioncall functionName="RotOrder_MAX"/>
    <functioncall functionName="RotOrder_SphericXYZ"/>
    <functioncall functionName="Seek"/>
    <functioncall functionName="Tell"/>
    <functioncall functionName="TransformInheritance_MAX"/>
    <functioncall functionName="TransformInheritance_RSrs"/>
    <functioncall functionName="TransformInheritance_Rrs"/>
    <functioncall functionName="Write"/>
    <functioncall functionName="WritePropertyNodeAscii"/>
    <functioncall functionName="WritePropertyNodeBinary"/>
    <functioncall functionName="ai_assert"/>
    <functioncall functionName="ai_snprintf"/>
    <functioncall functionName="b"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="binary"/>
    <functioncall functionName="buffer"/>
    <functioncall functionName="c"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="children"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="count"/>
    <functioncall functionName="default"/>
    <functioncall functionName="emplace_back"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="end_pos"/>
    <functioncall functionName="false"/>
    <functioncall functionName="for"/>
    <functioncall functionName="force_has_children"/>
    <functioncall functionName="g"/>
    <functioncall functionName="has_children"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="indent"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="j"/>
    <functioncall functionName="n"/>
    <functioncall functionName="name"/>
    <functioncall functionName="node"/>
    <functioncall functionName="num_properties"/>
    <functioncall functionName="outfile"/>
    <functioncall functionName="outstream"/>
    <functioncall functionName="p"/>
    <functioncall functionName="pos"/>
    <functioncall functionName="properties"/>
    <functioncall functionName="property_section_size"/>
    <functioncall functionName="property_start"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="r"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="ss"/>
    <functioncall functionName="start_pos"/>
    <functioncall functionName="static_assert"/>
    <functioncall functionName="str"/>
    <functioncall functionName="tellp"/>
    <functioncall functionName="to_string"/>
    <functioncall functionName="type"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="uint8_t"/>
    <functioncall functionName="v"/>
    <functioncall functionName="value"/>
    <functioncall functionName="void"/>
    <functioncall functionName="vsize"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
    <functioncall functionName="z"/>
  </FileInfo>
</analyzerinfo>
