<?xml version="1.0"?>
<analyzerinfo checksum="1944364167">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ae&apos; can be reduced." verbose="The scope of the variable &apos;ae&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="31" column="17"/>
            <symbol>ae</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;be&apos; can be reduced." verbose="The scope of the variable &apos;be&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="31" column="23"/>
            <symbol>be</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixml.h:34:6" call-funcname="parsexml" call-argnr="1" file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="143" col="10" call-argexpr="&parser" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c:28:5" call-funcname="evtlistcmp" call-argnr="1" file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="148" col="16" call-argexpr="&evtlistref" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c:28:5" call-funcname="evtlistcmp" call-argnr="2" file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="148" col="16" call-argexpr="&evtlist" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c:123:5" call-funcname="testxmlparser" call-argnr="1" file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="158" col="19" call-argexpr="xmldata" call-argvaluetype="7" call-argvalue="207"/>  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c:28:5" my-argnr="1" my-argname="a" file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="32" col="5" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c:28:5" my-argnr="2" my-argname="b" file="/home/hbina/git/godot/thirdparty/miniupnpc/miniupnpc/minixmlvalid.c" line="32" col="13" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="evtlistcmp" lineNumber="28"/>
    <functiondecl functionName="startelt" lineNumber="87"/>
    <functiondecl functionName="endelt" lineNumber="99"/>
    <functiondecl functionName="chardata" lineNumber="111"/>
    <functiondecl functionName="testxmlparser" lineNumber="123"/>
    <functiondecl functionName="main" lineNumber="153"/>
    <functioncall functionName="ATT"/>
    <functioncall functionName="CHARDATA"/>
    <functioncall functionName="ELTEND"/>
    <functioncall functionName="ELTSTART"/>
    <functioncall functionName="argc"/>
    <functioncall functionName="argv"/>
    <functioncall functionName="chardata"/>
    <functioncall functionName="data"/>
    <functioncall functionName="endelt"/>
    <functioncall functionName="events"/>
    <functioncall functionName="evtlist"/>
    <functioncall functionName="evtlistcmp"/>
    <functioncall functionName="evtlistref"/>
    <functioncall functionName="evtref"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="free"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="l"/>
    <functioncall functionName="len"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="memcmp"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="n"/>
    <functioncall functionName="p"/>
    <functioncall functionName="parser"/>
    <functioncall functionName="parsexml"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="r"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="startelt"/>
    <functioncall functionName="stderr"/>
    <functioncall functionName="testxmlparser"/>
    <functioncall functionName="type"/>
    <functioncall functionName="void"/>
    <functioncall functionName="xml"/>
    <functioncall functionName="xmldata"/>
  </FileInfo>
</analyzerinfo>
