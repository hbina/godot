<?xml version="1.0"?>
<analyzerinfo checksum="2299123489">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;normalizer&apos; can be reduced." verbose="The scope of the variable &apos;normalizer&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/float/pitch_analysis_core_FLP.c" line="93" column="27"/>
            <symbol>normalizer</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;basis_ptr&apos; can be reduced." verbose="The scope of the variable &apos;basis_ptr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/float/pitch_analysis_core_FLP.c" line="568" column="36"/>
            <symbol>basis_ptr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;energy&apos; can be reduced." verbose="The scope of the variable &apos;energy&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/float/pitch_analysis_core_FLP.c" line="569" column="15"/>
            <symbol>energy</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/opus/silk/float/SigProc_FLP.h:169:25" call-funcname="silk_float2short_array" call-argnr="2" file="/home/hbina/git/godot/thirdparty/opus/silk/float/pitch_analysis_core_FLP.c" line="139" col="9" my-id="/home/hbina/git/godot/thirdparty/opus/silk/float/SigProc_FLP.h:86:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="silk_pitch_analysis_core_FLP" lineNumber="67"/>
    <functiondecl functionName="silk_P_Ana_calc_corr_st3" lineNumber="492"/>
    <functiondecl functionName="silk_P_Ana_calc_energy_st3" lineNumber="559"/>
    <functioncall functionName="C"/>
    <functioncall functionName="CBimax"/>
    <functioncall functionName="CBimax_new"/>
    <functioncall functionName="CCmax_new"/>
    <functioncall functionName="CCmax_new_b"/>
    <functioncall functionName="Fs_kHz"/>
    <functioncall functionName="Lag_CB_ptr"/>
    <functioncall functionName="Lag_range_ptr"/>
    <functioncall functionName="PE_D_SRCH_LENGTH"/>
    <functioncall functionName="PE_MAX_NB_SUBFR"/>
    <functioncall functionName="PE_NB_CBKS_STAGE2"/>
    <functioncall functionName="PE_NB_CBKS_STAGE2_10MS"/>
    <functioncall functionName="PE_NB_CBKS_STAGE2_EXT"/>
    <functioncall functionName="PE_NB_CBKS_STAGE3_10MS"/>
    <functioncall functionName="PE_NB_CBKS_STAGE3_MAX"/>
    <functioncall functionName="PE_NB_STAGE3_LAGS"/>
    <functioncall functionName="arch"/>
    <functioncall functionName="basis_ptr"/>
    <functioncall functionName="break"/>
    <functioncall functionName="cbk_size"/>
    <functioncall functionName="celt_pitch_xcorr"/>
    <functioncall functionName="complexity"/>
    <functioncall functionName="cross_corr"/>
    <functioncall functionName="cross_corr_st3"/>
    <functioncall functionName="d"/>
    <functioncall functionName="d_srch"/>
    <functioncall functionName="delta"/>
    <functioncall functionName="double"/>
    <functioncall functionName="energies_st3"/>
    <functioncall functionName="energy"/>
    <functioncall functionName="energy_tmp"/>
    <functioncall functionName="exp"/>
    <functioncall functionName="filt_state"/>
    <functioncall functionName="float2int"/>
    <functioncall functionName="for"/>
    <functioncall functionName="frame"/>
    <functioncall functionName="frame_12_FIX"/>
    <functioncall functionName="frame_16_FIX"/>
    <functioncall functionName="frame_4_FIX"/>
    <functioncall functionName="frame_4kHz"/>
    <functioncall functionName="frame_8_FIX"/>
    <functioncall functionName="frame_8kHz"/>
    <functioncall functionName="frame_length"/>
    <functioncall functionName="frame_length_4kHz"/>
    <functioncall functionName="frame_length_8kHz"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="j"/>
    <functioncall functionName="k"/>
    <functioncall functionName="lag"/>
    <functioncall functionName="lag_counter"/>
    <functioncall functionName="lag_high"/>
    <functioncall functionName="lag_low"/>
    <functioncall functionName="length_d_comp"/>
    <functioncall functionName="length_d_srch"/>
    <functioncall functionName="log10"/>
    <functioncall functionName="matrix_ptr"/>
    <functioncall functionName="max_lag"/>
    <functioncall functionName="max_lag_4kHz"/>
    <functioncall functionName="min_lag"/>
    <functioncall functionName="min_lag_4kHz"/>
    <functioncall functionName="min_lag_8kHz"/>
    <functioncall functionName="nb_subfr"/>
    <functioncall functionName="normalizer"/>
    <functioncall functionName="opus_int"/>
    <functioncall functionName="opus_int16"/>
    <functioncall functionName="opus_int32"/>
    <functioncall functionName="opus_int8"/>
    <functioncall functionName="pitch_out"/>
    <functioncall functionName="prevLag"/>
    <functioncall functionName="prevLag_log2"/>
    <functioncall functionName="return"/>
    <functioncall functionName="sf_length"/>
    <functioncall functionName="sf_length_4kHz"/>
    <functioncall functionName="sf_length_8kHz"/>
    <functioncall functionName="silk_LIMIT"/>
    <functioncall functionName="silk_LIMIT_int"/>
    <functioncall functionName="silk_LSHIFT"/>
    <functioncall functionName="silk_P_Ana_calc_corr_st3"/>
    <functioncall functionName="silk_P_Ana_calc_energy_st3"/>
    <functioncall functionName="silk_RSHIFT"/>
    <functioncall functionName="silk_RSHIFT_ROUND"/>
    <functioncall functionName="silk_SAT16"/>
    <functioncall functionName="silk_SMULBB"/>
    <functioncall functionName="silk_assert"/>
    <functioncall functionName="silk_energy_FLP"/>
    <functioncall functionName="silk_float"/>
    <functioncall functionName="silk_float2short_array"/>
    <functioncall functionName="silk_inner_product_FLP"/>
    <functioncall functionName="silk_insertion_sort_decreasing_FLP"/>
    <functioncall functionName="silk_log2"/>
    <functioncall functionName="silk_max_int"/>
    <functioncall functionName="silk_memset"/>
    <functioncall functionName="silk_min_int"/>
    <functioncall functionName="silk_resampler_down2"/>
    <functioncall functionName="silk_resampler_down2_3"/>
    <functioncall functionName="silk_short2float_array"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="start_lag"/>
    <functioncall functionName="target_ptr"/>
    <functioncall functionName="x"/>
    <functioncall functionName="xcorr"/>
  </FileInfo>
</analyzerinfo>
