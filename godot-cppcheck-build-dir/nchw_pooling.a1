<?xml version="1.0"?>
<analyzerinfo checksum="2041559014">
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;cpu_primitive_t&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;cpu_primitive_t&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.cpp" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/cpu_primitive.hpp" line="37" column="5"/>
            <symbol>cpu_primitive_t</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;nchw_pooling_bwd_t &lt; data_type :: f32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;nchw_pooling_bwd_t &lt; data_type :: f32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.cpp" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.hpp" line="128" column="5"/>
            <symbol>nchw_pooling_bwd_t &lt; data_type :: f32 &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;nchw_pooling_fwd_t &lt; data_type :: f32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;nchw_pooling_fwd_t &lt; data_type :: f32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.cpp" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.hpp" line="66" column="5"/>
            <symbol>nchw_pooling_fwd_t &lt; data_type :: f32 &gt;</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.cpp" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.hpp" line="138" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.cpp" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/nchw_pooling.hpp" line="76" column="38"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="execute_backward" lineNumber="173"/>
    <functiondecl functionName="execute_forward" lineNumber="33"/>
    <functioncall functionName="C"/>
    <functioncall functionName="DECLARE_COMMON_PD_T"/>
    <functioncall functionName="ID"/>
    <functioncall functionName="IH"/>
    <functioncall functionName="IMPLICATION"/>
    <functioncall functionName="IW"/>
    <functioncall functionName="KD"/>
    <functioncall functionName="KH"/>
    <functioncall functionName="KSD"/>
    <functioncall functionName="KSH"/>
    <functioncall functionName="KSW"/>
    <functioncall functionName="KW"/>
    <functioncall functionName="MB"/>
    <functioncall functionName="MKLDNN_ARG_DIFF_DST"/>
    <functioncall functionName="MKLDNN_ARG_DIFF_SRC"/>
    <functioncall functionName="MKLDNN_ARG_DST"/>
    <functioncall functionName="MKLDNN_ARG_SCRATCHPAD"/>
    <functioncall functionName="MKLDNN_ARG_SRC"/>
    <functioncall functionName="MKLDNN_ARG_WORKSPACE"/>
    <functioncall functionName="OD"/>
    <functioncall functionName="OH"/>
    <functioncall functionName="OW"/>
    <functioncall functionName="alg_kind"/>
    <functioncall functionName="apd"/>
    <functioncall functionName="apply_offset"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="attr"/>
    <functioncall functionName="b_c"/>
    <functioncall functionName="blk_off"/>
    <functioncall functionName="blocking"/>
    <functioncall functionName="blocking_desc"/>
    <functioncall functionName="c"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="cpu_primitive_t"/>
    <functioncall functionName="create_scratchpad"/>
    <functioncall functionName="ctx"/>
    <functioncall functionName="d"/>
    <functioncall functionName="desc"/>
    <functioncall functionName="desired_fmt_tag"/>
    <functioncall functionName="diff_dst_md"/>
    <functioncall functionName="diff_src_md"/>
    <functioncall functionName="diff_src_offset"/>
    <functioncall functionName="dst_md"/>
    <functioncall functionName="dst_offset"/>
    <functioncall functionName="everyone_is"/>
    <functioncall functionName="execute_backward"/>
    <functioncall functionName="execute_forward"/>
    <functioncall functionName="f32"/>
    <functioncall functionName="false"/>
    <functioncall functionName="float"/>
    <functioncall functionName="for"/>
    <functioncall functionName="free"/>
    <functioncall functionName="get"/>
    <functioncall functionName="global_scratchpad_"/>
    <functioncall functionName="grantor"/>
    <functioncall functionName="has_default_values"/>
    <functioncall functionName="has_zero_dim_memory"/>
    <functioncall functionName="id_start"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ih_start"/>
    <functioncall functionName="index"/>
    <functioncall functionName="init_default_ws"/>
    <functioncall functionName="input"/>
    <functioncall functionName="int"/>
    <functioncall functionName="is_fwd"/>
    <functioncall functionName="iw"/>
    <functioncall functionName="iw_start"/>
    <functioncall functionName="kd"/>
    <functioncall functionName="ker_avg"/>
    <functioncall functionName="ker_max"/>
    <functioncall functionName="ker_zero"/>
    <functioncall functionName="kh"/>
    <functioncall functionName="kw"/>
    <functioncall functionName="library"/>
    <functioncall functionName="long"/>
    <functioncall functionName="lowest"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="mb"/>
    <functioncall functionName="memory_desc_matches_tag"/>
    <functioncall functionName="min"/>
    <functioncall functionName="ncdhw"/>
    <functioncall functionName="nchw"/>
    <functioncall functionName="nchw_pooling_bwd_t &lt; data_type :: f32 &gt;"/>
    <functioncall functionName="nchw_pooling_fwd_t &lt; data_type :: f32 &gt;"/>
    <functioncall functionName="ndims"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="num_summands"/>
    <functioncall functionName="od"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="oh"/>
    <functioncall functionName="ok"/>
    <functioncall functionName="one_of"/>
    <functioncall functionName="out_round"/>
    <functioncall functionName="output"/>
    <functioncall functionName="ow"/>
    <functioncall functionName="padF"/>
    <functioncall functionName="padFront"/>
    <functioncall functionName="padL"/>
    <functioncall functionName="padT"/>
    <functioncall functionName="parallel_nd"/>
    <functioncall functionName="pd"/>
    <functioncall functionName="pooling_avg_exclude_padding"/>
    <functioncall functionName="pooling_avg_include_padding"/>
    <functioncall functionName="pooling_max"/>
    <functioncall functionName="primitive_t"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="scratchpad_buffer_"/>
    <functioncall functionName="scratchpad_registry"/>
    <functioncall functionName="scratchpad_size"/>
    <functioncall functionName="set_default_params"/>
    <functioncall functionName="set_ws"/>
    <functioncall functionName="src_md"/>
    <functioncall functionName="src_offset"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="undef"/>
    <functioncall functionName="use_global_scratchpad"/>
    <functioncall functionName="value"/>
    <functioncall functionName="workspace_md"/>
    <functioncall functionName="ws"/>
    <functioncall functionName="ws_d"/>
    <functioncall functionName="ws_offset"/>
    <functioncall functionName="ws_ok"/>
  </FileInfo>
</analyzerinfo>
