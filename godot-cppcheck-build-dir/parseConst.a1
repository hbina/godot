<?xml version="1.0"?>
<analyzerinfo checksum="354572223">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermBinary::left&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermBinary::left&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1541" column="5"/>
            <symbol>TIntermBinary::left</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermBinary::right&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermBinary::right&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1541" column="5"/>
            <symbol>TIntermBinary::right</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermAggregate::optimize&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermAggregate::optimize&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1580" column="5"/>
            <symbol>TIntermAggregate::optimize</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermAggregate::debug&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermAggregate::debug&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1580" column="5"/>
            <symbol>TIntermAggregate::debug</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermAggregate::userDefined&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermAggregate::userDefined&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1581" column="5"/>
            <symbol>TIntermAggregate::userDefined</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermAggregate::optimize&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermAggregate::optimize&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1581" column="5"/>
            <symbol>TIntermAggregate::optimize</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermAggregate::debug&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermAggregate::debug&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1581" column="5"/>
            <symbol>TIntermAggregate::debug</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TSymbol::uniqueId&apos; is not initialized in the constructor." verbose="Member variable &apos;TSymbol::uniqueId&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="87" column="14"/>
            <symbol>TSymbol::uniqueId</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TFunction::declaredBuiltIn&apos; is not initialized in the constructor." verbose="Member variable &apos;TFunction::declaredBuiltIn&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="244" column="14"/>
            <symbol>TFunction::declaredBuiltIn</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TCall::visited&apos; is not initialized in the constructor." verbose="Member variable &apos;TCall::visited&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="101" column="5"/>
            <symbol>TCall::visited</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TCall::currentPath&apos; is not initialized in the constructor." verbose="Member variable &apos;TCall::currentPath&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="101" column="5"/>
            <symbol>TCall::currentPath</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TCall::errorGiven&apos; is not initialized in the constructor." verbose="Member variable &apos;TCall::errorGiven&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="101" column="5"/>
            <symbol>TCall::errorGiven</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TCall::calleeBodyPosition&apos; is not initialized in the constructor." verbose="Member variable &apos;TCall::calleeBodyPosition&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="101" column="5"/>
            <symbol>TCall::calleeBodyPosition</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TIntermediate::resources&apos; is not initialized in the constructor." verbose="Member variable &apos;TIntermediate::resources&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="230" column="14"/>
            <symbol>TIntermediate::resources</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TParseContextBase::currentFunctionType&apos; is not initialized in the constructor." verbose="Member variable &apos;TParseContextBase::currentFunctionType&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="78" column="5"/>
            <symbol>TParseContextBase::currentFunctionType</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TParseContextBase::functionReturnsValue&apos; is not initialized in the constructor." verbose="Member variable &apos;TParseContextBase::functionReturnsValue&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="78" column="5"/>
            <symbol>TParseContextBase::functionReturnsValue</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TParseContextBase::resources&apos; is not initialized in the constructor." verbose="Member variable &apos;TParseContextBase::resources&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="78" column="5"/>
            <symbol>TParseContextBase::resources</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TParseContextBase::firstNewMember&apos; is not initialized in the constructor." verbose="Member variable &apos;TParseContextBase::firstNewMember&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="78" column="5"/>
            <symbol>TParseContextBase::firstNewMember</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TConstTraverser::size&apos; is not initialized in the constructor." verbose="Member variable &apos;TConstTraverser::size&apos; is not initialized in the constructor." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="46" column="5"/>
            <symbol>TConstTraverser::size</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;name&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1239" column="13"/>
            <symbol>name</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TShader::getStrings&apos; can be const." verbose="The member function &apos;glslang::TShader::getStrings&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="491" column="10"/>
            <symbol>glslang::TShader::getStrings</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TShader::getEnvTargetHlslFunctionality1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TShader::getEnvTargetHlslFunctionality1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="497" column="10"/>
            <symbol>glslang::TShader::getEnvTargetHlslFunctionality1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::isReadingHLSL&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::isReadingHLSL&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="212" column="10"/>
            <symbol>glslang::TParseVersions::isReadingHLSL</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;TCompiler::getLanguage&apos; can be const." verbose="The member function &apos;TCompiler::getLanguage&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="93" column="17"/>
            <symbol>TCompiler::getLanguage</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSmallArrayVector::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TSmallArrayVector::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="83" column="5"/>
            <symbol>glslang::TSmallArrayVector::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSmallArrayVector::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TSmallArrayVector::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="83" column="5"/>
            <symbol>glslang::TSmallArrayVector::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TArraySizes::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TArraySizes::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="223" column="5"/>
            <symbol>glslang::TArraySizes::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TArraySizes::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TArraySizes::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="223" column="5"/>
            <symbol>glslang::TArraySizes::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TArraySizes::setDimSize&apos; can be const." verbose="The member function &apos;glslang::TArraySizes::setDimSize&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="241" column="10"/>
            <symbol>glslang::TArraySizes::setDimSize</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TArraySizes::isOuterSpecialization&apos; can be const." verbose="The member function &apos;glslang::TArraySizes::isOuterSpecialization&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="291" column="10"/>
            <symbol>glslang::TArraySizes::isOuterSpecialization</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TType::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TType::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1408" column="5"/>
            <symbol>glslang::TType::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TType::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TType::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1408" column="5"/>
            <symbol>glslang::TType::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TConstUnion::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TConstUnion::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ConstantUnion.h" line="48" column="5"/>
            <symbol>glslang::TConstUnion::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TConstUnion::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TConstUnion::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ConstantUnion.h" line="48" column="5"/>
            <symbol>glslang::TConstUnion::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TConstUnionArray::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TConstUnionArray::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ConstantUnion.h" line="912" column="5"/>
            <symbol>glslang::TConstUnionArray::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TConstUnionArray::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TConstUnionArray::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ConstantUnion.h" line="912" column="5"/>
            <symbol>glslang::TConstUnionArray::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;TIntermNode::operatordelete&apos; can be const." verbose="The member function &apos;TIntermNode::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1029" column="5"/>
            <symbol>TIntermNode::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;TIntermNode::operatordelete[]&apos; can be const." verbose="The member function &apos;TIntermNode::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1029" column="5"/>
            <symbol>TIntermNode::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TIntermTraverser::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TIntermTraverser::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1708" column="5"/>
            <symbol>glslang::TIntermTraverser::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TIntermTraverser::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TIntermTraverser::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1708" column="5"/>
            <symbol>glslang::TIntermTraverser::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbol::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TSymbol::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="86" column="5"/>
            <symbol>glslang::TSymbol::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbol::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TSymbol::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="86" column="5"/>
            <symbol>glslang::TSymbol::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbolTableLevel::operatordelete&apos; can be const." verbose="The member function &apos;glslang::TSymbolTableLevel::operatordelete&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="399" column="5"/>
            <symbol>glslang::TSymbolTableLevel::operatordelete</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbolTableLevel::operatordelete[]&apos; can be const." verbose="The member function &apos;glslang::TSymbolTableLevel::operatordelete[]&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="399" column="5"/>
            <symbol>glslang::TSymbolTableLevel::operatordelete[]</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbolTableLevel::getPreviousDefaultPrecisions&apos; can be const." verbose="The member function &apos;glslang::TSymbolTableLevel::getPreviousDefaultPrecisions&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="541" column="10"/>
            <symbol>glslang::TSymbolTableLevel::getPreviousDefaultPrecisions</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSymbolTable::isSharedLevel&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSymbolTable::isSharedLevel&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="616" column="10"/>
            <symbol>glslang::TSymbolTable::isSharedLevel</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSymbolTable::isBuiltInLevel&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSymbolTable::isBuiltInLevel&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="617" column="10"/>
            <symbol>glslang::TSymbolTable::isBuiltInLevel</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSymbolTable::isGlobalLevel&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSymbolTable::isGlobalLevel&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="618" column="10"/>
            <symbol>glslang::TSymbolTable::isGlobalLevel</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbolTable::isEmpty&apos; can be const." verbose="The member function &apos;glslang::TSymbolTable::isEmpty&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="620" column="10"/>
            <symbol>glslang::TSymbolTable::isEmpty</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TSymbolTable::getMaxSymbolId&apos; can be const." verbose="The member function &apos;glslang::TSymbolTable::getMaxSymbolId&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="856" column="9"/>
            <symbol>glslang::TSymbolTable::getMaxSymbolId</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::setSource&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::setSource&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="383" column="10"/>
            <symbol>glslang::TIntermediate::setSource</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getSource&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getSource&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="384" column="15"/>
            <symbol>glslang::TIntermediate::getSource</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::parseConstTree&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::parseConstTree&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="435" column="10"/>
            <location file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="190" column="21"/>
            <symbol>glslang::TIntermediate::parseConstTree</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TIntermediate::getBinaryDoubleOutput&apos; can be const." verbose="The member function &apos;glslang::TIntermediate::getBinaryDoubleOutput&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="761" column="10"/>
            <symbol>glslang::TIntermediate::getBinaryDoubleOutput</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getHlslFunctionality1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getHlslFunctionality1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="782" column="10"/>
            <symbol>glslang::TIntermediate::getHlslFunctionality1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::usingHlslOffsets&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::usingHlslOffsets&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="783" column="10"/>
            <symbol>glslang::TIntermediate::usingHlslOffsets</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::usingHlslIoMapping&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::usingHlslIoMapping&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="784" column="10"/>
            <symbol>glslang::TIntermediate::usingHlslIoMapping</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;TInputScanner&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;TInputScanner&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="62" column="9"/>
            <symbol>TInputScanner</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;TInputScanner&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;TInputScanner&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="62" column="9"/>
            <symbol>TInputScanner</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;TShHandleBase&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;TShHandleBase&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="59" column="23"/>
            <symbol>TShHandleBase</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;TShHandleBase&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;TShHandleBase&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="59" column="23"/>
            <symbol>TShHandleBase</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;TConstUnionArray&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;TConstUnionArray&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ConstantUnion.h" line="935" column="9"/>
            <symbol>TConstUnionArray</symbol>
        </error>
        <error id="copyCtorPointerCopying" severity="warning" msg="Value of pointer &apos;unionArray&apos;, which points to allocated memory, is copied in copy constructor instead of allocating new memory." verbose="Value of pointer &apos;unionArray&apos;, which points to allocated memory, is copied in copy constructor instead of allocating new memory." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ConstantUnion.h" line="924" column="51"/>
            <symbol>unionArray</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;isMatrix&apos; is called from constructor &apos;TType(TBasicType t=EbtVoid,TStorageQualifier q=EvqTemporary,int vs=1,int mc=0,int mr=0,bool isVector=false)&apos; at line 1419. Dynamic binding is not used." verbose="Virtual function &apos;isMatrix&apos; is called from constructor &apos;TType(TBasicType t=EbtVoid,TStorageQualifier q=EvqTemporary,int vs=1,int mc=0,int mr=0,bool isVector=false)&apos; at line 1419. Dynamic binding is not used.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1644" column="18" info="isMatrix is a virtual function"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1419" column="42" info="Calling isMatrix"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;isMatrix&apos; is called from constructor &apos;TType(TBasicType t,TStorageQualifier q,TPrecisionQualifier p,int vs=1,int mc=0,int mr=0,bool isVector=false)&apos; at line 1432. Dynamic binding is not used." verbose="Virtual function &apos;isMatrix&apos; is called from constructor &apos;TType(TBasicType t,TStorageQualifier q,TPrecisionQualifier p,int vs=1,int mc=0,int mr=0,bool isVector=false)&apos; at line 1432. Dynamic binding is not used.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1644" column="18" info="isMatrix is a virtual function"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1432" column="42" info="Calling isMatrix"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;isStruct&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1483. Dynamic binding is not used." verbose="Virtual function &apos;isStruct&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1483. Dynamic binding is not used.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1651" column="18" info="isStruct is a virtual function"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1564" column="13" info="Calling isStruct"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1483" column="37" info="Calling shallowCopy"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;isStruct&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1494. Dynamic binding is not used." verbose="Virtual function &apos;isStruct&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1494. Dynamic binding is not used.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1651" column="18" info="isStruct is a virtual function"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1564" column="13" info="Calling isStruct"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1494" column="37" info="Calling shallowCopy"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;isStruct&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1498. Dynamic binding is not used." verbose="Virtual function &apos;isStruct&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1498. Dynamic binding is not used.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1651" column="18" info="isStruct is a virtual function"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1564" column="13" info="Calling isStruct"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1498" column="37" info="Calling shallowCopy"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;isVector&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1509. Dynamic binding is not used." verbose="Virtual function &apos;isVector&apos; is called from constructor &apos;TType(const TType&amp;type,int derefIndex,bool rowMajor=false)&apos; at line 1509. Dynamic binding is not used.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1643" column="18" info="isVector is a virtual function"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1509" column="48" info="Calling isVector"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;TParseContext&apos; defines member variable with name &apos;resources&apos; also defined in its parent class &apos;TParseContextBase&apos;." verbose="The class &apos;TParseContext&apos; defines member variable with name &apos;resources&apos; also defined in its parent class &apos;TParseContextBase&apos;." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="466" column="22" info="Derived variable &apos;TParseContext::resources&apos;"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="201" column="22" info="Parent variable &apos;TParseContextBase::resources&apos;"/>
            <symbol>TParseContext</symbol>
            <symbol>resources</symbol>
            <symbol>TParseContextBase</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;TParseContext&apos; defines member variable with name &apos;limits&apos; also defined in its parent class &apos;TParseContextBase&apos;." verbose="The class &apos;TParseContext&apos; defines member variable with name &apos;limits&apos; also defined in its parent class &apos;TParseContextBase&apos;." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="467" column="14" info="Derived variable &apos;TParseContext::limits&apos;"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="202" column="14" info="Parent variable &apos;TParseContextBase::limits&apos;"/>
            <symbol>TParseContext</symbol>
            <symbol>limits</symbol>
            <symbol>TParseContextBase</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TType&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TType&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1469" column="5"/>
            <symbol>TType</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TIntermTyped&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TIntermTyped&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1083" column="5"/>
            <symbol>TIntermTyped</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TIntermTyped&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TIntermTyped&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1084" column="5"/>
            <symbol>TIntermTyped</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TIntermOperator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TIntermOperator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1525" column="5"/>
            <symbol>TIntermOperator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TIntermBinary&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TIntermBinary&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1541" column="5"/>
            <symbol>TIntermBinary</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TIntermUnary&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TIntermUnary&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1561" column="5"/>
            <symbol>TIntermUnary</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TIntermAggregate&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TIntermAggregate&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1581" column="5"/>
            <symbol>TIntermAggregate</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TCompiler * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TCompiler * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TCompiler * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TCompiler * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TCompiler * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TCompiler * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TShHandleBase * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TShHandleBase * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TShHandleBase * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TShHandleBase * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TShHandleBase * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TShHandleBase * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TArraySize &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TArraySize &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TArraySize &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TArraySize &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TArraySize &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TArraySize &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TTypeLoc &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TTypeLoc &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TTypeLoc &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TTypeLoc &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TTypeLoc &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TTypeLoc &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TConstUnion &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TConstUnion &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TConstUnion &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TConstUnion &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TConstUnion &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TConstUnion &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TIntermNode * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TIntermNode * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TIntermNode * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TIntermNode * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TIntermNode * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TIntermNode * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TStorageQualifier &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TStorageQualifier &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TStorageQualifier &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TStorageQualifier &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TStorageQualifier &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TStorageQualifier &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; const char * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; const char * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; const char * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; const char * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; const char * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; const char * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TVector &lt; const char * &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TVector &lt; const char * &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TVector &lt; const char * &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TVector &lt; const char * &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TVector &lt; const char * &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TVector &lt; const char * &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TParameter &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TParameter &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TParameter &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TParameter &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TParameter &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TParameter &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; const TFunction * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; const TFunction * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; const TFunction * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; const TFunction * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; const TFunction * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; const TFunction * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TSymbol * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TSymbol * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TSymbol * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TSymbol * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TSymbol * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TSymbol * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TIntermTyped * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TIntermTyped * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="184" column="5"/>
            <symbol>TVector &lt; TIntermTyped * &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TVector &lt; TIntermTyped * &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TVector &lt; TIntermTyped * &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="185" column="5"/>
            <symbol>TVector &lt; TIntermTyped * &gt;</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAsUniformMap&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAsUniformMap&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="77" column="26" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="63" column="26" info="Virtual function in base class"/>
            <symbol>getAsUniformMap</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAsCompiler&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAsCompiler&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="98" column="24" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="61" column="24" info="Virtual function in base class"/>
            <symbol>getAsCompiler</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAsLinker&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAsLinker&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="131" column="22" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/ShHandle.h" line="62" column="22" info="Virtual function in base class"/>
            <symbol>getAsLinker</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;clone&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;clone&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="165" column="24" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="88" column="22" info="Virtual function in base class"/>
            <symbol>clone</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAsVariable&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAsVariable&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="168" column="24" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="102" column="24" info="Virtual function in base class"/>
            <symbol>getAsVariable</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAsVariable&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAsVariable&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="169" column="30" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="103" column="30" info="Virtual function in base class"/>
            <symbol>getAsVariable</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="170" column="26" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="105" column="26" info="Virtual function in base class"/>
            <symbol>getType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getWritableType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getWritableType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="171" column="20" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="106" column="20" info="Virtual function in base class"/>
            <symbol>getWritableType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;dump&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;dump&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="200" column="18" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="121" column="18" info="Virtual function in base class"/>
            <symbol>dump</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;error&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;error&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="101" column="27" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="185" column="25" info="Virtual function in base class"/>
            <symbol>error</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;warn&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;warn&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="103" column="28" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="187" column="26" info="Virtual function in base class"/>
            <symbol>warn</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ppError&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ppError&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="105" column="25" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="189" column="25" info="Virtual function in base class"/>
            <symbol>ppError</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ppWarn&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ppWarn&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/ParseHelper.h" line="107" column="26" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="191" column="25" info="Virtual function in base class"/>
            <symbol>ppWarn</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;visitConstantUnion&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;visitConstantUnion&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="51" column="18" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1719" column="18" info="Virtual function in base class"/>
            <symbol>visitConstantUnion</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;visitAggregate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;visitAggregate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="52" column="18" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1723" column="18" info="Virtual function in base class"/>
            <symbol>visitAggregate</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;rv&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;rv&apos;. The initialized value is overwritten before it is read." cwe="563">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="2339" column="16" info="rv is overwritten"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="2337" column="17" info="rv is initialized"/>
            <symbol>rv</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="2214" column="97"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="93" column="68"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:256:10" call-funcname="addInnerSize" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="255" col="44" call-argexpr="nullptr" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="415" col="45" call-argexpr="buf" call-argvaluetype="7" call-argvalue="20"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:449:10" call-funcname="insertAnonymousMembers" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="417" col="42" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:646:10" call-funcname="pop" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="592" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="590" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:594:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:599:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:794:9" call-funcname="getReflectionIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="823" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:823:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:795:9" call-funcname="getReflectionPipeIOIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="826" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:825:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="74" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:74:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="84" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:84:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="107" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:105:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="113" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:110:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="173" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:171:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="180" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:178:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="280" col="26" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:278:18" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" call-funcname="copyUpDeferredInsert" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="722" col="25" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:720:14" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:174:10" call-funcname="addProcess" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="201" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:198:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:778:10" my-argnr="1" my-argname="shader" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="778" col="46" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:361:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="363" col="26" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:367:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="367" col="77" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:738:10" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="740" col="28" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:744:9" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="746" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:128:10" my-argnr="2" my-argname="n" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="131" col="32" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:52:13" my-argnr="1" my-argname="node1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1767" col="12" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" my-argnr="1" my-argname="shared" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="706" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:822:10" my-argnr="1" my-argname="name" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="822" col="87" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp:52:18" my-argnr="2" my-argname="node" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="73" col="11" value="0"/>
  </FileInfo>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::clearReturnStruct&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::clearReturnStruct&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="111" column="10"/>
            <symbol>glslang::TSampler::clearReturnStruct</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::hasReturnStruct&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::hasReturnStruct&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="112" column="10"/>
            <symbol>glslang::TSampler::hasReturnStruct</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::getStructReturnIndex&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::getStructReturnIndex&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="113" column="14"/>
            <symbol>glslang::TSampler::getStructReturnIndex</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;glslang::TIntermediate::usingHlslIoMapping&apos; can be const." verbose="The member function &apos;glslang::TIntermediate::usingHlslIoMapping&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="780" column="10"/>
            <symbol>glslang::TIntermediate::usingHlslIoMapping</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:256:10" call-funcname="addInnerSize" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="255" col="44" call-argexpr="nullptr" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="415" col="45" call-argexpr="buf" call-argvaluetype="7" call-argvalue="20"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:449:10" call-funcname="insertAnonymousMembers" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="417" col="42" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:646:10" call-funcname="pop" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="592" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="590" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:594:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:599:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:794:9" call-funcname="getReflectionIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="823" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:823:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:795:9" call-funcname="getReflectionPipeIOIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="826" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:825:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="74" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:74:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="84" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:84:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="107" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:105:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="113" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:110:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="173" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:171:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="180" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:178:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="280" col="26" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:278:18" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" call-funcname="copyUpDeferredInsert" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="722" col="25" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:720:14" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:174:10" call-funcname="addProcess" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="201" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:198:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:778:10" my-argnr="1" my-argname="shader" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="778" col="46" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:361:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="363" col="26" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:367:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="367" col="77" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:738:10" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="740" col="28" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:744:9" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="746" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:128:10" my-argnr="2" my-argname="n" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="131" col="32" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:52:13" my-argnr="1" my-argname="node1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1767" col="12" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" my-argnr="1" my-argname="shared" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="706" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:822:10" my-argnr="1" my-argname="name" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="822" col="87" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp:52:18" my-argnr="2" my-argname="node" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="73" col="11" value="0"/>
  </FileInfo>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::isEsProfile&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::isEsProfile&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="74" column="10"/>
            <symbol>glslang::TParseVersions::isEsProfile</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::initializeExtensionBehavior&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::initializeExtensionBehavior&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="91" column="10"/>
            <symbol>glslang::TParseVersions::initializeExtensionBehavior</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::checkDeprecated&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::checkDeprecated&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="92" column="10"/>
            <symbol>glslang::TParseVersions::checkDeprecated</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::requireNotRemoved&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::requireNotRemoved&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="93" column="10"/>
            <symbol>glslang::TParseVersions::requireNotRemoved</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::requireExtensions&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::requireExtensions&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="94" column="10"/>
            <symbol>glslang::TParseVersions::requireExtensions</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::ppRequireExtensions&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::ppRequireExtensions&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="96" column="10"/>
            <symbol>glslang::TParseVersions::ppRequireExtensions</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::getExtensionBehavior&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::getExtensionBehavior&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="98" column="24"/>
            <symbol>glslang::TParseVersions::getExtensionBehavior</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::extensionTurnedOn&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::extensionTurnedOn&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="99" column="10"/>
            <symbol>glslang::TParseVersions::extensionTurnedOn</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::extensionsTurnedOn&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::extensionsTurnedOn&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="100" column="10"/>
            <symbol>glslang::TParseVersions::extensionsTurnedOn</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::updateExtensionBehavior&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::updateExtensionBehavior&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="101" column="10"/>
            <symbol>glslang::TParseVersions::updateExtensionBehavior</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::updateExtensionBehavior&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::updateExtensionBehavior&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="102" column="10"/>
            <symbol>glslang::TParseVersions::updateExtensionBehavior</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::checkExtensionStage&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::checkExtensionStage&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="103" column="10"/>
            <symbol>glslang::TParseVersions::checkExtensionStage</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::fullIntegerCheck&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::fullIntegerCheck&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="104" column="10"/>
            <symbol>glslang::TParseVersions::fullIntegerCheck</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::doubleCheck&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::doubleCheck&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="105" column="10"/>
            <symbol>glslang::TParseVersions::doubleCheck</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::float16Arithmetic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::float16Arithmetic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="106" column="10"/>
            <symbol>glslang::TParseVersions::float16Arithmetic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::requireFloat16Arithmetic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::requireFloat16Arithmetic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="107" column="10"/>
            <symbol>glslang::TParseVersions::requireFloat16Arithmetic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::int16Arithmetic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::int16Arithmetic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="108" column="10"/>
            <symbol>glslang::TParseVersions::int16Arithmetic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::requireInt16Arithmetic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::requireInt16Arithmetic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="109" column="10"/>
            <symbol>glslang::TParseVersions::requireInt16Arithmetic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::int8Arithmetic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::int8Arithmetic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="110" column="10"/>
            <symbol>glslang::TParseVersions::int8Arithmetic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::requireInt8Arithmetic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::requireInt8Arithmetic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="111" column="10"/>
            <symbol>glslang::TParseVersions::requireInt8Arithmetic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::int64Check&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::int64Check&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="112" column="10"/>
            <symbol>glslang::TParseVersions::int64Check</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::explicitFloat32Check&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::explicitFloat32Check&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="113" column="10"/>
            <symbol>glslang::TParseVersions::explicitFloat32Check</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::explicitFloat64Check&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::explicitFloat64Check&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="114" column="10"/>
            <symbol>glslang::TParseVersions::explicitFloat64Check</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::relaxedErrors&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::relaxedErrors&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="115" column="10"/>
            <symbol>glslang::TParseVersions::relaxedErrors</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::suppressWarnings&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::suppressWarnings&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="116" column="10"/>
            <symbol>glslang::TParseVersions::suppressWarnings</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::isForwardCompatible&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::isForwardCompatible&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="117" column="10"/>
            <symbol>glslang::TParseVersions::isForwardCompatible</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::warn&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::warn&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="178" column="20"/>
            <symbol>glslang::TParseVersions::warn</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TParseVersions::ppWarn&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TParseVersions::ppWarn&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="182" column="18"/>
            <symbol>glslang::TParseVersions::ppWarn</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::is1D&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::is1D&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="85" column="10"/>
            <symbol>glslang::TSampler::is1D</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isBuffer&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isBuffer&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="86" column="10"/>
            <symbol>glslang::TSampler::isBuffer</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isRect&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isRect&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="87" column="10"/>
            <symbol>glslang::TSampler::isRect</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isSubpass&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isSubpass&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="88" column="10"/>
            <symbol>glslang::TSampler::isSubpass</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isCombined&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isCombined&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="89" column="10"/>
            <symbol>glslang::TSampler::isCombined</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isImage&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isImage&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="90" column="10"/>
            <symbol>glslang::TSampler::isImage</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isImageClass&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isImageClass&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="91" column="10"/>
            <symbol>glslang::TSampler::isImageClass</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isMultiSample&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isMultiSample&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="92" column="10"/>
            <symbol>glslang::TSampler::isMultiSample</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isExternal&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isExternal&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="93" column="10"/>
            <symbol>glslang::TSampler::isExternal</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::setExternal&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::setExternal&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="94" column="10"/>
            <symbol>glslang::TSampler::setExternal</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TSampler::isYuv&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TSampler::isYuv&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="95" column="10"/>
            <symbol>glslang::TSampler::isYuv</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::clearMemory&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::clearMemory&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="527" column="10"/>
            <symbol>glslang::TQualifier::clearMemory</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isWriteOnly&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isWriteOnly&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="558" column="10"/>
            <symbol>glslang::TQualifier::isWriteOnly</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isReadOnly&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isReadOnly&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="559" column="10"/>
            <symbol>glslang::TQualifier::isReadOnly</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isRestrict&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isRestrict&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="560" column="10"/>
            <symbol>glslang::TQualifier::isRestrict</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isCoherent&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isCoherent&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="561" column="10"/>
            <symbol>glslang::TQualifier::isCoherent</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isVolatile&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isVolatile&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="562" column="10"/>
            <symbol>glslang::TQualifier::isVolatile</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isSample&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isSample&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="563" column="10"/>
            <symbol>glslang::TQualifier::isSample</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isMemory&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isMemory&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="564" column="10"/>
            <symbol>glslang::TQualifier::isMemory</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isMemoryQualifierImageAndSSBOOnly&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isMemoryQualifierImageAndSSBOOnly&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="565" column="10"/>
            <symbol>glslang::TQualifier::isMemoryQualifierImageAndSSBOOnly</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::bufferReferenceNeedsVulkanMemoryModel&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::bufferReferenceNeedsVulkanMemoryModel&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="566" column="10"/>
            <symbol>glslang::TQualifier::bufferReferenceNeedsVulkanMemoryModel</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isExplicitInterpolation&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isExplicitInterpolation&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="568" column="10"/>
            <symbol>glslang::TQualifier::isExplicitInterpolation</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isPatch&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isPatch&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="570" column="10"/>
            <symbol>glslang::TQualifier::isPatch</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isNoContraction&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isNoContraction&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="571" column="10"/>
            <symbol>glslang::TQualifier::isNoContraction</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::setNoContraction&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::setNoContraction&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="572" column="10"/>
            <symbol>glslang::TQualifier::setNoContraction</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isPervertexNV&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isPervertexNV&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="573" column="10"/>
            <symbol>glslang::TQualifier::isPervertexNV</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isPerView&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isPerView&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="735" column="10"/>
            <symbol>glslang::TQualifier::isPerView</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isTaskMemory&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isTaskMemory&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="736" column="10"/>
            <symbol>glslang::TQualifier::isTaskMemory</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isArrayedIo&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isArrayedIo&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="737" column="10"/>
            <symbol>glslang::TQualifier::isArrayedIo</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasOffset&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasOffset&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="931" column="10"/>
            <symbol>glslang::TQualifier::hasOffset</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isNonPerspective&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isNonPerspective&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="932" column="10"/>
            <symbol>glslang::TQualifier::isNonPerspective</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasIndex&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasIndex&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="933" column="10"/>
            <symbol>glslang::TQualifier::hasIndex</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::getIndex&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::getIndex&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="934" column="14"/>
            <symbol>glslang::TQualifier::getIndex</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasComponent&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasComponent&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="935" column="10"/>
            <symbol>glslang::TQualifier::hasComponent</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasStream&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasStream&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="936" column="10"/>
            <symbol>glslang::TQualifier::hasStream</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasFormat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasFormat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="937" column="10"/>
            <symbol>glslang::TQualifier::hasFormat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasXfb&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasXfb&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="938" column="10"/>
            <symbol>glslang::TQualifier::hasXfb</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasXfbBuffer&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasXfbBuffer&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="939" column="10"/>
            <symbol>glslang::TQualifier::hasXfbBuffer</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasXfbStride&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasXfbStride&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="940" column="10"/>
            <symbol>glslang::TQualifier::hasXfbStride</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasXfbOffset&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasXfbOffset&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="941" column="10"/>
            <symbol>glslang::TQualifier::hasXfbOffset</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasAttachment&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasAttachment&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="942" column="10"/>
            <symbol>glslang::TQualifier::hasAttachment</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::getFormat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::getFormat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="943" column="19"/>
            <symbol>glslang::TQualifier::getFormat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isPushConstant&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isPushConstant&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="944" column="10"/>
            <symbol>glslang::TQualifier::isPushConstant</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isShaderRecordNV&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isShaderRecordNV&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="945" column="10"/>
            <symbol>glslang::TQualifier::isShaderRecordNV</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasBufferReference&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasBufferReference&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="946" column="10"/>
            <symbol>glslang::TQualifier::hasBufferReference</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::hasBufferReferenceAlign&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::hasBufferReferenceAlign&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="947" column="10"/>
            <symbol>glslang::TQualifier::hasBufferReferenceAlign</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TQualifier::isNonUniform&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TQualifier::isNonUniform&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="948" column="10"/>
            <symbol>glslang::TQualifier::isNonUniform</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TShaderQualifiers::getDepth&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TShaderQualifiers::getDepth&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1224" column="18"/>
            <symbol>glslang::TShaderQualifiers::getDepth</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TShaderQualifiers::hasBlendEquation&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TShaderQualifiers::hasBlendEquation&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1261" column="10"/>
            <symbol>glslang::TShaderQualifiers::hasBlendEquation</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TPublicType::isCoopmat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TPublicType::isCoopmat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1346" column="10"/>
            <symbol>glslang::TPublicType::isCoopmat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::isArrayOfArrays&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::isArrayOfArrays&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1630" column="10"/>
            <symbol>glslang::TType::isArrayOfArrays</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::isAtomic&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::isAtomic&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1686" column="10"/>
            <symbol>glslang::TType::isAtomic</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::isCoopMat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::isCoopMat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1687" column="10"/>
            <symbol>glslang::TType::isCoopMat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::isReference&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::isReference&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1688" column="10"/>
            <symbol>glslang::TType::isReference</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::containsDouble&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::containsDouble&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1775" column="10"/>
            <symbol>glslang::TType::containsDouble</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::contains16BitFloat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::contains16BitFloat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1776" column="10"/>
            <symbol>glslang::TType::contains16BitFloat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::contains64BitInt&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::contains64BitInt&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1777" column="10"/>
            <symbol>glslang::TType::contains64BitInt</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::contains16BitInt&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::contains16BitInt&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1778" column="10"/>
            <symbol>glslang::TType::contains16BitInt</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::contains8BitInt&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::contains8BitInt&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1779" column="10"/>
            <symbol>glslang::TType::contains8BitInt</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::containsCoopMat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::containsCoopMat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1780" column="10"/>
            <symbol>glslang::TType::containsCoopMat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::containsReference&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::containsReference&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1781" column="10"/>
            <symbol>glslang::TType::containsReference</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::getCompleteString&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::getCompleteString&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1957" column="13"/>
            <symbol>glslang::TType::getCompleteString</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::getStorageQualifierString&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::getStorageQualifierString&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1958" column="17"/>
            <symbol>glslang::TType::getStorageQualifierString</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::getBuiltInVariableString&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::getBuiltInVariableString&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1959" column="17"/>
            <symbol>glslang::TType::getBuiltInVariableString</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::getPrecisionQualifierString&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::getPrecisionQualifierString&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1960" column="17"/>
            <symbol>glslang::TType::getPrecisionQualifierString</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::getBasicTypeString&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::getBasicTypeString&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="1961" column="13"/>
            <symbol>glslang::TType::getBasicTypeString</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TType::getBufferReferenceAlignment&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TType::getBufferReferenceAlignment&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="2361" column="18"/>
            <symbol>glslang::TType::getBufferReferenceAlignment</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::output&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::output&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="489" column="10"/>
            <symbol>glslang::TIntermediate::output</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::isEsProfile&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::isEsProfile&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="491" column="10"/>
            <symbol>glslang::TIntermediate::isEsProfile</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getXfbMode&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getXfbMode&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="492" column="10"/>
            <symbol>glslang::TIntermediate::getXfbMode</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::isMultiStream&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::isMultiStream&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="493" column="10"/>
            <symbol>glslang::TIntermediate::isMultiStream</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getOutputPrimitive&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getOutputPrimitive&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="494" column="21"/>
            <symbol>glslang::TIntermediate::getOutputPrimitive</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getPostDepthCoverage&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getPostDepthCoverage&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="495" column="10"/>
            <symbol>glslang::TIntermediate::getPostDepthCoverage</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getEarlyFragmentTests&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getEarlyFragmentTests&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="496" column="10"/>
            <symbol>glslang::TIntermediate::getEarlyFragmentTests</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getDepth&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getDepth&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="497" column="18"/>
            <symbol>glslang::TIntermediate::getDepth</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getPixelCenterInteger&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getPixelCenterInteger&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="498" column="10"/>
            <symbol>glslang::TIntermediate::getPixelCenterInteger</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::setOriginUpperLeft&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::setOriginUpperLeft&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="499" column="10"/>
            <symbol>glslang::TIntermediate::setOriginUpperLeft</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getOriginUpperLeft&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getOriginUpperLeft&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="500" column="10"/>
            <symbol>glslang::TIntermediate::getOriginUpperLeft</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getInterlockOrdering&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getInterlockOrdering&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="501" column="24"/>
            <symbol>glslang::TIntermediate::getInterlockOrdering</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getAutoMapBindings&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getAutoMapBindings&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="503" column="10"/>
            <symbol>glslang::TIntermediate::getAutoMapBindings</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getAutoMapLocations&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getAutoMapLocations&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="504" column="10"/>
            <symbol>glslang::TIntermediate::getAutoMapLocations</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getNumPushConstants&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getNumPushConstants&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="505" column="9"/>
            <symbol>glslang::TIntermediate::getNumPushConstants</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::addShaderRecordNVCount&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::addShaderRecordNVCount&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="506" column="10"/>
            <symbol>glslang::TIntermediate::addShaderRecordNVCount</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::addTaskNVCount&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::addTaskNVCount&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="507" column="10"/>
            <symbol>glslang::TIntermediate::addTaskNVCount</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::setUseVulkanMemoryModel&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::setUseVulkanMemoryModel&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="508" column="10"/>
            <symbol>glslang::TIntermediate::setUseVulkanMemoryModel</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::usingVulkanMemoryModel&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::usingVulkanMemoryModel&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="509" column="10"/>
            <symbol>glslang::TIntermediate::usingVulkanMemoryModel</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::usingPhysicalStorageBuffer&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::usingPhysicalStorageBuffer&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="510" column="10"/>
            <symbol>glslang::TIntermediate::usingPhysicalStorageBuffer</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::usingVariablePointers&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::usingVariablePointers&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="511" column="10"/>
            <symbol>glslang::TIntermediate::usingVariablePointers</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getXfbStride&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getXfbStride&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="512" column="14"/>
            <symbol>glslang::TIntermediate::getXfbStride</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::hasLayoutDerivativeModeNone&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::hasLayoutDerivativeModeNone&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="513" column="10"/>
            <symbol>glslang::TIntermediate::hasLayoutDerivativeModeNone</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getLayoutDerivativeModeNone&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getLayoutDerivativeModeNone&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="514" column="27"/>
            <symbol>glslang::TIntermediate::getLayoutDerivativeModeNone</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getArithemeticInt8Enabled&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getArithemeticInt8Enabled&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="834" column="10"/>
            <symbol>glslang::TIntermediate::getArithemeticInt8Enabled</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getArithemeticInt16Enabled&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getArithemeticInt16Enabled&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="835" column="10"/>
            <symbol>glslang::TIntermediate::getArithemeticInt16Enabled</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::getArithemeticFloat16Enabled&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::getArithemeticFloat16Enabled&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="836" column="10"/>
            <symbol>glslang::TIntermediate::getArithemeticFloat16Enabled</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;glslang::TIntermediate::extensionRequested&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;glslang::TIntermediate::extensionRequested&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="891" column="10"/>
            <symbol>glslang::TIntermediate::extensionRequested</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!isReference()&apos; is always true" verbose="Condition &apos;!isReference()&apos; is always true" cwe="571">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Types.h" line="2276" column="13" info="Condition &apos;!isReference()&apos; is always true"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:256:10" call-funcname="addInnerSize" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="255" col="44" call-argexpr="nullptr" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="415" col="45" call-argexpr="buf" call-argvaluetype="7" call-argvalue="20"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:449:10" call-funcname="insertAnonymousMembers" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="417" col="42" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:646:10" call-funcname="pop" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="592" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="590" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:594:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:599:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="74" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:74:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="84" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:84:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="107" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:105:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="113" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:110:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="173" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:171:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="180" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:178:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:176:19" call-funcname="error" call-argnr="3" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="78" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:75:10" my-argnr="3"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:176:19" call-funcname="error" call-argnr="3" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="84" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:80:10" my-argnr="6"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="280" col="26" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:278:18" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" call-funcname="copyUpDeferredInsert" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="722" col="25" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:720:14" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:174:10" call-funcname="addProcess" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="201" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:198:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:778:10" my-argnr="1" my-argname="shader" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="778" col="46" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:361:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="363" col="26" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:367:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="367" col="77" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:128:10" my-argnr="2" my-argname="n" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="131" col="32" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:52:13" my-argnr="1" my-argname="node1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1767" col="12" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" my-argnr="1" my-argname="shared" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="706" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:822:10" my-argnr="1" my-argname="name" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="822" col="87" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp:52:18" my-argnr="2" my-argname="node" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="73" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:256:10" call-funcname="addInnerSize" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="255" col="44" call-argexpr="nullptr" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="415" col="45" call-argexpr="buf" call-argvaluetype="7" call-argvalue="20"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:449:10" call-funcname="insertAnonymousMembers" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="417" col="42" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:646:10" call-funcname="pop" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="592" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="590" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:594:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:599:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="74" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:74:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="84" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:84:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="107" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:105:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="113" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:110:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="173" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:171:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="180" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:178:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:185:25" call-funcname="error" call-argnr="3" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="78" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:75:10" my-argnr="3"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:185:25" call-funcname="error" call-argnr="3" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h" line="84" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseVersions.h:80:10" my-argnr="6"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="280" col="26" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:278:18" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" call-funcname="copyUpDeferredInsert" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="722" col="25" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:720:14" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:174:10" call-funcname="addProcess" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="201" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:198:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:778:10" my-argnr="1" my-argname="shader" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="778" col="46" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:361:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="363" col="26" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:367:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="367" col="77" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:128:10" my-argnr="2" my-argname="n" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="131" col="32" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:52:13" my-argnr="1" my-argname="node1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1767" col="12" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" my-argnr="1" my-argname="shared" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="706" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:822:10" my-argnr="1" my-argname="name" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="822" col="87" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp:52:18" my-argnr="2" my-argname="node" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="73" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:73:26" call-funcname="strtoll" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="83" col="23" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:256:10" call-funcname="addInnerSize" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="255" col="44" call-argexpr="nullptr" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="415" col="45" call-argexpr="buf" call-argvaluetype="7" call-argvalue="20"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:449:10" call-funcname="insertAnonymousMembers" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="417" col="42" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:646:10" call-funcname="pop" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="592" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="590" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:594:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:599:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:794:9" call-funcname="getReflectionIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="823" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:823:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:795:9" call-funcname="getReflectionPipeIOIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="826" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:825:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:73:26" call-funcname="strtoll" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="83" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:81:26" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="74" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:74:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="84" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:84:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="107" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:105:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="113" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:110:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="173" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:171:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="180" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:178:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="280" col="26" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:278:18" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" call-funcname="copyUpDeferredInsert" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="722" col="25" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:720:14" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:174:10" call-funcname="addProcess" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="201" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:198:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:778:10" my-argnr="1" my-argname="shader" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="778" col="46" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:81:26" my-argnr="1" my-argname="str" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h" line="83" col="24" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:361:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="363" col="26" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:367:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="367" col="77" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:738:10" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="740" col="28" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:744:9" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="746" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:128:10" my-argnr="2" my-argname="n" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="131" col="32" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:52:13" my-argnr="1" my-argname="node1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1767" col="12" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" my-argnr="1" my-argname="shared" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="706" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:822:10" my-argnr="1" my-argname="name" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="822" col="87" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp:52:18" my-argnr="2" my-argname="node" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="73" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="4" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:256:10" call-funcname="addInnerSize" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="255" col="44" call-argexpr="nullptr" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="415" col="45" call-argexpr="buf" call-argvaluetype="7" call-argvalue="20"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:449:10" call-funcname="insertAnonymousMembers" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="417" col="42" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:646:10" call-funcname="pop" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="592" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="590" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:586:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="596" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:594:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:583:10" call-funcname="parse" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="602" col="16" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:599:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:794:9" call-funcname="getReflectionIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="823" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:823:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:795:9" call-funcname="getReflectionPipeIOIndex" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="826" col="65" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:825:9" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="74" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:74:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="84" col="58" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:84:20" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="107" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:105:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:123:10" call-funcname="append" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h" line="113" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/InfoSink.h:110:10" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="173" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:171:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h" line="180" col="28" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/Scan.h:178:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/Common.h:159:17" call-funcname="NewPoolTString" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="280" col="26" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:278:18" my-argnr="2"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" call-funcname="copyUpDeferredInsert" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="722" col="25" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:720:14" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:174:10" call-funcname="addProcess" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="201" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:198:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h:778:10" my-argnr="1" my-argname="shader" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Public/ShaderLang.h" line="778" col="46" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/PoolAlloc.h:220:11" my-argnr="1" my-argname="block" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/PoolAlloc.h" line="221" col="51" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:361:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="363" col="26" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:367:10" my-argnr="1" my-argname="ep" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="367" col="77" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:738:10" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="740" col="28" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:744:9" my-argnr="1" my-argname="nameStr" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="746" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:128:10" my-argnr="2" my-argname="n" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h" line="131" col="32" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/arrays.h:52:13" my-argnr="1" my-argname="node1" file="/home/hbina/git/godot/thirdparty/glslang/glslang/Include/intermediate.h" line="1767" col="12" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h:704:14" my-argnr="1" my-argname="shared" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/SymbolTable.h" line="706" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h:822:10" my-argnr="1" my-argname="name" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/localintermediate.h" line="822" col="87" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp:52:18" my-argnr="2" my-argname="node" file="/home/hbina/git/godot/thirdparty/glslang/glslang/MachineIndependent/parseConst.cpp" line="73" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="visitAggregate" lineNumber="71"/>
    <functiondecl functionName="visitConstantUnion" lineNumber="113"/>
    <functiondecl functionName="parseConstTree" lineNumber="190"/>
    <functiondecl functionName="visitAggregate" lineNumber="71"/>
    <functiondecl functionName="visitConstantUnion" lineNumber="113"/>
    <functiondecl functionName="parseConstTree" lineNumber="190"/>
    <functiondecl functionName="visitAggregate" lineNumber="71"/>
    <functiondecl functionName="visitConstantUnion" lineNumber="113"/>
    <functiondecl functionName="parseConstTree" lineNumber="190"/>
    <functiondecl functionName="visitAggregate" lineNumber="71"/>
    <functiondecl functionName="visitConstantUnion" lineNumber="113"/>
    <functiondecl functionName="parseConstTree" lineNumber="190"/>
    <functiondecl functionName="visitAggregate" lineNumber="71"/>
    <functiondecl functionName="visitConstantUnion" lineNumber="113"/>
    <functiondecl functionName="parseConstTree" lineNumber="190"/>
    <functiondecl functionName="visitAggregate" lineNumber="71"/>
    <functiondecl functionName="visitConstantUnion" lineNumber="113"/>
    <functiondecl functionName="parseConstTree" lineNumber="190"/>
    <functioncall functionName="AEP_geometry_point_size"/>
    <functioncall functionName="AEP_geometry_shader"/>
    <functioncall functionName="AEP_gpu_shader5"/>
    <functioncall functionName="AEP_primitive_bounding_box"/>
    <functioncall functionName="AEP_shader_io_blocks"/>
    <functioncall functionName="AEP_tessellation_point_size"/>
    <functioncall functionName="AEP_tessellation_shader"/>
    <functioncall functionName="AEP_texture_buffer"/>
    <functioncall functionName="AEP_texture_cube_map_array"/>
    <functioncall functionName="AnonymousPrefix"/>
    <functioncall functionName="D"/>
    <functioncall functionName="EBhDisable"/>
    <functioncall functionName="EBhDisablePartial"/>
    <functioncall functionName="EBhEnable"/>
    <functioncall functionName="EBhRequire"/>
    <functioncall functionName="EBhWarn"/>
    <functioncall functionName="EBlendAllEquations"/>
    <functioncall functionName="EBlendColorburn"/>
    <functioncall functionName="EBlendColordodge"/>
    <functioncall functionName="EBlendCount"/>
    <functioncall functionName="EBlendDarken"/>
    <functioncall functionName="EBlendDifference"/>
    <functioncall functionName="EBlendExclusion"/>
    <functioncall functionName="EBlendHardlight"/>
    <functioncall functionName="EBlendHslColor"/>
    <functioncall functionName="EBlendHslHue"/>
    <functioncall functionName="EBlendHslLuminosity"/>
    <functioncall functionName="EBlendHslSaturation"/>
    <functioncall functionName="EBlendLighten"/>
    <functioncall functionName="EBlendMultiply"/>
    <functioncall functionName="EBlendOverlay"/>
    <functioncall functionName="EBlendScreen"/>
    <functioncall functionName="EBlendSoftlight"/>
    <functioncall functionName="EEsProfile"/>
    <functioncall functionName="ENoProfile"/>
    <functioncall functionName="EOpAbs"/>
    <functioncall functionName="EOpAbsDifference"/>
    <functioncall functionName="EOpAcos"/>
    <functioncall functionName="EOpAcosh"/>
    <functioncall functionName="EOpAdd"/>
    <functioncall functionName="EOpAddAssign"/>
    <functioncall functionName="EOpAddCarry"/>
    <functioncall functionName="EOpAddInvocations"/>
    <functioncall functionName="EOpAddInvocationsExclusiveScan"/>
    <functioncall functionName="EOpAddInvocationsExclusiveScanNonUniform"/>
    <functioncall functionName="EOpAddInvocationsInclusiveScan"/>
    <functioncall functionName="EOpAddInvocationsInclusiveScanNonUniform"/>
    <functioncall functionName="EOpAddInvocationsNonUniform"/>
    <functioncall functionName="EOpAddSaturate"/>
    <functioncall functionName="EOpAll"/>
    <functioncall functionName="EOpAllInvocations"/>
    <functioncall functionName="EOpAllInvocationsEqual"/>
    <functioncall functionName="EOpAllMemoryBarrierWithGroupSync"/>
    <functioncall functionName="EOpAnd"/>
    <functioncall functionName="EOpAndAssign"/>
    <functioncall functionName="EOpAny"/>
    <functioncall functionName="EOpAnyInvocation"/>
    <functioncall functionName="EOpArrayLength"/>
    <functioncall functionName="EOpAsDouble"/>
    <functioncall functionName="EOpAsin"/>
    <functioncall functionName="EOpAsinh"/>
    <functioncall functionName="EOpAssign"/>
    <functioncall functionName="EOpAtan"/>
    <functioncall functionName="EOpAtanh"/>
    <functioncall functionName="EOpAtomicAdd"/>
    <functioncall functionName="EOpAtomicAnd"/>
    <functioncall functionName="EOpAtomicCompSwap"/>
    <functioncall functionName="EOpAtomicCounter"/>
    <functioncall functionName="EOpAtomicCounterAdd"/>
    <functioncall functionName="EOpAtomicCounterAnd"/>
    <functioncall functionName="EOpAtomicCounterCompSwap"/>
    <functioncall functionName="EOpAtomicCounterDecrement"/>
    <functioncall functionName="EOpAtomicCounterExchange"/>
    <functioncall functionName="EOpAtomicCounterIncrement"/>
    <functioncall functionName="EOpAtomicCounterMax"/>
    <functioncall functionName="EOpAtomicCounterMin"/>
    <functioncall functionName="EOpAtomicCounterOr"/>
    <functioncall functionName="EOpAtomicCounterSubtract"/>
    <functioncall functionName="EOpAtomicCounterXor"/>
    <functioncall functionName="EOpAtomicExchange"/>
    <functioncall functionName="EOpAtomicLoad"/>
    <functioncall functionName="EOpAtomicMax"/>
    <functioncall functionName="EOpAtomicMin"/>
    <functioncall functionName="EOpAtomicOr"/>
    <functioncall functionName="EOpAtomicStore"/>
    <functioncall functionName="EOpAtomicXor"/>
    <functioncall functionName="EOpAverage"/>
    <functioncall functionName="EOpAverageRounded"/>
    <functioncall functionName="EOpBallot"/>
    <functioncall functionName="EOpBarrier"/>
    <functioncall functionName="EOpBeginInvocationInterlock"/>
    <functioncall functionName="EOpBitCount"/>
    <functioncall functionName="EOpBitFieldReverse"/>
    <functioncall functionName="EOpBitfieldExtract"/>
    <functioncall functionName="EOpBitfieldInsert"/>
    <functioncall functionName="EOpBitwiseNot"/>
    <functioncall functionName="EOpBreak"/>
    <functioncall functionName="EOpCase"/>
    <functioncall functionName="EOpCeil"/>
    <functioncall functionName="EOpClamp"/>
    <functioncall functionName="EOpClip"/>
    <functioncall functionName="EOpComma"/>
    <functioncall functionName="EOpConstructBMat2x2"/>
    <functioncall functionName="EOpConstructBMat2x3"/>
    <functioncall functionName="EOpConstructBMat2x4"/>
    <functioncall functionName="EOpConstructBMat3x2"/>
    <functioncall functionName="EOpConstructBMat3x3"/>
    <functioncall functionName="EOpConstructBMat3x4"/>
    <functioncall functionName="EOpConstructBMat4x2"/>
    <functioncall functionName="EOpConstructBMat4x3"/>
    <functioncall functionName="EOpConstructBMat4x4"/>
    <functioncall functionName="EOpConstructBVec2"/>
    <functioncall functionName="EOpConstructBVec3"/>
    <functioncall functionName="EOpConstructBVec4"/>
    <functioncall functionName="EOpConstructBool"/>
    <functioncall functionName="EOpConstructCooperativeMatrix"/>
    <functioncall functionName="EOpConstructDMat2x2"/>
    <functioncall functionName="EOpConstructDMat2x3"/>
    <functioncall functionName="EOpConstructDMat2x4"/>
    <functioncall functionName="EOpConstructDMat3x2"/>
    <functioncall functionName="EOpConstructDMat3x3"/>
    <functioncall functionName="EOpConstructDMat3x4"/>
    <functioncall functionName="EOpConstructDMat4x2"/>
    <functioncall functionName="EOpConstructDMat4x3"/>
    <functioncall functionName="EOpConstructDMat4x4"/>
    <functioncall functionName="EOpConstructDVec2"/>
    <functioncall functionName="EOpConstructDVec3"/>
    <functioncall functionName="EOpConstructDVec4"/>
    <functioncall functionName="EOpConstructDouble"/>
    <functioncall functionName="EOpConstructF16Mat2x2"/>
    <functioncall functionName="EOpConstructF16Mat2x3"/>
    <functioncall functionName="EOpConstructF16Mat2x4"/>
    <functioncall functionName="EOpConstructF16Mat3x2"/>
    <functioncall functionName="EOpConstructF16Mat3x3"/>
    <functioncall functionName="EOpConstructF16Mat3x4"/>
    <functioncall functionName="EOpConstructF16Mat4x2"/>
    <functioncall functionName="EOpConstructF16Mat4x3"/>
    <functioncall functionName="EOpConstructF16Mat4x4"/>
    <functioncall functionName="EOpConstructF16Vec2"/>
    <functioncall functionName="EOpConstructF16Vec3"/>
    <functioncall functionName="EOpConstructF16Vec4"/>
    <functioncall functionName="EOpConstructFloat"/>
    <functioncall functionName="EOpConstructFloat16"/>
    <functioncall functionName="EOpConstructGuardEnd"/>
    <functioncall functionName="EOpConstructGuardStart"/>
    <functioncall functionName="EOpConstructI16Vec2"/>
    <functioncall functionName="EOpConstructI16Vec3"/>
    <functioncall functionName="EOpConstructI16Vec4"/>
    <functioncall functionName="EOpConstructI64Vec2"/>
    <functioncall functionName="EOpConstructI64Vec3"/>
    <functioncall functionName="EOpConstructI64Vec4"/>
    <functioncall functionName="EOpConstructI8Vec2"/>
    <functioncall functionName="EOpConstructI8Vec3"/>
    <functioncall functionName="EOpConstructI8Vec4"/>
    <functioncall functionName="EOpConstructIMat2x2"/>
    <functioncall functionName="EOpConstructIMat2x3"/>
    <functioncall functionName="EOpConstructIMat2x4"/>
    <functioncall functionName="EOpConstructIMat3x2"/>
    <functioncall functionName="EOpConstructIMat3x3"/>
    <functioncall functionName="EOpConstructIMat3x4"/>
    <functioncall functionName="EOpConstructIMat4x2"/>
    <functioncall functionName="EOpConstructIMat4x3"/>
    <functioncall functionName="EOpConstructIMat4x4"/>
    <functioncall functionName="EOpConstructIVec2"/>
    <functioncall functionName="EOpConstructIVec3"/>
    <functioncall functionName="EOpConstructIVec4"/>
    <functioncall functionName="EOpConstructInt"/>
    <functioncall functionName="EOpConstructInt16"/>
    <functioncall functionName="EOpConstructInt64"/>
    <functioncall functionName="EOpConstructInt8"/>
    <functioncall functionName="EOpConstructMat2x2"/>
    <functioncall functionName="EOpConstructMat2x3"/>
    <functioncall functionName="EOpConstructMat2x4"/>
    <functioncall functionName="EOpConstructMat3x2"/>
    <functioncall functionName="EOpConstructMat3x3"/>
    <functioncall functionName="EOpConstructMat3x4"/>
    <functioncall functionName="EOpConstructMat4x2"/>
    <functioncall functionName="EOpConstructMat4x3"/>
    <functioncall functionName="EOpConstructMat4x4"/>
    <functioncall functionName="EOpConstructNonuniform"/>
    <functioncall functionName="EOpConstructReference"/>
    <functioncall functionName="EOpConstructStruct"/>
    <functioncall functionName="EOpConstructTextureSampler"/>
    <functioncall functionName="EOpConstructU16Vec2"/>
    <functioncall functionName="EOpConstructU16Vec3"/>
    <functioncall functionName="EOpConstructU16Vec4"/>
    <functioncall functionName="EOpConstructU64Vec2"/>
    <functioncall functionName="EOpConstructU64Vec3"/>
    <functioncall functionName="EOpConstructU64Vec4"/>
    <functioncall functionName="EOpConstructU8Vec2"/>
    <functioncall functionName="EOpConstructU8Vec3"/>
    <functioncall functionName="EOpConstructU8Vec4"/>
    <functioncall functionName="EOpConstructUMat2x2"/>
    <functioncall functionName="EOpConstructUMat2x3"/>
    <functioncall functionName="EOpConstructUMat2x4"/>
    <functioncall functionName="EOpConstructUMat3x2"/>
    <functioncall functionName="EOpConstructUMat3x3"/>
    <functioncall functionName="EOpConstructUMat3x4"/>
    <functioncall functionName="EOpConstructUMat4x2"/>
    <functioncall functionName="EOpConstructUMat4x3"/>
    <functioncall functionName="EOpConstructUMat4x4"/>
    <functioncall functionName="EOpConstructUVec2"/>
    <functioncall functionName="EOpConstructUVec3"/>
    <functioncall functionName="EOpConstructUVec4"/>
    <functioncall functionName="EOpConstructUint"/>
    <functioncall functionName="EOpConstructUint16"/>
    <functioncall functionName="EOpConstructUint64"/>
    <functioncall functionName="EOpConstructUint8"/>
    <functioncall functionName="EOpConstructVec2"/>
    <functioncall functionName="EOpConstructVec3"/>
    <functioncall functionName="EOpConstructVec4"/>
    <functioncall functionName="EOpContinue"/>
    <functioncall functionName="EOpConvBoolToDouble"/>
    <functioncall functionName="EOpConvBoolToFloat"/>
    <functioncall functionName="EOpConvBoolToFloat16"/>
    <functioncall functionName="EOpConvBoolToInt"/>
    <functioncall functionName="EOpConvBoolToInt16"/>
    <functioncall functionName="EOpConvBoolToInt64"/>
    <functioncall functionName="EOpConvBoolToInt8"/>
    <functioncall functionName="EOpConvBoolToUint"/>
    <functioncall functionName="EOpConvBoolToUint16"/>
    <functioncall functionName="EOpConvBoolToUint64"/>
    <functioncall functionName="EOpConvBoolToUint8"/>
    <functioncall functionName="EOpConvDoubleToBool"/>
    <functioncall functionName="EOpConvDoubleToFloat"/>
    <functioncall functionName="EOpConvDoubleToFloat16"/>
    <functioncall functionName="EOpConvDoubleToInt"/>
    <functioncall functionName="EOpConvDoubleToInt16"/>
    <functioncall functionName="EOpConvDoubleToInt64"/>
    <functioncall functionName="EOpConvDoubleToInt8"/>
    <functioncall functionName="EOpConvDoubleToUint"/>
    <functioncall functionName="EOpConvDoubleToUint16"/>
    <functioncall functionName="EOpConvDoubleToUint64"/>
    <functioncall functionName="EOpConvDoubleToUint8"/>
    <functioncall functionName="EOpConvFloat16ToBool"/>
    <functioncall functionName="EOpConvFloat16ToDouble"/>
    <functioncall functionName="EOpConvFloat16ToFloat"/>
    <functioncall functionName="EOpConvFloat16ToInt"/>
    <functioncall functionName="EOpConvFloat16ToInt16"/>
    <functioncall functionName="EOpConvFloat16ToInt64"/>
    <functioncall functionName="EOpConvFloat16ToInt8"/>
    <functioncall functionName="EOpConvFloat16ToUint"/>
    <functioncall functionName="EOpConvFloat16ToUint16"/>
    <functioncall functionName="EOpConvFloat16ToUint64"/>
    <functioncall functionName="EOpConvFloat16ToUint8"/>
    <functioncall functionName="EOpConvFloatToBool"/>
    <functioncall functionName="EOpConvFloatToDouble"/>
    <functioncall functionName="EOpConvFloatToFloat16"/>
    <functioncall functionName="EOpConvFloatToInt"/>
    <functioncall functionName="EOpConvFloatToInt16"/>
    <functioncall functionName="EOpConvFloatToInt64"/>
    <functioncall functionName="EOpConvFloatToInt8"/>
    <functioncall functionName="EOpConvFloatToUint"/>
    <functioncall functionName="EOpConvFloatToUint16"/>
    <functioncall functionName="EOpConvFloatToUint64"/>
    <functioncall functionName="EOpConvFloatToUint8"/>
    <functioncall functionName="EOpConvInt16ToBool"/>
    <functioncall functionName="EOpConvInt16ToDouble"/>
    <functioncall functionName="EOpConvInt16ToFloat"/>
    <functioncall functionName="EOpConvInt16ToFloat16"/>
    <functioncall functionName="EOpConvInt16ToInt"/>
    <functioncall functionName="EOpConvInt16ToInt64"/>
    <functioncall functionName="EOpConvInt16ToInt8"/>
    <functioncall functionName="EOpConvInt16ToUint"/>
    <functioncall functionName="EOpConvInt16ToUint16"/>
    <functioncall functionName="EOpConvInt16ToUint64"/>
    <functioncall functionName="EOpConvInt16ToUint8"/>
    <functioncall functionName="EOpConvInt64ToBool"/>
    <functioncall functionName="EOpConvInt64ToDouble"/>
    <functioncall functionName="EOpConvInt64ToFloat"/>
    <functioncall functionName="EOpConvInt64ToFloat16"/>
    <functioncall functionName="EOpConvInt64ToInt"/>
    <functioncall functionName="EOpConvInt64ToInt16"/>
    <functioncall functionName="EOpConvInt64ToInt8"/>
    <functioncall functionName="EOpConvInt64ToUint"/>
    <functioncall functionName="EOpConvInt64ToUint16"/>
    <functioncall functionName="EOpConvInt64ToUint64"/>
    <functioncall functionName="EOpConvInt64ToUint8"/>
    <functioncall functionName="EOpConvInt8ToBool"/>
    <functioncall functionName="EOpConvInt8ToDouble"/>
    <functioncall functionName="EOpConvInt8ToFloat"/>
    <functioncall functionName="EOpConvInt8ToFloat16"/>
    <functioncall functionName="EOpConvInt8ToInt"/>
    <functioncall functionName="EOpConvInt8ToInt16"/>
    <functioncall functionName="EOpConvInt8ToInt64"/>
    <functioncall functionName="EOpConvInt8ToUint"/>
    <functioncall functionName="EOpConvInt8ToUint16"/>
    <functioncall functionName="EOpConvInt8ToUint64"/>
    <functioncall functionName="EOpConvInt8ToUint8"/>
    <functioncall functionName="EOpConvIntToBool"/>
    <functioncall functionName="EOpConvIntToDouble"/>
    <functioncall functionName="EOpConvIntToFloat"/>
    <functioncall functionName="EOpConvIntToFloat16"/>
    <functioncall functionName="EOpConvIntToInt16"/>
    <functioncall functionName="EOpConvIntToInt64"/>
    <functioncall functionName="EOpConvIntToInt8"/>
    <functioncall functionName="EOpConvIntToUint"/>
    <functioncall functionName="EOpConvIntToUint16"/>
    <functioncall functionName="EOpConvIntToUint64"/>
    <functioncall functionName="EOpConvIntToUint8"/>
    <functioncall functionName="EOpConvPtrToUint64"/>
    <functioncall functionName="EOpConvPtrToUvec2"/>
    <functioncall functionName="EOpConvUint16ToBool"/>
    <functioncall functionName="EOpConvUint16ToDouble"/>
    <functioncall functionName="EOpConvUint16ToFloat"/>
    <functioncall functionName="EOpConvUint16ToFloat16"/>
    <functioncall functionName="EOpConvUint16ToInt"/>
    <functioncall functionName="EOpConvUint16ToInt16"/>
    <functioncall functionName="EOpConvUint16ToInt64"/>
    <functioncall functionName="EOpConvUint16ToInt8"/>
    <functioncall functionName="EOpConvUint16ToUint"/>
    <functioncall functionName="EOpConvUint16ToUint64"/>
    <functioncall functionName="EOpConvUint16ToUint8"/>
    <functioncall functionName="EOpConvUint64ToBool"/>
    <functioncall functionName="EOpConvUint64ToDouble"/>
    <functioncall functionName="EOpConvUint64ToFloat"/>
    <functioncall functionName="EOpConvUint64ToFloat16"/>
    <functioncall functionName="EOpConvUint64ToInt"/>
    <functioncall functionName="EOpConvUint64ToInt16"/>
    <functioncall functionName="EOpConvUint64ToInt64"/>
    <functioncall functionName="EOpConvUint64ToInt8"/>
    <functioncall functionName="EOpConvUint64ToPtr"/>
    <functioncall functionName="EOpConvUint64ToUint"/>
    <functioncall functionName="EOpConvUint64ToUint16"/>
    <functioncall functionName="EOpConvUint64ToUint8"/>
    <functioncall functionName="EOpConvUint8ToBool"/>
    <functioncall functionName="EOpConvUint8ToDouble"/>
    <functioncall functionName="EOpConvUint8ToFloat"/>
    <functioncall functionName="EOpConvUint8ToFloat16"/>
    <functioncall functionName="EOpConvUint8ToInt"/>
    <functioncall functionName="EOpConvUint8ToInt16"/>
    <functioncall functionName="EOpConvUint8ToInt64"/>
    <functioncall functionName="EOpConvUint8ToInt8"/>
    <functioncall functionName="EOpConvUint8ToUint"/>
    <functioncall functionName="EOpConvUint8ToUint16"/>
    <functioncall functionName="EOpConvUint8ToUint64"/>
    <functioncall functionName="EOpConvUintToBool"/>
    <functioncall functionName="EOpConvUintToDouble"/>
    <functioncall functionName="EOpConvUintToFloat"/>
    <functioncall functionName="EOpConvUintToFloat16"/>
    <functioncall functionName="EOpConvUintToInt"/>
    <functioncall functionName="EOpConvUintToInt16"/>
    <functioncall functionName="EOpConvUintToInt64"/>
    <functioncall functionName="EOpConvUintToInt8"/>
    <functioncall functionName="EOpConvUintToUint16"/>
    <functioncall functionName="EOpConvUintToUint64"/>
    <functioncall functionName="EOpConvUintToUint8"/>
    <functioncall functionName="EOpConvUvec2ToPtr"/>
    <functioncall functionName="EOpCooperativeMatrixLoad"/>
    <functioncall functionName="EOpCooperativeMatrixMulAdd"/>
    <functioncall functionName="EOpCooperativeMatrixStore"/>
    <functioncall functionName="EOpCopyObject"/>
    <functioncall functionName="EOpCos"/>
    <functioncall functionName="EOpCosh"/>
    <functioncall functionName="EOpCountLeadingZeros"/>
    <functioncall functionName="EOpCountTrailingZeros"/>
    <functioncall functionName="EOpCross"/>
    <functioncall functionName="EOpCubeFaceCoord"/>
    <functioncall functionName="EOpCubeFaceIndex"/>
    <functioncall functionName="EOpD3DCOLORtoUBYTE4"/>
    <functioncall functionName="EOpDPdx"/>
    <functioncall functionName="EOpDPdxCoarse"/>
    <functioncall functionName="EOpDPdxFine"/>
    <functioncall functionName="EOpDPdy"/>
    <functioncall functionName="EOpDPdyCoarse"/>
    <functioncall functionName="EOpDPdyFine"/>
    <functioncall functionName="EOpDefault"/>
    <functioncall functionName="EOpDegrees"/>
    <functioncall functionName="EOpDemote"/>
    <functioncall functionName="EOpDeterminant"/>
    <functioncall functionName="EOpDeviceMemoryBarrier"/>
    <functioncall functionName="EOpDeviceMemoryBarrierWithGroupSync"/>
    <functioncall functionName="EOpDistance"/>
    <functioncall functionName="EOpDiv"/>
    <functioncall functionName="EOpDivAssign"/>
    <functioncall functionName="EOpDot"/>
    <functioncall functionName="EOpDoubleBitsToInt64"/>
    <functioncall functionName="EOpDoubleBitsToUint64"/>
    <functioncall functionName="EOpDst"/>
    <functioncall functionName="EOpEmitStreamVertex"/>
    <functioncall functionName="EOpEmitVertex"/>
    <functioncall functionName="EOpEndInvocationInterlock"/>
    <functioncall functionName="EOpEndPrimitive"/>
    <functioncall functionName="EOpEndStreamPrimitive"/>
    <functioncall functionName="EOpEqual"/>
    <functioncall functionName="EOpEvaluateAttributeSnapped"/>
    <functioncall functionName="EOpExclusiveOr"/>
    <functioncall functionName="EOpExclusiveOrAssign"/>
    <functioncall functionName="EOpExecuteCallableNV"/>
    <functioncall functionName="EOpExp"/>
    <functioncall functionName="EOpExp2"/>
    <functioncall functionName="EOpF16tof32"/>
    <functioncall functionName="EOpF32tof16"/>
    <functioncall functionName="EOpFaceForward"/>
    <functioncall functionName="EOpFindLSB"/>
    <functioncall functionName="EOpFindMSB"/>
    <functioncall functionName="EOpFloat16BitsToInt16"/>
    <functioncall functionName="EOpFloat16BitsToUint16"/>
    <functioncall functionName="EOpFloatBitsToInt"/>
    <functioncall functionName="EOpFloatBitsToUint"/>
    <functioncall functionName="EOpFloor"/>
    <functioncall functionName="EOpFma"/>
    <functioncall functionName="EOpFract"/>
    <functioncall functionName="EOpFragmentFetch"/>
    <functioncall functionName="EOpFragmentMaskFetch"/>
    <functioncall functionName="EOpFrexp"/>
    <functioncall functionName="EOpFtransform"/>
    <functioncall functionName="EOpFunction"/>
    <functioncall functionName="EOpFunctionCall"/>
    <functioncall functionName="EOpFwidth"/>
    <functioncall functionName="EOpFwidthCoarse"/>
    <functioncall functionName="EOpFwidthFine"/>
    <functioncall functionName="EOpGenMul"/>
    <functioncall functionName="EOpGreaterThan"/>
    <functioncall functionName="EOpGreaterThanEqual"/>
    <functioncall functionName="EOpGroupMemoryBarrier"/>
    <functioncall functionName="EOpIMulExtended"/>
    <functioncall functionName="EOpIgnoreIntersectionNV"/>
    <functioncall functionName="EOpImageAtomicAdd"/>
    <functioncall functionName="EOpImageAtomicAnd"/>
    <functioncall functionName="EOpImageAtomicCompSwap"/>
    <functioncall functionName="EOpImageAtomicExchange"/>
    <functioncall functionName="EOpImageAtomicLoad"/>
    <functioncall functionName="EOpImageAtomicMax"/>
    <functioncall functionName="EOpImageAtomicMin"/>
    <functioncall functionName="EOpImageAtomicOr"/>
    <functioncall functionName="EOpImageAtomicStore"/>
    <functioncall functionName="EOpImageAtomicXor"/>
    <functioncall functionName="EOpImageFootprintGuardBegin"/>
    <functioncall functionName="EOpImageFootprintGuardEnd"/>
    <functioncall functionName="EOpImageGuardBegin"/>
    <functioncall functionName="EOpImageGuardEnd"/>
    <functioncall functionName="EOpImageLoad"/>
    <functioncall functionName="EOpImageLoadLod"/>
    <functioncall functionName="EOpImageQuerySamples"/>
    <functioncall functionName="EOpImageQuerySize"/>
    <functioncall functionName="EOpImageSampleFootprintClampNV"/>
    <functioncall functionName="EOpImageSampleFootprintGradClampNV"/>
    <functioncall functionName="EOpImageSampleFootprintGradNV"/>
    <functioncall functionName="EOpImageSampleFootprintLodNV"/>
    <functioncall functionName="EOpImageSampleFootprintNV"/>
    <functioncall functionName="EOpImageStore"/>
    <functioncall functionName="EOpImageStoreLod"/>
    <functioncall functionName="EOpInclusiveOr"/>
    <functioncall functionName="EOpInclusiveOrAssign"/>
    <functioncall functionName="EOpIndexDirect"/>
    <functioncall functionName="EOpIndexDirectStruct"/>
    <functioncall functionName="EOpIndexIndirect"/>
    <functioncall functionName="EOpInt16BitsToFloat16"/>
    <functioncall functionName="EOpInt64BitsToDouble"/>
    <functioncall functionName="EOpIntBitsToFloat"/>
    <functioncall functionName="EOpInterlockedAdd"/>
    <functioncall functionName="EOpInterlockedAnd"/>
    <functioncall functionName="EOpInterlockedCompareExchange"/>
    <functioncall functionName="EOpInterlockedCompareStore"/>
    <functioncall functionName="EOpInterlockedExchange"/>
    <functioncall functionName="EOpInterlockedMax"/>
    <functioncall functionName="EOpInterlockedMin"/>
    <functioncall functionName="EOpInterlockedOr"/>
    <functioncall functionName="EOpInterlockedXor"/>
    <functioncall functionName="EOpInterpolateAtCentroid"/>
    <functioncall functionName="EOpInterpolateAtOffset"/>
    <functioncall functionName="EOpInterpolateAtSample"/>
    <functioncall functionName="EOpInterpolateAtVertex"/>
    <functioncall functionName="EOpInverseSqrt"/>
    <functioncall functionName="EOpIsFinite"/>
    <functioncall functionName="EOpIsHelperInvocation"/>
    <functioncall functionName="EOpIsInf"/>
    <functioncall functionName="EOpIsNan"/>
    <functioncall functionName="EOpKill"/>
    <functioncall functionName="EOpLdexp"/>
    <functioncall functionName="EOpLeftShift"/>
    <functioncall functionName="EOpLeftShiftAssign"/>
    <functioncall functionName="EOpLength"/>
    <functioncall functionName="EOpLessThan"/>
    <functioncall functionName="EOpLessThanEqual"/>
    <functioncall functionName="EOpLinkerObjects"/>
    <functioncall functionName="EOpLit"/>
    <functioncall functionName="EOpLog"/>
    <functioncall functionName="EOpLog10"/>
    <functioncall functionName="EOpLog2"/>
    <functioncall functionName="EOpLogicalAnd"/>
    <functioncall functionName="EOpLogicalNot"/>
    <functioncall functionName="EOpLogicalOr"/>
    <functioncall functionName="EOpLogicalXor"/>
    <functioncall functionName="EOpMatrixInverse"/>
    <functioncall functionName="EOpMatrixSwizzle"/>
    <functioncall functionName="EOpMatrixTimesMatrix"/>
    <functioncall functionName="EOpMatrixTimesMatrixAssign"/>
    <functioncall functionName="EOpMatrixTimesScalar"/>
    <functioncall functionName="EOpMatrixTimesScalarAssign"/>
    <functioncall functionName="EOpMatrixTimesVector"/>
    <functioncall functionName="EOpMax"/>
    <functioncall functionName="EOpMax3"/>
    <functioncall functionName="EOpMaxInvocations"/>
    <functioncall functionName="EOpMaxInvocationsExclusiveScan"/>
    <functioncall functionName="EOpMaxInvocationsExclusiveScanNonUniform"/>
    <functioncall functionName="EOpMaxInvocationsInclusiveScan"/>
    <functioncall functionName="EOpMaxInvocationsInclusiveScanNonUniform"/>
    <functioncall functionName="EOpMaxInvocationsNonUniform"/>
    <functioncall functionName="EOpMbcnt"/>
    <functioncall functionName="EOpMemoryBarrier"/>
    <functioncall functionName="EOpMemoryBarrierAtomicCounter"/>
    <functioncall functionName="EOpMemoryBarrierBuffer"/>
    <functioncall functionName="EOpMemoryBarrierImage"/>
    <functioncall functionName="EOpMemoryBarrierShared"/>
    <functioncall functionName="EOpMethod"/>
    <functioncall functionName="EOpMethodAppend"/>
    <functioncall functionName="EOpMethodCalculateLevelOfDetail"/>
    <functioncall functionName="EOpMethodCalculateLevelOfDetailUnclamped"/>
    <functioncall functionName="EOpMethodConsume"/>
    <functioncall functionName="EOpMethodDecrementCounter"/>
    <functioncall functionName="EOpMethodGather"/>
    <functioncall functionName="EOpMethodGatherAlpha"/>
    <functioncall functionName="EOpMethodGatherBlue"/>
    <functioncall functionName="EOpMethodGatherCmp"/>
    <functioncall functionName="EOpMethodGatherCmpAlpha"/>
    <functioncall functionName="EOpMethodGatherCmpBlue"/>
    <functioncall functionName="EOpMethodGatherCmpGreen"/>
    <functioncall functionName="EOpMethodGatherCmpRed"/>
    <functioncall functionName="EOpMethodGatherGreen"/>
    <functioncall functionName="EOpMethodGatherRed"/>
    <functioncall functionName="EOpMethodGetDimensions"/>
    <functioncall functionName="EOpMethodGetSamplePosition"/>
    <functioncall functionName="EOpMethodIncrementCounter"/>
    <functioncall functionName="EOpMethodLoad"/>
    <functioncall functionName="EOpMethodLoad2"/>
    <functioncall functionName="EOpMethodLoad3"/>
    <functioncall functionName="EOpMethodLoad4"/>
    <functioncall functionName="EOpMethodRestartStrip"/>
    <functioncall functionName="EOpMethodSample"/>
    <functioncall functionName="EOpMethodSampleBias"/>
    <functioncall functionName="EOpMethodSampleCmp"/>
    <functioncall functionName="EOpMethodSampleCmpLevelZero"/>
    <functioncall functionName="EOpMethodSampleGrad"/>
    <functioncall functionName="EOpMethodSampleLevel"/>
    <functioncall functionName="EOpMethodStore"/>
    <functioncall functionName="EOpMethodStore2"/>
    <functioncall functionName="EOpMethodStore3"/>
    <functioncall functionName="EOpMethodStore4"/>
    <functioncall functionName="EOpMid3"/>
    <functioncall functionName="EOpMin"/>
    <functioncall functionName="EOpMin3"/>
    <functioncall functionName="EOpMinInvocations"/>
    <functioncall functionName="EOpMinInvocationsExclusiveScan"/>
    <functioncall functionName="EOpMinInvocationsExclusiveScanNonUniform"/>
    <functioncall functionName="EOpMinInvocationsInclusiveScan"/>
    <functioncall functionName="EOpMinInvocationsInclusiveScanNonUniform"/>
    <functioncall functionName="EOpMinInvocationsNonUniform"/>
    <functioncall functionName="EOpMix"/>
    <functioncall functionName="EOpMod"/>
    <functioncall functionName="EOpModAssign"/>
    <functioncall functionName="EOpModf"/>
    <functioncall functionName="EOpMul"/>
    <functioncall functionName="EOpMul32x16"/>
    <functioncall functionName="EOpMulAssign"/>
    <functioncall functionName="EOpNegative"/>
    <functioncall functionName="EOpNoise"/>
    <functioncall functionName="EOpNormalize"/>
    <functioncall functionName="EOpNotEqual"/>
    <functioncall functionName="EOpNull"/>
    <functioncall functionName="EOpOuterProduct"/>
    <functioncall functionName="EOpPack16"/>
    <functioncall functionName="EOpPack32"/>
    <functioncall functionName="EOpPack64"/>
    <functioncall functionName="EOpPackDouble2x32"/>
    <functioncall functionName="EOpPackFloat2x16"/>
    <functioncall functionName="EOpPackHalf2x16"/>
    <functioncall functionName="EOpPackInt2x16"/>
    <functioncall functionName="EOpPackInt2x32"/>
    <functioncall functionName="EOpPackInt4x16"/>
    <functioncall functionName="EOpPackSnorm2x16"/>
    <functioncall functionName="EOpPackSnorm4x8"/>
    <functioncall functionName="EOpPackUint2x16"/>
    <functioncall functionName="EOpPackUint2x32"/>
    <functioncall functionName="EOpPackUint4x16"/>
    <functioncall functionName="EOpPackUnorm2x16"/>
    <functioncall functionName="EOpPackUnorm4x8"/>
    <functioncall functionName="EOpParameters"/>
    <functioncall functionName="EOpPostDecrement"/>
    <functioncall functionName="EOpPostIncrement"/>
    <functioncall functionName="EOpPow"/>
    <functioncall functionName="EOpPreDecrement"/>
    <functioncall functionName="EOpPreIncrement"/>
    <functioncall functionName="EOpRadians"/>
    <functioncall functionName="EOpRcp"/>
    <functioncall functionName="EOpReadClockDeviceKHR"/>
    <functioncall functionName="EOpReadClockSubgroupKHR"/>
    <functioncall functionName="EOpReadFirstInvocation"/>
    <functioncall functionName="EOpReadInvocation"/>
    <functioncall functionName="EOpReflect"/>
    <functioncall functionName="EOpRefract"/>
    <functioncall functionName="EOpReportIntersectionNV"/>
    <functioncall functionName="EOpReturn"/>
    <functioncall functionName="EOpRightShift"/>
    <functioncall functionName="EOpRightShiftAssign"/>
    <functioncall functionName="EOpRound"/>
    <functioncall functionName="EOpRoundEven"/>
    <functioncall functionName="EOpSamplingGuardBegin"/>
    <functioncall functionName="EOpSamplingGuardEnd"/>
    <functioncall functionName="EOpSaturate"/>
    <functioncall functionName="EOpScoping"/>
    <functioncall functionName="EOpSequence"/>
    <functioncall functionName="EOpSign"/>
    <functioncall functionName="EOpSin"/>
    <functioncall functionName="EOpSinCos"/>
    <functioncall functionName="EOpSinh"/>
    <functioncall functionName="EOpSmoothStep"/>
    <functioncall functionName="EOpSparseImageLoad"/>
    <functioncall functionName="EOpSparseImageLoadLod"/>
    <functioncall functionName="EOpSparseTexelsResident"/>
    <functioncall functionName="EOpSparseTexture"/>
    <functioncall functionName="EOpSparseTextureClamp"/>
    <functioncall functionName="EOpSparseTextureFetch"/>
    <functioncall functionName="EOpSparseTextureFetchOffset"/>
    <functioncall functionName="EOpSparseTextureGather"/>
    <functioncall functionName="EOpSparseTextureGatherLod"/>
    <functioncall functionName="EOpSparseTextureGatherLodOffset"/>
    <functioncall functionName="EOpSparseTextureGatherLodOffsets"/>
    <functioncall functionName="EOpSparseTextureGatherOffset"/>
    <functioncall functionName="EOpSparseTextureGatherOffsets"/>
    <functioncall functionName="EOpSparseTextureGrad"/>
    <functioncall functionName="EOpSparseTextureGradClamp"/>
    <functioncall functionName="EOpSparseTextureGradOffset"/>
    <functioncall functionName="EOpSparseTextureGradOffsetClamp"/>
    <functioncall functionName="EOpSparseTextureGuardBegin"/>
    <functioncall functionName="EOpSparseTextureGuardEnd"/>
    <functioncall functionName="EOpSparseTextureLod"/>
    <functioncall functionName="EOpSparseTextureLodOffset"/>
    <functioncall functionName="EOpSparseTextureOffset"/>
    <functioncall functionName="EOpSparseTextureOffsetClamp"/>
    <functioncall functionName="EOpSqrt"/>
    <functioncall functionName="EOpStep"/>
    <functioncall functionName="EOpSub"/>
    <functioncall functionName="EOpSubAssign"/>
    <functioncall functionName="EOpSubBorrow"/>
    <functioncall functionName="EOpSubSaturate"/>
    <functioncall functionName="EOpSubgroupAdd"/>
    <functioncall functionName="EOpSubgroupAll"/>
    <functioncall functionName="EOpSubgroupAllEqual"/>
    <functioncall functionName="EOpSubgroupAnd"/>
    <functioncall functionName="EOpSubgroupAny"/>
    <functioncall functionName="EOpSubgroupBallot"/>
    <functioncall functionName="EOpSubgroupBallotBitCount"/>
    <functioncall functionName="EOpSubgroupBallotBitExtract"/>
    <functioncall functionName="EOpSubgroupBallotExclusiveBitCount"/>
    <functioncall functionName="EOpSubgroupBallotFindLSB"/>
    <functioncall functionName="EOpSubgroupBallotFindMSB"/>
    <functioncall functionName="EOpSubgroupBallotInclusiveBitCount"/>
    <functioncall functionName="EOpSubgroupBarrier"/>
    <functioncall functionName="EOpSubgroupBroadcast"/>
    <functioncall functionName="EOpSubgroupBroadcastFirst"/>
    <functioncall functionName="EOpSubgroupClusteredAdd"/>
    <functioncall functionName="EOpSubgroupClusteredAnd"/>
    <functioncall functionName="EOpSubgroupClusteredMax"/>
    <functioncall functionName="EOpSubgroupClusteredMin"/>
    <functioncall functionName="EOpSubgroupClusteredMul"/>
    <functioncall functionName="EOpSubgroupClusteredOr"/>
    <functioncall functionName="EOpSubgroupClusteredXor"/>
    <functioncall functionName="EOpSubgroupElect"/>
    <functioncall functionName="EOpSubgroupExclusiveAdd"/>
    <functioncall functionName="EOpSubgroupExclusiveAnd"/>
    <functioncall functionName="EOpSubgroupExclusiveMax"/>
    <functioncall functionName="EOpSubgroupExclusiveMin"/>
    <functioncall functionName="EOpSubgroupExclusiveMul"/>
    <functioncall functionName="EOpSubgroupExclusiveOr"/>
    <functioncall functionName="EOpSubgroupExclusiveXor"/>
    <functioncall functionName="EOpSubgroupGuardStart"/>
    <functioncall functionName="EOpSubgroupGuardStop"/>
    <functioncall functionName="EOpSubgroupInclusiveAdd"/>
    <functioncall functionName="EOpSubgroupInclusiveAnd"/>
    <functioncall functionName="EOpSubgroupInclusiveMax"/>
    <functioncall functionName="EOpSubgroupInclusiveMin"/>
    <functioncall functionName="EOpSubgroupInclusiveMul"/>
    <functioncall functionName="EOpSubgroupInclusiveOr"/>
    <functioncall functionName="EOpSubgroupInclusiveXor"/>
    <functioncall functionName="EOpSubgroupInverseBallot"/>
    <functioncall functionName="EOpSubgroupMax"/>
    <functioncall functionName="EOpSubgroupMemoryBarrier"/>
    <functioncall functionName="EOpSubgroupMemoryBarrierBuffer"/>
    <functioncall functionName="EOpSubgroupMemoryBarrierImage"/>
    <functioncall functionName="EOpSubgroupMemoryBarrierShared"/>
    <functioncall functionName="EOpSubgroupMin"/>
    <functioncall functionName="EOpSubgroupMul"/>
    <functioncall functionName="EOpSubgroupOr"/>
    <functioncall functionName="EOpSubgroupPartition"/>
    <functioncall functionName="EOpSubgroupPartitionedAdd"/>
    <functioncall functionName="EOpSubgroupPartitionedAnd"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveAdd"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveAnd"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveMax"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveMin"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveMul"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveOr"/>
    <functioncall functionName="EOpSubgroupPartitionedExclusiveXor"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveAdd"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveAnd"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveMax"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveMin"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveMul"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveOr"/>
    <functioncall functionName="EOpSubgroupPartitionedInclusiveXor"/>
    <functioncall functionName="EOpSubgroupPartitionedMax"/>
    <functioncall functionName="EOpSubgroupPartitionedMin"/>
    <functioncall functionName="EOpSubgroupPartitionedMul"/>
    <functioncall functionName="EOpSubgroupPartitionedOr"/>
    <functioncall functionName="EOpSubgroupPartitionedXor"/>
    <functioncall functionName="EOpSubgroupQuadBroadcast"/>
    <functioncall functionName="EOpSubgroupQuadSwapDiagonal"/>
    <functioncall functionName="EOpSubgroupQuadSwapHorizontal"/>
    <functioncall functionName="EOpSubgroupQuadSwapVertical"/>
    <functioncall functionName="EOpSubgroupShuffle"/>
    <functioncall functionName="EOpSubgroupShuffleDown"/>
    <functioncall functionName="EOpSubgroupShuffleUp"/>
    <functioncall functionName="EOpSubgroupShuffleXor"/>
    <functioncall functionName="EOpSubgroupXor"/>
    <functioncall functionName="EOpSubpassLoad"/>
    <functioncall functionName="EOpSubpassLoadMS"/>
    <functioncall functionName="EOpSwizzleInvocations"/>
    <functioncall functionName="EOpSwizzleInvocationsMasked"/>
    <functioncall functionName="EOpTan"/>
    <functioncall functionName="EOpTanh"/>
    <functioncall functionName="EOpTerminateRayNV"/>
    <functioncall functionName="EOpTexture"/>
    <functioncall functionName="EOpTextureBias"/>
    <functioncall functionName="EOpTextureClamp"/>
    <functioncall functionName="EOpTextureFetch"/>
    <functioncall functionName="EOpTextureFetchOffset"/>
    <functioncall functionName="EOpTextureGather"/>
    <functioncall functionName="EOpTextureGatherLod"/>
    <functioncall functionName="EOpTextureGatherLodOffset"/>
    <functioncall functionName="EOpTextureGatherLodOffsets"/>
    <functioncall functionName="EOpTextureGatherOffset"/>
    <functioncall functionName="EOpTextureGatherOffsets"/>
    <functioncall functionName="EOpTextureGrad"/>
    <functioncall functionName="EOpTextureGradClamp"/>
    <functioncall functionName="EOpTextureGradOffset"/>
    <functioncall functionName="EOpTextureGradOffsetClamp"/>
    <functioncall functionName="EOpTextureGuardBegin"/>
    <functioncall functionName="EOpTextureGuardEnd"/>
    <functioncall functionName="EOpTextureLod"/>
    <functioncall functionName="EOpTextureLodOffset"/>
    <functioncall functionName="EOpTextureOffset"/>
    <functioncall functionName="EOpTextureOffsetClamp"/>
    <functioncall functionName="EOpTextureProj"/>
    <functioncall functionName="EOpTextureProjGrad"/>
    <functioncall functionName="EOpTextureProjGradOffset"/>
    <functioncall functionName="EOpTextureProjLod"/>
    <functioncall functionName="EOpTextureProjLodOffset"/>
    <functioncall functionName="EOpTextureProjOffset"/>
    <functioncall functionName="EOpTextureQueryLevels"/>
    <functioncall functionName="EOpTextureQueryLod"/>
    <functioncall functionName="EOpTextureQuerySamples"/>
    <functioncall functionName="EOpTextureQuerySize"/>
    <functioncall functionName="EOpTime"/>
    <functioncall functionName="EOpTraceNV"/>
    <functioncall functionName="EOpTranspose"/>
    <functioncall functionName="EOpTrunc"/>
    <functioncall functionName="EOpUMulExtended"/>
    <functioncall functionName="EOpUint16BitsToFloat16"/>
    <functioncall functionName="EOpUint64BitsToDouble"/>
    <functioncall functionName="EOpUintBitsToFloat"/>
    <functioncall functionName="EOpUnpack16"/>
    <functioncall functionName="EOpUnpack32"/>
    <functioncall functionName="EOpUnpack8"/>
    <functioncall functionName="EOpUnpackDouble2x32"/>
    <functioncall functionName="EOpUnpackFloat2x16"/>
    <functioncall functionName="EOpUnpackHalf2x16"/>
    <functioncall functionName="EOpUnpackInt2x16"/>
    <functioncall functionName="EOpUnpackInt2x32"/>
    <functioncall functionName="EOpUnpackInt4x16"/>
    <functioncall functionName="EOpUnpackSnorm2x16"/>
    <functioncall functionName="EOpUnpackSnorm4x8"/>
    <functioncall functionName="EOpUnpackUint2x16"/>
    <functioncall functionName="EOpUnpackUint2x32"/>
    <functioncall functionName="EOpUnpackUint4x16"/>
    <functioncall functionName="EOpUnpackUnorm2x16"/>
    <functioncall functionName="EOpUnpackUnorm4x8"/>
    <functioncall functionName="EOpVectorEqual"/>
    <functioncall functionName="EOpVectorLogicalNot"/>
    <functioncall functionName="EOpVectorNotEqual"/>
    <functioncall functionName="EOpVectorSwizzle"/>
    <functioncall functionName="EOpVectorTimesMatrix"/>
    <functioncall functionName="EOpVectorTimesMatrixAssign"/>
    <functioncall functionName="EOpVectorTimesScalar"/>
    <functioncall functionName="EOpVectorTimesScalarAssign"/>
    <functioncall functionName="EOpWaveActiveCountBits"/>
    <functioncall functionName="EOpWaveGetLaneCount"/>
    <functioncall functionName="EOpWaveGetLaneIndex"/>
    <functioncall functionName="EOpWavePrefixCountBits"/>
    <functioncall functionName="EOpWorkgroupMemoryBarrier"/>
    <functioncall functionName="EOpWorkgroupMemoryBarrierWithGroupSync"/>
    <functioncall functionName="EOpWriteInvocation"/>
    <functioncall functionName="EOpWritePackedPrimitiveIndices4x8NV"/>
    <functioncall functionName="EPrefixError"/>
    <functioncall functionName="EPrefixInternalError"/>
    <functioncall functionName="EPrefixNone"/>
    <functioncall functionName="EPrefixNote"/>
    <functioncall functionName="EPrefixUnimplemented"/>
    <functioncall functionName="EPrefixWarning"/>
    <functioncall functionName="EProfile"/>
    <functioncall functionName="EResCount"/>
    <functioncall functionName="EResImage"/>
    <functioncall functionName="EResSampler"/>
    <functioncall functionName="EResSsbo"/>
    <functioncall functionName="EResTexture"/>
    <functioncall functionName="EResUav"/>
    <functioncall functionName="EResUbo"/>
    <functioncall functionName="EShClientNone"/>
    <functioncall functionName="EShClientOpenGL"/>
    <functioncall functionName="EShClientVulkan"/>
    <functioncall functionName="EShExFragment"/>
    <functioncall functionName="EShExVertexFragment"/>
    <functioncall functionName="EShExecutable"/>
    <functioncall functionName="EShLangAnyHitNV"/>
    <functioncall functionName="EShLangCallableNV"/>
    <functioncall functionName="EShLangClosestHitNV"/>
    <functioncall functionName="EShLangCompute"/>
    <functioncall functionName="EShLangCount"/>
    <functioncall functionName="EShLangFragment"/>
    <functioncall functionName="EShLangGeometry"/>
    <functioncall functionName="EShLangIntersectNV"/>
    <functioncall functionName="EShLangMeshNV"/>
    <functioncall functionName="EShLangMissNV"/>
    <functioncall functionName="EShLangRayGenNV"/>
    <functioncall functionName="EShLangTaskNV"/>
    <functioncall functionName="EShLangTessControl"/>
    <functioncall functionName="EShLangTessEvaluation"/>
    <functioncall functionName="EShLangVertex"/>
    <functioncall functionName="EShLanguage"/>
    <functioncall functionName="EShLanguageMask"/>
    <functioncall functionName="EShMessages"/>
    <functioncall functionName="EShMsgDefault"/>
    <functioncall functionName="EShOptFull"/>
    <functioncall functionName="EShOptNoGeneration"/>
    <functioncall functionName="EShOptNone"/>
    <functioncall functionName="EShOptSimple"/>
    <functioncall functionName="EShReflectionDefault"/>
    <functioncall functionName="EShSourceGlsl"/>
    <functioncall functionName="EShSourceHlsl"/>
    <functioncall functionName="EShSourceNone"/>
    <functioncall functionName="EShTargetNone"/>
    <functioncall functionName="EShTargetSpv"/>
    <functioncall functionName="EShTexSampTransKeep"/>
    <functioncall functionName="EShTexSampTransUpgradeTextureRemoveSampler"/>
    <functioncall functionName="E_GL_AMD_gpu_shader_half_float"/>
    <functioncall functionName="E_GL_AMD_gpu_shader_int16"/>
    <functioncall functionName="E_GL_ARB_post_depth_coverage"/>
    <functioncall functionName="E_GL_ARB_shader_viewport_layer_array"/>
    <functioncall functionName="E_GL_EXT_geometry_point_size"/>
    <functioncall functionName="E_GL_EXT_geometry_shader"/>
    <functioncall functionName="E_GL_EXT_gpu_shader5"/>
    <functioncall functionName="E_GL_EXT_post_depth_coverage"/>
    <functioncall functionName="E_GL_EXT_primitive_bounding_box"/>
    <functioncall functionName="E_GL_EXT_shader_explicit_arithmetic_types"/>
    <functioncall functionName="E_GL_EXT_shader_explicit_arithmetic_types_float16"/>
    <functioncall functionName="E_GL_EXT_shader_explicit_arithmetic_types_int16"/>
    <functioncall functionName="E_GL_EXT_shader_explicit_arithmetic_types_int8"/>
    <functioncall functionName="E_GL_EXT_shader_io_blocks"/>
    <functioncall functionName="E_GL_EXT_tessellation_point_size"/>
    <functioncall functionName="E_GL_EXT_tessellation_shader"/>
    <functioncall functionName="E_GL_EXT_texture_buffer"/>
    <functioncall functionName="E_GL_EXT_texture_cube_map_array"/>
    <functioncall functionName="E_GL_NV_viewport_array2"/>
    <functioncall functionName="E_GL_OES_geometry_point_size"/>
    <functioncall functionName="E_GL_OES_geometry_shader"/>
    <functioncall functionName="E_GL_OES_gpu_shader5"/>
    <functioncall functionName="E_GL_OES_primitive_bounding_box"/>
    <functioncall functionName="E_GL_OES_shader_io_blocks"/>
    <functioncall functionName="E_GL_OES_tessellation_point_size"/>
    <functioncall functionName="E_GL_OES_tessellation_shader"/>
    <functioncall functionName="E_GL_OES_texture_buffer"/>
    <functioncall functionName="E_GL_OES_texture_cube_map_array"/>
    <functioncall functionName="E_GL_OVR_multiview"/>
    <functioncall functionName="E_GL_OVR_multiview2"/>
    <functioncall functionName="EatAllow_uav_condition"/>
    <functioncall functionName="EatBinding"/>
    <functioncall functionName="EatBranch"/>
    <functioncall functionName="EatBuiltIn"/>
    <functioncall functionName="EatCall"/>
    <functioncall functionName="EatConstantId"/>
    <functioncall functionName="EatDependencyInfinite"/>
    <functioncall functionName="EatDependencyLength"/>
    <functioncall functionName="EatDomain"/>
    <functioncall functionName="EatEarlyDepthStencil"/>
    <functioncall functionName="EatFastOpt"/>
    <functioncall functionName="EatFlatten"/>
    <functioncall functionName="EatForceCase"/>
    <functioncall functionName="EatFormatR11fG11fB10f"/>
    <functioncall functionName="EatFormatR16"/>
    <functioncall functionName="EatFormatR16Snorm"/>
    <functioncall functionName="EatFormatR16f"/>
    <functioncall functionName="EatFormatR16i"/>
    <functioncall functionName="EatFormatR16ui"/>
    <functioncall functionName="EatFormatR32f"/>
    <functioncall functionName="EatFormatR32i"/>
    <functioncall functionName="EatFormatR32ui"/>
    <functioncall functionName="EatFormatR8"/>
    <functioncall functionName="EatFormatR8Snorm"/>
    <functioncall functionName="EatFormatR8i"/>
    <functioncall functionName="EatFormatR8ui"/>
    <functioncall functionName="EatFormatRg16"/>
    <functioncall functionName="EatFormatRg16Snorm"/>
    <functioncall functionName="EatFormatRg16f"/>
    <functioncall functionName="EatFormatRg16i"/>
    <functioncall functionName="EatFormatRg16ui"/>
    <functioncall functionName="EatFormatRg32f"/>
    <functioncall functionName="EatFormatRg32i"/>
    <functioncall functionName="EatFormatRg32ui"/>
    <functioncall functionName="EatFormatRg8"/>
    <functioncall functionName="EatFormatRg8Snorm"/>
    <functioncall functionName="EatFormatRg8i"/>
    <functioncall functionName="EatFormatRg8ui"/>
    <functioncall functionName="EatFormatRgb10A2"/>
    <functioncall functionName="EatFormatRgb10a2ui"/>
    <functioncall functionName="EatFormatRgba16"/>
    <functioncall functionName="EatFormatRgba16Snorm"/>
    <functioncall functionName="EatFormatRgba16f"/>
    <functioncall functionName="EatFormatRgba16i"/>
    <functioncall functionName="EatFormatRgba16ui"/>
    <functioncall functionName="EatFormatRgba32f"/>
    <functioncall functionName="EatFormatRgba32i"/>
    <functioncall functionName="EatFormatRgba32ui"/>
    <functioncall functionName="EatFormatRgba8"/>
    <functioncall functionName="EatFormatRgba8Snorm"/>
    <functioncall functionName="EatFormatRgba8i"/>
    <functioncall functionName="EatFormatRgba8ui"/>
    <functioncall functionName="EatFormatUnknown"/>
    <functioncall functionName="EatGlobalBinding"/>
    <functioncall functionName="EatInputAttachment"/>
    <functioncall functionName="EatInstance"/>
    <functioncall functionName="EatIterationMultiple"/>
    <functioncall functionName="EatLocation"/>
    <functioncall functionName="EatLoop"/>
    <functioncall functionName="EatMaxIterations"/>
    <functioncall functionName="EatMaxTessFactor"/>
    <functioncall functionName="EatMaxVertexCount"/>
    <functioncall functionName="EatMinIterations"/>
    <functioncall functionName="EatNonReadable"/>
    <functioncall functionName="EatNonWritable"/>
    <functioncall functionName="EatNone"/>
    <functioncall functionName="EatNumThreads"/>
    <functioncall functionName="EatOutputControlPoints"/>
    <functioncall functionName="EatOutputTopology"/>
    <functioncall functionName="EatPartialCount"/>
    <functioncall functionName="EatPartitioning"/>
    <functioncall functionName="EatPatchConstantFunc"/>
    <functioncall functionName="EatPatchSize"/>
    <functioncall functionName="EatPeelCount"/>
    <functioncall functionName="EatPushConstant"/>
    <functioncall functionName="EatUnroll"/>
    <functioncall functionName="EbtAccStructNV"/>
    <functioncall functionName="EbtAtomicUint"/>
    <functioncall functionName="EbtBlock"/>
    <functioncall functionName="EbtBool"/>
    <functioncall functionName="EbtDouble"/>
    <functioncall functionName="EbtFloat"/>
    <functioncall functionName="EbtFloat16"/>
    <functioncall functionName="EbtInt"/>
    <functioncall functionName="EbtInt16"/>
    <functioncall functionName="EbtInt64"/>
    <functioncall functionName="EbtInt8"/>
    <functioncall functionName="EbtNumTypes"/>
    <functioncall functionName="EbtReference"/>
    <functioncall functionName="EbtSampler"/>
    <functioncall functionName="EbtString"/>
    <functioncall functionName="EbtStruct"/>
    <functioncall functionName="EbtUint"/>
    <functioncall functionName="EbtUint16"/>
    <functioncall functionName="EbtUint64"/>
    <functioncall functionName="EbtUint8"/>
    <functioncall functionName="EbtVoid"/>
    <functioncall functionName="EbvAppendConsume"/>
    <functioncall functionName="EbvBackColor"/>
    <functioncall functionName="EbvBackSecondaryColor"/>
    <functioncall functionName="EbvBaryCoordNV"/>
    <functioncall functionName="EbvBaryCoordNoPersp"/>
    <functioncall functionName="EbvBaryCoordNoPerspCentroid"/>
    <functioncall functionName="EbvBaryCoordNoPerspNV"/>
    <functioncall functionName="EbvBaryCoordNoPerspSample"/>
    <functioncall functionName="EbvBaryCoordPullModel"/>
    <functioncall functionName="EbvBaryCoordSmooth"/>
    <functioncall functionName="EbvBaryCoordSmoothCentroid"/>
    <functioncall functionName="EbvBaryCoordSmoothSample"/>
    <functioncall functionName="EbvBaseInstance"/>
    <functioncall functionName="EbvBaseVertex"/>
    <functioncall functionName="EbvBoundingBox"/>
    <functioncall functionName="EbvByteAddressBuffer"/>
    <functioncall functionName="EbvClipDistance"/>
    <functioncall functionName="EbvClipDistancePerViewNV"/>
    <functioncall functionName="EbvClipVertex"/>
    <functioncall functionName="EbvColor"/>
    <functioncall functionName="EbvCullDistance"/>
    <functioncall functionName="EbvCullDistancePerViewNV"/>
    <functioncall functionName="EbvDeviceIndex"/>
    <functioncall functionName="EbvDrawId"/>
    <functioncall functionName="EbvFace"/>
    <functioncall functionName="EbvFogFragCoord"/>
    <functioncall functionName="EbvFragColor"/>
    <functioncall functionName="EbvFragCoord"/>
    <functioncall functionName="EbvFragData"/>
    <functioncall functionName="EbvFragDepth"/>
    <functioncall functionName="EbvFragDepthGreater"/>
    <functioncall functionName="EbvFragDepthLesser"/>
    <functioncall functionName="EbvFragFullyCoveredNV"/>
    <functioncall functionName="EbvFragInvocationCountEXT"/>
    <functioncall functionName="EbvFragSizeEXT"/>
    <functioncall functionName="EbvFragStencilRef"/>
    <functioncall functionName="EbvFragmentSizeNV"/>
    <functioncall functionName="EbvFrontColor"/>
    <functioncall functionName="EbvFrontSecondaryColor"/>
    <functioncall functionName="EbvGlobalInvocationId"/>
    <functioncall functionName="EbvGsOutputStream"/>
    <functioncall functionName="EbvHelperInvocation"/>
    <functioncall functionName="EbvHitKindNV"/>
    <functioncall functionName="EbvHitTNV"/>
    <functioncall functionName="EbvIncomingRayFlagsNV"/>
    <functioncall functionName="EbvInputPatch"/>
    <functioncall functionName="EbvInstanceCustomIndexNV"/>
    <functioncall functionName="EbvInstanceId"/>
    <functioncall functionName="EbvInstanceIndex"/>
    <functioncall functionName="EbvInvocationId"/>
    <functioncall functionName="EbvInvocationsPerPixelNV"/>
    <functioncall functionName="EbvLast"/>
    <functioncall functionName="EbvLaunchIdNV"/>
    <functioncall functionName="EbvLaunchSizeNV"/>
    <functioncall functionName="EbvLayer"/>
    <functioncall functionName="EbvLayerPerViewNV"/>
    <functioncall functionName="EbvLocalInvocationId"/>
    <functioncall functionName="EbvLocalInvocationIndex"/>
    <functioncall functionName="EbvMeshViewCountNV"/>
    <functioncall functionName="EbvMeshViewIndicesNV"/>
    <functioncall functionName="EbvMultiTexCoord0"/>
    <functioncall functionName="EbvMultiTexCoord1"/>
    <functioncall functionName="EbvMultiTexCoord2"/>
    <functioncall functionName="EbvMultiTexCoord3"/>
    <functioncall functionName="EbvMultiTexCoord4"/>
    <functioncall functionName="EbvMultiTexCoord5"/>
    <functioncall functionName="EbvMultiTexCoord6"/>
    <functioncall functionName="EbvMultiTexCoord7"/>
    <functioncall functionName="EbvNone"/>
    <functioncall functionName="EbvNormal"/>
    <functioncall functionName="EbvNumSubgroups"/>
    <functioncall functionName="EbvNumWorkGroups"/>
    <functioncall functionName="EbvObjectRayDirectionNV"/>
    <functioncall functionName="EbvObjectRayOriginNV"/>
    <functioncall functionName="EbvObjectToWorldNV"/>
    <functioncall functionName="EbvOutputPatch"/>
    <functioncall functionName="EbvPatchVertices"/>
    <functioncall functionName="EbvPointCoord"/>
    <functioncall functionName="EbvPointSize"/>
    <functioncall functionName="EbvPosition"/>
    <functioncall functionName="EbvPositionPerViewNV"/>
    <functioncall functionName="EbvPrimitiveCountNV"/>
    <functioncall functionName="EbvPrimitiveId"/>
    <functioncall functionName="EbvPrimitiveIndicesNV"/>
    <functioncall functionName="EbvRWByteAddressBuffer"/>
    <functioncall functionName="EbvRWStructuredBuffer"/>
    <functioncall functionName="EbvRayTmaxNV"/>
    <functioncall functionName="EbvRayTminNV"/>
    <functioncall functionName="EbvSMCount"/>
    <functioncall functionName="EbvSMID"/>
    <functioncall functionName="EbvSampleId"/>
    <functioncall functionName="EbvSampleMask"/>
    <functioncall functionName="EbvSamplePosition"/>
    <functioncall functionName="EbvSecondaryColor"/>
    <functioncall functionName="EbvSecondaryPositionNV"/>
    <functioncall functionName="EbvSecondaryViewportMaskNV"/>
    <functioncall functionName="EbvStructuredBuffer"/>
    <functioncall functionName="EbvSubGroupEqMask"/>
    <functioncall functionName="EbvSubGroupGeMask"/>
    <functioncall functionName="EbvSubGroupGtMask"/>
    <functioncall functionName="EbvSubGroupInvocation"/>
    <functioncall functionName="EbvSubGroupLeMask"/>
    <functioncall functionName="EbvSubGroupLtMask"/>
    <functioncall functionName="EbvSubGroupSize"/>
    <functioncall functionName="EbvSubgroupEqMask2"/>
    <functioncall functionName="EbvSubgroupGeMask2"/>
    <functioncall functionName="EbvSubgroupGtMask2"/>
    <functioncall functionName="EbvSubgroupID"/>
    <functioncall functionName="EbvSubgroupInvocation2"/>
    <functioncall functionName="EbvSubgroupLeMask2"/>
    <functioncall functionName="EbvSubgroupLtMask2"/>
    <functioncall functionName="EbvSubgroupSize2"/>
    <functioncall functionName="EbvTaskCountNV"/>
    <functioncall functionName="EbvTessCoord"/>
    <functioncall functionName="EbvTessLevelInner"/>
    <functioncall functionName="EbvTessLevelOuter"/>
    <functioncall functionName="EbvTexCoord"/>
    <functioncall functionName="EbvVertex"/>
    <functioncall functionName="EbvVertexId"/>
    <functioncall functionName="EbvVertexIndex"/>
    <functioncall functionName="EbvViewIndex"/>
    <functioncall functionName="EbvViewportIndex"/>
    <functioncall functionName="EbvViewportMaskNV"/>
    <functioncall functionName="EbvViewportMaskPerViewNV"/>
    <functioncall functionName="EbvWarpID"/>
    <functioncall functionName="EbvWarpsPerSM"/>
    <functioncall functionName="EbvWorkGroupId"/>
    <functioncall functionName="EbvWorkGroupSize"/>
    <functioncall functionName="EbvWorldRayDirectionNV"/>
    <functioncall functionName="EbvWorldRayOriginNV"/>
    <functioncall functionName="EbvWorldToObjectNV"/>
    <functioncall functionName="EioCount"/>
    <functioncall functionName="EioNone"/>
    <functioncall functionName="EioPixelInterlockOrdered"/>
    <functioncall functionName="EioPixelInterlockUnordered"/>
    <functioncall functionName="EioSampleInterlockOrdered"/>
    <functioncall functionName="EioSampleInterlockUnordered"/>
    <functioncall functionName="EioShadingRateInterlockOrdered"/>
    <functioncall functionName="EioShadingRateInterlockUnordered"/>
    <functioncall functionName="EldAny"/>
    <functioncall functionName="EldCount"/>
    <functioncall functionName="EldGreater"/>
    <functioncall functionName="EldLess"/>
    <functioncall functionName="EldNone"/>
    <functioncall functionName="EldUnchanged"/>
    <functioncall functionName="ElfCount"/>
    <functioncall functionName="ElfEsFloatGuard"/>
    <functioncall functionName="ElfEsIntGuard"/>
    <functioncall functionName="ElfEsUintGuard"/>
    <functioncall functionName="ElfFloatGuard"/>
    <functioncall functionName="ElfIntGuard"/>
    <functioncall functionName="ElfNone"/>
    <functioncall functionName="ElfR11fG11fB10f"/>
    <functioncall functionName="ElfR16"/>
    <functioncall functionName="ElfR16Snorm"/>
    <functioncall functionName="ElfR16f"/>
    <functioncall functionName="ElfR16i"/>
    <functioncall functionName="ElfR16ui"/>
    <functioncall functionName="ElfR32f"/>
    <functioncall functionName="ElfR32i"/>
    <functioncall functionName="ElfR32ui"/>
    <functioncall functionName="ElfR8"/>
    <functioncall functionName="ElfR8Snorm"/>
    <functioncall functionName="ElfR8i"/>
    <functioncall functionName="ElfR8ui"/>
    <functioncall functionName="ElfRg16"/>
    <functioncall functionName="ElfRg16Snorm"/>
    <functioncall functionName="ElfRg16f"/>
    <functioncall functionName="ElfRg16i"/>
    <functioncall functionName="ElfRg16ui"/>
    <functioncall functionName="ElfRg32f"/>
    <functioncall functionName="ElfRg32i"/>
    <functioncall functionName="ElfRg32ui"/>
    <functioncall functionName="ElfRg8"/>
    <functioncall functionName="ElfRg8Snorm"/>
    <functioncall functionName="ElfRg8i"/>
    <functioncall functionName="ElfRg8ui"/>
    <functioncall functionName="ElfRgb10A2"/>
    <functioncall functionName="ElfRgb10a2ui"/>
    <functioncall functionName="ElfRgba16"/>
    <functioncall functionName="ElfRgba16Snorm"/>
    <functioncall functionName="ElfRgba16f"/>
    <functioncall functionName="ElfRgba16i"/>
    <functioncall functionName="ElfRgba16ui"/>
    <functioncall functionName="ElfRgba32f"/>
    <functioncall functionName="ElfRgba32i"/>
    <functioncall functionName="ElfRgba32ui"/>
    <functioncall functionName="ElfRgba8"/>
    <functioncall functionName="ElfRgba8Snorm"/>
    <functioncall functionName="ElfRgba8i"/>
    <functioncall functionName="ElfRgba8ui"/>
    <functioncall functionName="ElgIsolines"/>
    <functioncall functionName="ElgLineStrip"/>
    <functioncall functionName="ElgLines"/>
    <functioncall functionName="ElgLinesAdjacency"/>
    <functioncall functionName="ElgNone"/>
    <functioncall functionName="ElgPoints"/>
    <functioncall functionName="ElgQuads"/>
    <functioncall functionName="ElgTriangleStrip"/>
    <functioncall functionName="ElgTriangles"/>
    <functioncall functionName="ElgTrianglesAdjacency"/>
    <functioncall functionName="ElmColumnMajor"/>
    <functioncall functionName="ElmCount"/>
    <functioncall functionName="ElmNone"/>
    <functioncall functionName="ElmRowMajor"/>
    <functioncall functionName="ElpCount"/>
    <functioncall functionName="ElpNone"/>
    <functioncall functionName="ElpPacked"/>
    <functioncall functionName="ElpScalar"/>
    <functioncall functionName="ElpShared"/>
    <functioncall functionName="ElpStd140"/>
    <functioncall functionName="ElpStd430"/>
    <functioncall functionName="EpqHigh"/>
    <functioncall functionName="EpqLow"/>
    <functioncall functionName="EpqMedium"/>
    <functioncall functionName="EpqNone"/>
    <functioncall functionName="Esd1D"/>
    <functioncall functionName="Esd2D"/>
    <functioncall functionName="Esd3D"/>
    <functioncall functionName="EsdBuffer"/>
    <functioncall functionName="EsdCube"/>
    <functioncall functionName="EsdNone"/>
    <functioncall functionName="EsdNumDims"/>
    <functioncall functionName="EsdRect"/>
    <functioncall functionName="EsdSubpass"/>
    <functioncall functionName="EvInVisit"/>
    <functioncall functionName="EvPostVisit"/>
    <functioncall functionName="EvPreVisit"/>
    <functioncall functionName="EvoCcw"/>
    <functioncall functionName="EvoCw"/>
    <functioncall functionName="EvoNone"/>
    <functioncall functionName="EvqBuffer"/>
    <functioncall functionName="EvqCallableDataInNV"/>
    <functioncall functionName="EvqCallableDataNV"/>
    <functioncall functionName="EvqClipVertex"/>
    <functioncall functionName="EvqConst"/>
    <functioncall functionName="EvqConstReadOnly"/>
    <functioncall functionName="EvqFace"/>
    <functioncall functionName="EvqFragColor"/>
    <functioncall functionName="EvqFragCoord"/>
    <functioncall functionName="EvqFragDepth"/>
    <functioncall functionName="EvqGlobal"/>
    <functioncall functionName="EvqHitAttrNV"/>
    <functioncall functionName="EvqIn"/>
    <functioncall functionName="EvqInOut"/>
    <functioncall functionName="EvqInstanceId"/>
    <functioncall functionName="EvqLast"/>
    <functioncall functionName="EvqOut"/>
    <functioncall functionName="EvqPayloadInNV"/>
    <functioncall functionName="EvqPayloadNV"/>
    <functioncall functionName="EvqPointCoord"/>
    <functioncall functionName="EvqPointSize"/>
    <functioncall functionName="EvqPosition"/>
    <functioncall functionName="EvqShared"/>
    <functioncall functionName="EvqTemporary"/>
    <functioncall functionName="EvqUniform"/>
    <functioncall functionName="EvqVaryingIn"/>
    <functioncall functionName="EvqVaryingOut"/>
    <functioncall functionName="EvqVertexId"/>
    <functioncall functionName="EvsEqual"/>
    <functioncall functionName="EvsFractionalEven"/>
    <functioncall functionName="EvsFractionalOdd"/>
    <functioncall functionName="EvsNone"/>
    <functioncall functionName="GetBuiltInVariableString"/>
    <functioncall functionName="GetPrecisionQualifierString"/>
    <functioncall functionName="GetStorageQualifierString"/>
    <functioncall functionName="GetThreadPoolAllocator"/>
    <functioncall functionName="HASH"/>
    <functioncall functionName="IncludeResult"/>
    <functioncall functionName="IsAnonymous"/>
    <functioncall functionName="IsPow2"/>
    <functioncall functionName="L"/>
    <functioncall functionName="LayoutDerivativeGroupLinear"/>
    <functioncall functionName="LayoutDerivativeGroupQuads"/>
    <functioncall functionName="LayoutDerivativeNone"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="NewPoolObject"/>
    <functioncall functionName="NewPoolTString"/>
    <functioncall functionName="OVR_multiview_EXTs"/>
    <functioncall functionName="PRED"/>
    <functioncall functionName="ProfileName"/>
    <functioncall functionName="SameSpecializationConstants"/>
    <functioncall functionName="SpvVersion"/>
    <functioncall functionName="String"/>
    <functioncall functionName="T"/>
    <functioncall functionName="TAllocation"/>
    <functioncall functionName="TAnonMember"/>
    <functioncall functionName="TArraySizes"/>
    <functioncall functionName="TBasicType"/>
    <functioncall functionName="TCall"/>
    <functioncall functionName="TConstUnion"/>
    <functioncall functionName="TConstUnionArray"/>
    <functioncall functionName="TConstUnionVector"/>
    <functioncall functionName="TExtensionBehavior"/>
    <functioncall functionName="TFunction"/>
    <functioncall functionName="TIntermAggregate"/>
    <functioncall functionName="TIntermNode"/>
    <functioncall functionName="TIntermOperator"/>
    <functioncall functionName="TIntermSelection"/>
    <functioncall functionName="TIntermTraverser"/>
    <functioncall functionName="TIntermTyped"/>
    <functioncall functionName="TIntermUnary"/>
    <functioncall functionName="TIoRange"/>
    <functioncall functionName="TObjectReflection"/>
    <functioncall functionName="TOffsetRange"/>
    <functioncall functionName="TOperator"/>
    <functioncall functionName="TParseVersions"/>
    <functioncall functionName="TPoolAllocator"/>
    <functioncall functionName="TPragma"/>
    <functioncall functionName="TPrecisionQualifier"/>
    <functioncall functionName="TQualifier"/>
    <functioncall functionName="TRange"/>
    <functioncall functionName="TResourceType"/>
    <functioncall functionName="TSmallArrayVector"/>
    <functioncall functionName="TSourceLoc"/>
    <functioncall functionName="TString"/>
    <functioncall functionName="TSymbol"/>
    <functioncall functionName="TSymbolTableLevel"/>
    <functioncall functionName="TType"/>
    <functioncall functionName="TVector &lt; TArraySize &gt;"/>
    <functioncall functionName="TVector &lt; TCompiler * &gt;"/>
    <functioncall functionName="TVector &lt; TConstUnion &gt;"/>
    <functioncall functionName="TVector &lt; TIntermNode * &gt;"/>
    <functioncall functionName="TVector &lt; TIntermTyped * &gt;"/>
    <functioncall functionName="TVector &lt; TParameter &gt;"/>
    <functioncall functionName="TVector &lt; TShHandleBase * &gt;"/>
    <functioncall functionName="TVector &lt; TStorageQualifier &gt;"/>
    <functioncall functionName="TVector &lt; TSymbol * &gt;"/>
    <functioncall functionName="TVector &lt; TTypeLoc &gt;"/>
    <functioncall functionName="TVector &lt; TVector &lt; const char * &gt; &gt;"/>
    <functioncall functionName="TVector &lt; const TFunction * &gt;"/>
    <functioncall functionName="TVector &lt; const char * &gt;"/>
    <functioncall functionName="TVisit"/>
    <functioncall functionName="TXfbBuffer"/>
    <functioncall functionName="UnsizedArraySize"/>
    <functioncall functionName="_FNV_offset_basis"/>
    <functioncall functionName="_Next"/>
    <functioncall functionName="_Where"/>
    <functioncall functionName="_itoa_s"/>
    <functioncall functionName="_strtoi64"/>
    <functioncall functionName="_strtoui64"/>
    <functioncall functionName="a"/>
    <functioncall functionName="aBody"/>
    <functioncall functionName="aTerminal"/>
    <functioncall functionName="aTest"/>
    <functioncall functionName="addArgument"/>
    <functioncall functionName="addError"/>
    <functioncall functionName="addIfNonZero"/>
    <functioncall functionName="addInnerSize"/>
    <functioncall functionName="addInnerSizes"/>
    <functioncall functionName="addPrefix"/>
    <functioncall functionName="addProcess"/>
    <functioncall functionName="adoptImplicitArraySizes"/>
    <functioncall functionName="adoptedLevels"/>
    <functioncall functionName="advance"/>
    <functioncall functionName="alloc"/>
    <functioncall functionName="allocate"/>
    <functioncall functionName="amend"/>
    <functioncall functionName="an"/>
    <functioncall functionName="anon"/>
    <functioncall functionName="anonContainer"/>
    <functioncall functionName="anonId"/>
    <functioncall functionName="any_of"/>
    <functioncall functionName="appAttributeBindings"/>
    <functioncall functionName="append"/>
    <functioncall functionName="appendInt"/>
    <functioncall functionName="appendMangledName"/>
    <functioncall functionName="appendStr"/>
    <functioncall functionName="appendUint"/>
    <functioncall functionName="arg"/>
    <functioncall functionName="argString"/>
    <functioncall functionName="array"/>
    <functioncall functionName="arraySizes"/>
    <functioncall functionName="arrayStride"/>
    <functioncall functionName="arrayed"/>
    <functioncall functionName="as"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="assign"/>
    <functioncall functionName="atGlobalLevel"/>
    <functioncall functionName="attributes"/>
    <functioncall functionName="autoMapBindings"/>
    <functioncall functionName="autoMapLocations"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bConst"/>
    <functioncall functionName="back"/>
    <functioncall functionName="base"/>
    <functioncall functionName="basicType"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="beginInvocationInterlockCount"/>
    <functioncall functionName="behavior"/>
    <functioncall functionName="binaryDoubleOutput"/>
    <functioncall functionName="binding"/>
    <functioncall functionName="blendEquation"/>
    <functioncall functionName="blendEquations"/>
    <functioncall functionName="blockName"/>
    <functioncall functionName="body"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="break"/>
    <functioncall functionName="bt"/>
    <functioncall functionName="buf"/>
    <functioncall functionName="buffer"/>
    <functioncall functionName="buildMangledName"/>
    <functioncall functionName="builtIn"/>
    <functioncall functionName="builtInResources"/>
    <functioncall functionName="c"/>
    <functioncall functionName="cUnion"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="callee"/>
    <functioncall functionName="caller"/>
    <functioncall functionName="capacity"/>
    <functioncall functionName="centroid"/>
    <functioncall functionName="chIndex"/>
    <functioncall functionName="changeFront"/>
    <functioncall functionName="changeName"/>
    <functioncall functionName="changeOuterArraySize"/>
    <functioncall functionName="changeOuterSize"/>
    <functioncall functionName="char"/>
    <functioncall functionName="charToRead"/>
    <functioncall functionName="checkAllocList"/>
    <functioncall functionName="checkGuardBlock"/>
    <functioncall functionName="checkType"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="clearInnerUnsized"/>
    <functioncall functionName="clearInterpolation"/>
    <functioncall functionName="clearInterstage"/>
    <functioncall functionName="clearInterstageLayout"/>
    <functioncall functionName="clearLayout"/>
    <functioncall functionName="clearMemory"/>
    <functioncall functionName="clearReturnStruct"/>
    <functioncall functionName="clearStreamLayout"/>
    <functioncall functionName="clearUniformLayout"/>
    <functioncall functionName="clearXfbLayout"/>
    <functioncall functionName="client"/>
    <functioncall functionName="clone"/>
    <functioncall functionName="coherent"/>
    <functioncall functionName="col"/>
    <functioncall functionName="column"/>
    <functioncall functionName="comp"/>
    <functioncall functionName="compare"/>
    <functioncall functionName="component"/>
    <functioncall functionName="computeDerivativeMode"/>
    <functioncall functionName="computeNumComponents"/>
    <functioncall functionName="cond"/>
    <functioncall functionName="condition"/>
    <functioncall functionName="const"/>
    <functioncall functionName="constArray"/>
    <functioncall functionName="constSubtree"/>
    <functioncall functionName="constant"/>
    <functioncall functionName="constructType"/>
    <functioncall functionName="constructorType"/>
    <functioncall functionName="contains"/>
    <functioncall functionName="contains16BitType"/>
    <functioncall functionName="contains32BitType"/>
    <functioncall functionName="contains64BitType"/>
    <functioncall functionName="containsBasicType"/>
    <functioncall functionName="contextPragma"/>
    <functioncall functionName="controlFlowNestingLevel"/>
    <functioncall functionName="coopmat"/>
    <functioncall functionName="copied"/>
    <functioncall functionName="copiedMap"/>
    <functioncall functionName="copyArraySizes"/>
    <functioncall functionName="copyDereferenced"/>
    <functioncall functionName="copyNonFront"/>
    <functioncall functionName="copyOf"/>
    <functioncall functionName="copyTypeParameters"/>
    <functioncall functionName="copyUpDeferredInsert"/>
    <functioncall functionName="count"/>
    <functioncall functionName="counterIndex"/>
    <functioncall functionName="curLineNo"/>
    <functioncall functionName="current"/>
    <functioncall functionName="currentChar"/>
    <functioncall functionName="currentLevel"/>
    <functioncall functionName="currentScanner"/>
    <functioncall functionName="currentScope"/>
    <functioncall functionName="currentSource"/>
    <functioncall functionName="d"/>
    <functioncall functionName="dConst"/>
    <functioncall functionName="data"/>
    <functioncall functionName="dealloc"/>
    <functioncall functionName="debug"/>
    <functioncall functionName="declaredBuiltIn"/>
    <functioncall functionName="deepCopy"/>
    <functioncall functionName="default"/>
    <functioncall functionName="defaultParamCount"/>
    <functioncall functionName="defaultPrecision"/>
    <functioncall functionName="defaultProfile"/>
    <functioncall functionName="defaultValue"/>
    <functioncall functionName="defaultVersion"/>
    <functioncall functionName="defined"/>
    <functioncall functionName="dependency"/>
    <functioncall functionName="depth"/>
    <functioncall functionName="depthLayout"/>
    <functioncall functionName="depthReplacing"/>
    <functioncall functionName="derefIndex"/>
    <functioncall functionName="devicecoherent"/>
    <functioncall functionName="dim"/>
    <functioncall functionName="dontFlatten"/>
    <functioncall functionName="dontUnroll"/>
    <functioncall functionName="double"/>
    <functioncall functionName="e"/>
    <functioncall functionName="earlyFragmentTests"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="endInvocationInterlockCount"/>
    <functioncall functionName="endOfFileReached"/>
    <functioncall functionName="endptr"/>
    <functioncall functionName="entryPointName"/>
    <functioncall functionName="envStage"/>
    <functioncall functionName="ep"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="error"/>
    <functioncall functionName="errorCallback"/>
    <functioncall functionName="error_message"/>
    <functioncall functionName="excludedAttributes"/>
    <functioncall functionName="excludedCount"/>
    <functioncall functionName="executable"/>
    <functioncall functionName="explicitFloatDefault"/>
    <functioncall functionName="explicitIntDefault"/>
    <functioncall functionName="explicitInterp"/>
    <functioncall functionName="expression"/>
    <functioncall functionName="extension"/>
    <functioncall functionName="extensionCallback"/>
    <functioncall functionName="extensionRequested"/>
    <functioncall functionName="extensions"/>
    <functioncall functionName="exts"/>
    <functioncall functionName="f"/>
    <functioncall functionName="fabs"/>
    <functioncall functionName="false"/>
    <functioncall functionName="falseB"/>
    <functioncall functionName="falseBlock"/>
    <functioncall functionName="featureDesc"/>
    <functioncall functionName="fieldName"/>
    <functioncall functionName="file"/>
    <functioncall functionName="filename"/>
    <functioncall functionName="fill"/>
    <functioncall functionName="finale"/>
    <functioncall functionName="find"/>
    <functioncall functionName="findFunctionNameList"/>
    <functioncall functionName="findFunctionVariableName"/>
    <functioncall functionName="find_first_of"/>
    <functioncall functionName="first"/>
    <functioncall functionName="firstMember"/>
    <functioncall functionName="firstNewMember"/>
    <functioncall functionName="fixedAttributeBindings"/>
    <functioncall functionName="flag"/>
    <functioncall functionName="flat"/>
    <functioncall functionName="flatten"/>
    <functioncall functionName="flattenSubset"/>
    <functioncall functionName="flattenUniformArrays"/>
    <functioncall functionName="flowOp"/>
    <functioncall functionName="fn_tstr"/>
    <functioncall functionName="for"/>
    <functioncall functionName="forceDefaultVersionAndProfile"/>
    <functioncall functionName="forwardCompatible"/>
    <functioncall functionName="found"/>
    <functioncall functionName="front"/>
    <functioncall functionName="frontNode"/>
    <functioncall functionName="frontSize"/>
    <functioncall functionName="func"/>
    <functioncall functionName="geoPassthroughEXT"/>
    <functioncall functionName="geometry"/>
    <functioncall functionName="getAnonContainer"/>
    <functioncall functionName="getAnonId"/>
    <functioncall functionName="getArraySizes"/>
    <functioncall functionName="getAsAnonMember"/>
    <functioncall functionName="getAsConstantUnion"/>
    <functioncall functionName="getAsFunction"/>
    <functioncall functionName="getAsSymbolNode"/>
    <functioncall functionName="getAsTyped"/>
    <functioncall functionName="getAsVariable"/>
    <functioncall functionName="getBasicString"/>
    <functioncall functionName="getBasicType"/>
    <functioncall functionName="getBasicTypeString"/>
    <functioncall functionName="getBinding"/>
    <functioncall functionName="getBuiltInVariableString"/>
    <functioncall functionName="getCompleteString"/>
    <functioncall functionName="getConstArray"/>
    <functioncall functionName="getCumulativeSize"/>
    <functioncall functionName="getDConst"/>
    <functioncall functionName="getDefaultParamCount"/>
    <functioncall functionName="getDimNode"/>
    <functioncall functionName="getDimSize"/>
    <functioncall functionName="getEntryPointName"/>
    <functioncall functionName="getFieldName"/>
    <functioncall functionName="getId"/>
    <functioncall functionName="getImplicitArraySize"/>
    <functioncall functionName="getImplicitSize"/>
    <functioncall functionName="getLastValidSourceIndex"/>
    <functioncall functionName="getLayoutFormatString"/>
    <functioncall functionName="getLayoutMatrixString"/>
    <functioncall functionName="getLayoutPackingString"/>
    <functioncall functionName="getMangledName"/>
    <functioncall functionName="getMatrixCols"/>
    <functioncall functionName="getMatrixRows"/>
    <functioncall functionName="getMemberExtensions"/>
    <functioncall functionName="getName"/>
    <functioncall functionName="getNumDims"/>
    <functioncall functionName="getNumMemberExtensions"/>
    <functioncall functionName="getNumPipeInputs"/>
    <functioncall functionName="getNumUniformBlocks"/>
    <functioncall functionName="getNumUniformVariables"/>
    <functioncall functionName="getOp"/>
    <functioncall functionName="getOperationPrecision"/>
    <functioncall functionName="getOuterNode"/>
    <functioncall functionName="getOuterSize"/>
    <functioncall functionName="getParamCount"/>
    <functioncall functionName="getPipeInput"/>
    <functioncall functionName="getPrecisionQualifierString"/>
    <functioncall functionName="getPreviousDefaultPrecisions"/>
    <functioncall functionName="getProcesses"/>
    <functioncall functionName="getQualifier"/>
    <functioncall functionName="getReferentType"/>
    <functioncall functionName="getReflectionIndex"/>
    <functioncall functionName="getReflectionPipeIOIndex"/>
    <functioncall functionName="getResourceName"/>
    <functioncall functionName="getSampler"/>
    <functioncall functionName="getSequence"/>
    <functioncall functionName="getSourceLoc"/>
    <functioncall functionName="getStorageQualifierString"/>
    <functioncall functionName="getString"/>
    <functioncall functionName="getStringNameOrNum"/>
    <functioncall functionName="getStruct"/>
    <functioncall functionName="getStructReturnIndex"/>
    <functioncall functionName="getType"/>
    <functioncall functionName="getTypeName"/>
    <functioncall functionName="getUniform"/>
    <functioncall functionName="getUniformBlock"/>
    <functioncall functionName="getUniqueId"/>
    <functioncall functionName="getVectorSize"/>
    <functioncall functionName="getWritableStruct"/>
    <functioncall functionName="glDefineType"/>
    <functioncall functionName="global"/>
    <functioncall functionName="globalLevel"/>
    <functioncall functionName="globalUniformBinding"/>
    <functioncall functionName="globalUniformBlock"/>
    <functioncall functionName="globalUniformSet"/>
    <functioncall functionName="guardBlockBeginVal"/>
    <functioncall functionName="guardBlockEndVal"/>
    <functioncall functionName="guardBlockSize"/>
    <functioncall functionName="hasAlign"/>
    <functioncall functionName="hasAnyLocation"/>
    <functioncall functionName="hasAttachment"/>
    <functioncall functionName="hasBinding"/>
    <functioncall functionName="hasBufferReference"/>
    <functioncall functionName="hasBufferReferenceAlign"/>
    <functioncall functionName="hasComponent"/>
    <functioncall functionName="hasFormat"/>
    <functioncall functionName="hasFunctionName"/>
    <functioncall functionName="hasHiddenMember"/>
    <functioncall functionName="hasIndex"/>
    <functioncall functionName="hasLayout"/>
    <functioncall functionName="hasLocation"/>
    <functioncall functionName="hasMatrix"/>
    <functioncall functionName="hasNonXfbLayout"/>
    <functioncall functionName="hasOffset"/>
    <functioncall functionName="hasPacking"/>
    <functioncall functionName="hasSet"/>
    <functioncall functionName="hasSource"/>
    <functioncall functionName="hasSpecConstantId"/>
    <functioncall functionName="hasStream"/>
    <functioncall functionName="hasUniformLayout"/>
    <functioncall functionName="hasXfb"/>
    <functioncall functionName="hasXfbBuffer"/>
    <functioncall functionName="hasXfbOffset"/>
    <functioncall functionName="hasXfbStride"/>
    <functioncall functionName="hasa"/>
    <functioncall functionName="haveReturnableObjectCode"/>
    <functioncall functionName="haveValidObjectCode"/>
    <functioncall functionName="headerData"/>
    <functioncall functionName="headerLength"/>
    <functioncall functionName="headerName"/>
    <functioncall functionName="headerSize"/>
    <functioncall functionName="hiddenMember"/>
    <functioncall functionName="hlslFunctionality1"/>
    <functioncall functionName="hlslIoMapping"/>
    <functioncall functionName="hlslOffsets"/>
    <functioncall functionName="i"/>
    <functioncall functionName="i16Const"/>
    <functioncall functionName="i64"/>
    <functioncall functionName="i64Const"/>
    <functioncall functionName="i8Const"/>
    <functioncall functionName="iConst"/>
    <functioncall functionName="iSink"/>
    <functioncall functionName="id"/>
    <functioncall functionName="if"/>
    <functioncall functionName="illegalImplicitThis"/>
    <functioncall functionName="image"/>
    <functioncall functionName="implicitArraySize"/>
    <functioncall functionName="implicitCounterName"/>
    <functioncall functionName="implicitStride"/>
    <functioncall functionName="implicitThis"/>
    <functioncall functionName="implicitThisName"/>
    <functioncall functionName="inOrOut"/>
    <functioncall functionName="inVisit"/>
    <functioncall functionName="includer"/>
    <functioncall functionName="index"/>
    <functioncall functionName="infoSink"/>
    <functioncall functionName="init"/>
    <functioncall functionName="initQualifiers"/>
    <functioncall functionName="initType"/>
    <functioncall functionName="inputPrimitive"/>
    <functioncall functionName="insert"/>
    <functioncall functionName="insertAnonymousMembers"/>
    <functioncall functionName="insertName"/>
    <functioncall functionName="instances"/>
    <functioncall functionName="int"/>
    <functioncall functionName="interlockOrdering"/>
    <functioncall functionName="interm"/>
    <functioncall functionName="intermediate"/>
    <functioncall functionName="invariant"/>
    <functioncall functionName="invert"/>
    <functioncall functionName="invertY"/>
    <functioncall functionName="invocations"/>
    <functioncall functionName="is1D"/>
    <functioncall functionName="isArray"/>
    <functioncall functionName="isArrayVariablyIndexed"/>
    <functioncall functionName="isAtomic"/>
    <functioncall functionName="isBuiltIn"/>
    <functioncall functionName="isBuiltInLevel"/>
    <functioncall functionName="isCombined"/>
    <functioncall functionName="isConstructor"/>
    <functioncall functionName="isCoopMat"/>
    <functioncall functionName="isCoopmat"/>
    <functioncall functionName="isExternal"/>
    <functioncall functionName="isFloatingDomain"/>
    <functioncall functionName="isFrontEndConstant"/>
    <functioncall functionName="isGlobalLevel"/>
    <functioncall functionName="isImage"/>
    <functioncall functionName="isImageClass"/>
    <functioncall functionName="isInnerUnsized"/>
    <functioncall functionName="isIntegerDomain"/>
    <functioncall functionName="isMatrix"/>
    <functioncall functionName="isMultiSample"/>
    <functioncall functionName="isOpaque"/>
    <functioncall functionName="isOuterSpecialization"/>
    <functioncall functionName="isParameterized"/>
    <functioncall functionName="isPerView"/>
    <functioncall functionName="isPipeInput"/>
    <functioncall functionName="isPipeOutput"/>
    <functioncall functionName="isPureSampler"/>
    <functioncall functionName="isPushConstant"/>
    <functioncall functionName="isReference"/>
    <functioncall functionName="isScalar"/>
    <functioncall functionName="isShaderRecordNV"/>
    <functioncall functionName="isSized"/>
    <functioncall functionName="isSpecConstant"/>
    <functioncall functionName="isStruct"/>
    <functioncall functionName="isSubpass"/>
    <functioncall functionName="isTexture"/>
    <functioncall functionName="isThisLevel"/>
    <functioncall functionName="isTypeSignedInt"/>
    <functioncall functionName="isTypeUnsignedInt"/>
    <functioncall functionName="isUnsizedArray"/>
    <functioncall functionName="isVariablyIndexed"/>
    <functioncall functionName="isVector"/>
    <functioncall functionName="isYuv"/>
    <functioncall functionName="it"/>
    <functioncall functionName="iterationMultiple"/>
    <functioncall functionName="iterationsInfinite"/>
    <functioncall functionName="l"/>
    <functioncall functionName="lang"/>
    <functioncall functionName="language"/>
    <functioncall functionName="last"/>
    <functioncall functionName="lastAllocation"/>
    <functioncall functionName="lastMember"/>
    <functioncall functionName="layoutAlign"/>
    <functioncall functionName="layoutAttachment"/>
    <functioncall functionName="layoutAttachmentEnd"/>
    <functioncall functionName="layoutBinding"/>
    <functioncall functionName="layoutBindingEnd"/>
    <functioncall functionName="layoutBufferReference"/>
    <functioncall functionName="layoutBufferReferenceAlign"/>
    <functioncall functionName="layoutBufferReferenceAlignEnd"/>
    <functioncall functionName="layoutComponent"/>
    <functioncall functionName="layoutComponentEnd"/>
    <functioncall functionName="layoutDepth"/>
    <functioncall functionName="layoutDerivativeGroupLinear"/>
    <functioncall functionName="layoutDerivativeGroupQuads"/>
    <functioncall functionName="layoutFormat"/>
    <functioncall functionName="layoutIndex"/>
    <functioncall functionName="layoutIndexEnd"/>
    <functioncall functionName="layoutLocation"/>
    <functioncall functionName="layoutLocationEnd"/>
    <functioncall functionName="layoutMatrix"/>
    <functioncall functionName="layoutNotSet"/>
    <functioncall functionName="layoutOffset"/>
    <functioncall functionName="layoutOverrideCoverage"/>
    <functioncall functionName="layoutPacking"/>
    <functioncall functionName="layoutPassthrough"/>
    <functioncall functionName="layoutPushConstant"/>
    <functioncall functionName="layoutSecondaryViewportRelativeOffset"/>
    <functioncall functionName="layoutSet"/>
    <functioncall functionName="layoutSetEnd"/>
    <functioncall functionName="layoutShaderRecordNV"/>
    <functioncall functionName="layoutSpecConstantId"/>
    <functioncall functionName="layoutSpecConstantIdEnd"/>
    <functioncall functionName="layoutStream"/>
    <functioncall functionName="layoutStreamEnd"/>
    <functioncall functionName="layoutViewportRelative"/>
    <functioncall functionName="layoutXfbBuffer"/>
    <functioncall functionName="layoutXfbBufferEnd"/>
    <functioncall functionName="layoutXfbOffset"/>
    <functioncall functionName="layoutXfbOffsetEnd"/>
    <functioncall functionName="layoutXfbStride"/>
    <functioncall functionName="layoutXfbStrideEnd"/>
    <functioncall functionName="leftUnionArray"/>
    <functioncall functionName="len"/>
    <functioncall functionName="lengths"/>
    <functioncall functionName="level"/>
    <functioncall functionName="limits"/>
    <functioncall functionName="line"/>
    <functioncall functionName="lineCallback"/>
    <functioncall functionName="list"/>
    <functioncall functionName="literal"/>
    <functioncall functionName="loc"/>
    <functioncall functionName="locText"/>
    <functioncall functionName="location"/>
    <functioncall functionName="long"/>
    <functioncall functionName="loopNestingLevel"/>
    <functioncall functionName="lower_bound"/>
    <functioncall functionName="m"/>
    <functioncall functionName="makeTemporary"/>
    <functioncall functionName="mangledName"/>
    <functioncall functionName="map"/>
    <functioncall functionName="matrixCols"/>
    <functioncall functionName="matrixRows"/>
    <functioncall functionName="max"/>
    <functioncall functionName="maxDepth"/>
    <functioncall functionName="maxIterations"/>
    <functioncall functionName="maxSamplerIndex"/>
    <functioncall functionName="maxSize"/>
    <functioncall functionName="mc"/>
    <functioncall functionName="mem"/>
    <functioncall functionName="member"/>
    <functioncall functionName="memberExtensions"/>
    <functioncall functionName="memberNumber"/>
    <functioncall functionName="memory"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="message"/>
    <functioncall functionName="messages"/>
    <functioncall functionName="method"/>
    <functioncall functionName="min"/>
    <functioncall functionName="minIterations"/>
    <functioncall functionName="minVersion"/>
    <functioncall functionName="mode"/>
    <functioncall functionName="mr"/>
    <functioncall functionName="multiStream"/>
    <functioncall functionName="n"/>
    <functioncall functionName="name"/>
    <functioncall functionName="nameStr"/>
    <functioncall functionName="nanMinMaxClamp"/>
    <functioncall functionName="needToLegalize"/>
    <functioncall functionName="new"/>
    <functioncall functionName="newId"/>
    <functioncall functionName="newLine"/>
    <functioncall functionName="newLineNo"/>
    <functioncall functionName="newName"/>
    <functioncall functionName="newOp"/>
    <functioncall functionName="newString"/>
    <functioncall functionName="nextPage"/>
    <functioncall functionName="noBuiltInRedeclarations"/>
    <functioncall functionName="noContraction"/>
    <functioncall functionName="noReturnStruct"/>
    <functioncall functionName="node"/>
    <functioncall functionName="nodeComps"/>
    <functioncall functionName="nonOpaque"/>
    <functioncall functionName="nonUniform"/>
    <functioncall functionName="nonprivate"/>
    <functioncall functionName="nopersp"/>
    <functioncall functionName="npos"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="num"/>
    <functioncall functionName="numBytes"/>
    <functioncall functionName="numEntryPoints"/>
    <functioncall functionName="numErrors"/>
    <functioncall functionName="numExts"/>
    <functioncall functionName="numMembers"/>
    <functioncall functionName="numPushConstants"/>
    <functioncall functionName="numShaderRecordNVBlocks"/>
    <functioncall functionName="numSources"/>
    <functioncall functionName="numStrings"/>
    <functioncall functionName="numTaskNVBlocks"/>
    <functioncall functionName="numViews"/>
    <functioncall functionName="o"/>
    <functioncall functionName="obey"/>
    <functioncall functionName="object"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="offsetAllocation"/>
    <functioncall functionName="op"/>
    <functioncall functionName="openGl"/>
    <functioncall functionName="operand"/>
    <functioncall functionName="operationPrecision"/>
    <functioncall functionName="operator=="/>
    <functioncall functionName="optimize"/>
    <functioncall functionName="order"/>
    <functioncall functionName="originUpperLeft"/>
    <functioncall functionName="output"/>
    <functioncall functionName="outputPrimitive"/>
    <functioncall functionName="outputStream"/>
    <functioncall functionName="overlap"/>
    <functioncall functionName="override"/>
    <functioncall functionName="p"/>
    <functioncall functionName="pCallee"/>
    <functioncall functionName="pCaller"/>
    <functioncall functionName="pExpression"/>
    <functioncall functionName="packing"/>
    <functioncall functionName="pageCount"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="parenAt"/>
    <functioncall functionName="parse"/>
    <functioncall functionName="parsingBuiltins"/>
    <functioncall functionName="partialCount"/>
    <functioncall functionName="patch"/>
    <functioncall functionName="peek"/>
    <functioncall functionName="peelCount"/>
    <functioncall functionName="perPrimitiveNV"/>
    <functioncall functionName="perTaskNV"/>
    <functioncall functionName="perViewNV"/>
    <functioncall functionName="pervertexNV"/>
    <functioncall functionName="pixelCenterInteger"/>
    <functioncall functionName="pointMode"/>
    <functioncall functionName="pop"/>
    <functioncall functionName="pop_back"/>
    <functioncall functionName="pop_front"/>
    <functioncall functionName="postDepthCoverage"/>
    <functioncall functionName="postEntryPointReturn"/>
    <functioncall functionName="postGuard"/>
    <functioncall functionName="postVisit"/>
    <functioncall functionName="post_depth_coverageEXTs"/>
    <functioncall functionName="powerOf2"/>
    <functioncall functionName="ppContext"/>
    <functioncall functionName="pragmaTable"/>
    <functioncall functionName="preGuard"/>
    <functioncall functionName="preVisit"/>
    <functioncall functionName="precision"/>
    <functioncall functionName="predicate"/>
    <functioncall functionName="prefix"/>
    <functioncall functionName="prev"/>
    <functioncall functionName="prevAlloc"/>
    <functioncall functionName="primitives"/>
    <functioncall functionName="process"/>
    <functioncall functionName="profile"/>
    <functioncall functionName="profileMask"/>
    <functioncall functionName="profileRequires"/>
    <functioncall functionName="prototyped"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="q"/>
    <functioncall functionName="qualifier"/>
    <functioncall functionName="queuefamilycoherent"/>
    <functioncall functionName="r"/>
    <functioncall functionName="readOnly"/>
    <functioncall functionName="readonly"/>
    <functioncall functionName="recursive"/>
    <functioncall functionName="referentType"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="relateToOperator"/>
    <functioncall functionName="res"/>
    <functioncall functionName="reserve"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="respectingPrecisionQualifiers"/>
    <functioncall functionName="restrict"/>
    <functioncall functionName="retType"/>
    <functioncall functionName="ret_str"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rhs"/>
    <functioncall functionName="right"/>
    <functioncall functionName="rightToLeft"/>
    <functioncall functionName="rowMajor"/>
    <functioncall functionName="s"/>
    <functioncall functionName="sameArrayness"/>
    <functioncall functionName="sameElementShape"/>
    <functioncall functionName="sameElementType"/>
    <functioncall functionName="sameInnerArrayness"/>
    <functioncall functionName="sameReferenceType"/>
    <functioncall functionName="sameStructType"/>
    <functioncall functionName="sameTypeParameters"/>
    <functioncall functionName="sample"/>
    <functioncall functionName="sampler"/>
    <functioncall functionName="scanContext"/>
    <functioncall functionName="scanner"/>
    <functioncall functionName="scopeMangler"/>
    <functioncall functionName="second"/>
    <functioncall functionName="separateNameSpaces"/>
    <functioncall functionName="set"/>
    <functioncall functionName="setAnonId"/>
    <functioncall functionName="setBConst"/>
    <functioncall functionName="setColumn"/>
    <functioncall functionName="setDConst"/>
    <functioncall functionName="setDimSize"/>
    <functioncall functionName="setExtensions"/>
    <functioncall functionName="setFile"/>
    <functioncall functionName="setFunctionExtensions"/>
    <functioncall functionName="setI16Const"/>
    <functioncall functionName="setI64Const"/>
    <functioncall functionName="setI8Const"/>
    <functioncall functionName="setIConst"/>
    <functioncall functionName="setLine"/>
    <functioncall functionName="setMemberExtensions"/>
    <functioncall functionName="setPreviousDefaultPrecisions"/>
    <functioncall functionName="setString"/>
    <functioncall functionName="setThisLevel"/>
    <functioncall functionName="setU16Const"/>
    <functioncall functionName="setU64Const"/>
    <functioncall functionName="setU8Const"/>
    <functioncall functionName="setUConst"/>
    <functioncall functionName="setUniqueId"/>
    <functioncall functionName="setVariablyIndexed"/>
    <functioncall functionName="setting"/>
    <functioncall functionName="shader"/>
    <functioncall functionName="shadow"/>
    <functioncall functionName="shallowCopy"/>
    <functioncall functionName="shared"/>
    <functioncall functionName="shift"/>
    <functioncall functionName="short"/>
    <functioncall functionName="shortCircuit"/>
    <functioncall functionName="single"/>
    <functioncall functionName="singleConstParam"/>
    <functioncall functionName="singleConstantParam"/>
    <functioncall functionName="singleLogical"/>
    <functioncall functionName="sink"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sizes"/>
    <functioncall functionName="smooth"/>
    <functioncall functionName="snprintf"/>
    <functioncall functionName="source"/>
    <functioncall functionName="sourceName"/>
    <functioncall functionName="sourceNum"/>
    <functioncall functionName="sourceToRead"/>
    <functioncall functionName="sources"/>
    <functioncall functionName="spacing"/>
    <functioncall functionName="specConstant"/>
    <functioncall functionName="sprintf_s"/>
    <functioncall functionName="spv"/>
    <functioncall functionName="spvVersion"/>
    <functioncall functionName="srcOffset"/>
    <functioncall functionName="stage"/>
    <functioncall functionName="stages"/>
    <functioncall functionName="start"/>
    <functioncall functionName="startIndex"/>
    <functioncall functionName="statementNestingLevel"/>
    <functioncall functionName="static_assert"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="storage"/>
    <functioncall functionName="str"/>
    <functioncall functionName="stride"/>
    <functioncall functionName="string"/>
    <functioncall functionName="stringBias"/>
    <functioncall functionName="stringNum"/>
    <functioncall functionName="strings"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strtoll"/>
    <functioncall functionName="structNestingLevel"/>
    <functioncall functionName="structReturnIndexBits"/>
    <functioncall functionName="structReturnSlots"/>
    <functioncall functionName="structure"/>
    <functioncall functionName="subgroupcoherent"/>
    <functioncall functionName="subset"/>
    <functioncall functionName="subtree"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="symbol"/>
    <functioncall functionName="symbolTable"/>
    <functioncall functionName="t"/>
    <functioncall functionName="tHeader"/>
    <functioncall functionName="tLevelPair"/>
    <functioncall functionName="tOp"/>
    <functioncall functionName="targetOffset"/>
    <functioncall functionName="terminal"/>
    <functioncall functionName="test"/>
    <functioncall functionName="testFirst"/>
    <functioncall functionName="text"/>
    <functioncall functionName="textureSamplerTransformMode"/>
    <functioncall functionName="this"/>
    <functioncall functionName="thisDepth"/>
    <functioncall functionName="thisLevel"/>
    <functioncall functionName="thisSymbol"/>
    <functioncall functionName="to_string"/>
    <functioncall functionName="topLevelArrayStride"/>
    <functioncall functionName="traverse"/>
    <functioncall functionName="treeRoot"/>
    <functioncall functionName="true"/>
    <functioncall functionName="trueB"/>
    <functioncall functionName="trueBlock"/>
    <functioncall functionName="type"/>
    <functioncall functionName="typeLoc"/>
    <functioncall functionName="typeName"/>
    <functioncall functionName="typeParameters"/>
    <functioncall functionName="type_string"/>
    <functioncall functionName="u"/>
    <functioncall functionName="u16Const"/>
    <functioncall functionName="u64"/>
    <functioncall functionName="u64Const"/>
    <functioncall functionName="u8Const"/>
    <functioncall functionName="uConst"/>
    <functioncall functionName="uT"/>
    <functioncall functionName="ua"/>
    <functioncall functionName="uniformBindings"/>
    <functioncall functionName="uniformLocationBase"/>
    <functioncall functionName="unionArray"/>
    <functioncall functionName="uniqueId"/>
    <functioncall functionName="unroll"/>
    <functioncall functionName="updateImplicitSize"/>
    <functioncall functionName="upper_bound"/>
    <functioncall functionName="usePhysicalStorageBuffer"/>
    <functioncall functionName="useStorageBuffer"/>
    <functioncall functionName="useUnknownFormat"/>
    <functioncall functionName="useVariablePointers"/>
    <functioncall functionName="useVulkanMemoryModel"/>
    <functioncall functionName="userData"/>
    <functioncall functionName="userDataFill"/>
    <functioncall functionName="userDef"/>
    <functioncall functionName="userDefined"/>
    <functioncall functionName="userType"/>
    <functioncall functionName="v"/>
    <functioncall functionName="val"/>
    <functioncall functionName="value"/>
    <functioncall functionName="variable"/>
    <functioncall functionName="variablyIndexed"/>
    <functioncall functionName="vector1"/>
    <functioncall functionName="vectorSize"/>
    <functioncall functionName="version"/>
    <functioncall functionName="versionCallback"/>
    <functioncall functionName="vertexOrder"/>
    <functioncall functionName="vertexSpacing"/>
    <functioncall functionName="vertices"/>
    <functioncall functionName="viewportEXTs"/>
    <functioncall functionName="volatil"/>
    <functioncall functionName="vs"/>
    <functioncall functionName="vulkan"/>
    <functioncall functionName="vulkanGlsl"/>
    <functioncall functionName="warn"/>
    <functioncall functionName="while"/>
    <functioncall functionName="workgroupcoherent"/>
    <functioncall functionName="writable"/>
    <functioncall functionName="writeonly"/>
    <functioncall functionName="xfbMode"/>
  </FileInfo>
</analyzerinfo>
