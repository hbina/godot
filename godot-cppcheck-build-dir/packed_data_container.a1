<?xml version="1.0"?>
<analyzerinfo checksum="1603426848">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;PackedDataContainerRef::offset&apos; is not initialized in the constructor." verbose="Member variable &apos;PackedDataContainerRef::offset&apos; is not initialized in the constructor." cwe="398">
            <location file="/home/hbina/git/godot/core/packed_data_container.cpp" line="433" column="25"/>
            <symbol>PackedDataContainerRef::offset</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/core/packed_data_container.cpp" line="109" column="59"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ref[0]&apos; is assigned a value that is never used." verbose="Variable &apos;ref[0]&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/core/packed_data_container.cpp" line="57" column="10"/>
            <symbol>ref[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ref[0]&apos; is assigned a value that is never used." verbose="Variable &apos;ref[0]&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/core/packed_data_container.cpp" line="72" column="9"/>
            <symbol>ref[0]</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:65:10" call-funcname="_key_at_ofs" call-argnr="1" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="39" col="27" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:65:10" call-funcname="_key_at_ofs" call-argnr="3" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="39" col="27" call-argexpr="err" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/hbina/git/godot/core/packed_data_container.cpp" line="38" col="13" info="Assignment 'err=false', assigned value is 0"/>
</function-call><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:68:6" call-funcname="_size" call-argnr="1" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="47" col="14" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:68:6" call-funcname="_size" call-argnr="1" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="53" col="23" call-argexpr="p_offset" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/hbina/git/godot/core/packed_data_container.cpp" line="359" col="32" info="Calling function '_iter_init_ofs', 2nd argument '0' value is 0"/>
</function-call><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:68:6" call-funcname="_size" call-argnr="1" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="65" col="18" call-argexpr="p_offset" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/hbina/git/godot/core/packed_data_container.cpp" line="364" col="32" info="Calling function '_iter_next_ofs', 2nd argument '0' value is 0"/>
</function-call><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:68:6" call-funcname="_size" call-argnr="1" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="78" col="18" call-argexpr="p_offset" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/hbina/git/godot/core/packed_data_container.cpp" line="368" col="31" info="Calling function '_iter_get_ofs', 2nd argument '0' value is 0"/>
</function-call><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:56:10" call-funcname="_iter_init_ofs" call-argnr="2" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="359" col="23" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:57:10" call-funcname="_iter_next_ofs" call-argnr="2" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="364" col="23" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/packed_data_container.h:58:10" call-funcname="_iter_get_ofs" call-argnr="2" file="/home/hbina/git/godot/core/packed_data_container.cpp" line="368" col="22" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="getvar" lineNumber="36"/>
    <functiondecl functionName="size" lineNumber="45"/>
    <functiondecl functionName="_iter_init_ofs" lineNumber="50"/>
    <functiondecl functionName="_iter_next_ofs" lineNumber="62"/>
    <functiondecl functionName="_iter_get_ofs" lineNumber="76"/>
    <functiondecl functionName="_get_at_ofs" lineNumber="102"/>
    <functiondecl functionName="_type_at_ofs" lineNumber="128"/>
    <functiondecl functionName="_size" lineNumber="137"/>
    <functiondecl functionName="_key_at_ofs" lineNumber="158"/>
    <functiondecl functionName="_pack" lineNumber="215"/>
    <functiondecl functionName="pack" lineNumber="334"/>
    <functiondecl functionName="_set_data" lineNumber="347"/>
    <functiondecl functionName="_get_data" lineNumber="353"/>
    <functiondecl functionName="_iter_init" lineNumber="357"/>
    <functiondecl functionName="_iter_next" lineNumber="362"/>
    <functiondecl functionName="_iter_get" lineNumber="366"/>
    <functiondecl functionName="_bind_methods" lineNumber="371"/>
    <functiondecl functionName="_iter_init" lineNumber="391"/>
    <functiondecl functionName="_iter_next" lineNumber="396"/>
    <functiondecl functionName="_iter_get" lineNumber="400"/>
    <functiondecl functionName="_is_dictionary" lineNumber="405"/>
    <functiondecl functionName="_bind_methods" lineNumber="410"/>
    <functiondecl functionName="getvar" lineNumber="419"/>
    <functiondecl functionName="size" lineNumber="428"/>
    <functioncall functionName="ADD_PROPERTY"/>
    <functioncall functionName="D_METHOD"/>
    <functioncall functionName="E"/>
    <functioncall functionName="ERR_FAIL_COND_V"/>
    <functioncall functionName="ERR_FAIL_COND_V_MSG"/>
    <functioncall functionName="ERR_FAIL_V"/>
    <functioncall functionName="GDCLASS"/>
    <functioncall functionName="PACKED_BYTE_ARRAY"/>
    <functioncall functionName="PackedDataContainer"/>
    <functioncall functionName="PackedDataContainerRef"/>
    <functioncall functionName="PropertyInfo"/>
    <functioncall functionName="Ref"/>
    <functioncall functionName="Reference"/>
    <functioncall functionName="Resource"/>
    <functioncall functionName="TYPE_ARRAY"/>
    <functioncall functionName="TYPE_DICT"/>
    <functioncall functionName="Variant"/>
    <functioncall functionName="_get_at_ofs"/>
    <functioncall functionName="_get_data"/>
    <functioncall functionName="_is_dictionary"/>
    <functioncall functionName="_iter_get"/>
    <functioncall functionName="_iter_get_ofs"/>
    <functioncall functionName="_iter_init"/>
    <functioncall functionName="_iter_init_ofs"/>
    <functioncall functionName="_iter_next"/>
    <functioncall functionName="_iter_next_ofs"/>
    <functioncall functionName="_key_at_ofs"/>
    <functioncall functionName="_pack"/>
    <functioncall functionName="_set_data"/>
    <functioncall functionName="_size"/>
    <functioncall functionName="_type_at_ofs"/>
    <functioncall functionName="bind_method"/>
    <functioncall functionName="break"/>
    <functioncall functionName="const"/>
    <functioncall functionName="copymem"/>
    <functioncall functionName="decode_uint32"/>
    <functioncall functionName="decode_variant"/>
    <functioncall functionName="default"/>
    <functioncall functionName="dk"/>
    <functioncall functionName="encode_uint32"/>
    <functioncall functionName="encode_variant"/>
    <functioncall functionName="err"/>
    <functioncall functionName="false"/>
    <functioncall functionName="for"/>
    <functioncall functionName="found"/>
    <functioncall functionName="front"/>
    <functioncall functionName="get"/>
    <functioncall functionName="get_key_list"/>
    <functioncall functionName="get_type"/>
    <functioncall functionName="has"/>
    <functioncall functionName="hash"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="is_num"/>
    <functioncall functionName="key"/>
    <functioncall functionName="keys"/>
    <functioncall functionName="len"/>
    <functioncall functionName="memnew"/>
    <functioncall functionName="next"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="ofs"/>
    <functioncall functionName="p_data"/>
    <functioncall functionName="p_iter"/>
    <functioncall functionName="p_key"/>
    <functioncall functionName="p_offset"/>
    <functioncall functionName="p_ofs"/>
    <functioncall functionName="pack"/>
    <functioncall functionName="pdc"/>
    <functioncall functionName="pos"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="ptrw"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="r"/>
    <functioncall functionName="r_valid"/>
    <functioncall functionName="rd"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="s"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sort"/>
    <functioncall functionName="string_cache"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="this"/>
    <functioncall functionName="tmpdata"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="v"/>
    <functioncall functionName="vpos"/>
    <functioncall functionName="w"/>
  </FileInfo>
</analyzerinfo>
