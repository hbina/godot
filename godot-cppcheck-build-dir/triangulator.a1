<?xml version="1.0"?>
<analyzerinfo checksum="1672491308">
        <error id="operatorEqToSelf" severity="warning" msg="&apos;operator=&apos; should check for assignment to self to avoid problems with dynamic memory." verbose="&apos;operator=&apos; should check for assignment to self to ensure that each block of dynamically allocated memory is owned and managed by only one instance of the class." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="72" column="37"/>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;TriangulatorPoly::GetNumPoints&apos; can be const." verbose="The member function &apos;TriangulatorPoly::GetNumPoints&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="52" column="7"/>
            <symbol>TriangulatorPoly::GetNumPoints</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;TriangulatorPoly::IsHole&apos; can be const." verbose="The member function &apos;TriangulatorPoly::IsHole&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="56" column="7"/>
            <symbol>TriangulatorPoly::IsHole</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;TriangulatorPoly::GetOrientation&apos; can be const." verbose="The member function &apos;TriangulatorPoly::GetOrientation&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="93" column="6"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="81" column="23"/>
            <symbol>TriangulatorPoly::GetOrientation</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::IsConvex&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::IsConvex&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="158" column="7"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="284" column="29"/>
            <symbol>TriangulatorPartition::IsConvex</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::IsReflex&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::IsReflex&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="159" column="7"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="291" column="29"/>
            <symbol>TriangulatorPartition::IsReflex</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::Intersects&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::Intersects&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="165" column="6"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="134" column="28"/>
            <symbol>TriangulatorPartition::Intersects</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::Normalize&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::Normalize&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="167" column="10"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="114" column="32"/>
            <symbol>TriangulatorPartition::Normalize</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::Distance&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::Distance&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="168" column="9"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="126" column="31"/>
            <symbol>TriangulatorPartition::Distance</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::UpdateState&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::UpdateState&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="175" column="7"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="698" column="29"/>
            <symbol>TriangulatorPartition::UpdateState</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::Below&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::Below&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="180" column="7"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1352" column="29"/>
            <symbol>TriangulatorPartition::Below</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;TriangulatorPartition::AddDiagonal&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;TriangulatorPartition::AddDiagonal&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" file="/home/hbina/git/godot/thirdparty/misc/triangulator.h" line="181" column="7"/>
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1313" column="29"/>
            <symbol>TriangulatorPartition::AddDiagonal</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i2&apos; can be reduced." verbose="The scope of the variable &apos;i2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="82" column="10"/>
            <symbol>i2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="339" column="7"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;earfound&apos; can be reduced." verbose="The scope of the variable &apos;earfound&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="375" column="7"/>
            <symbol>earfound</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vindex&apos; can be reduced." verbose="The scope of the variable &apos;vindex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1058" column="21"/>
            <symbol>vindex</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vindex2&apos; can be reduced." verbose="The scope of the variable &apos;vindex2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1058" column="28"/>
            <symbol>vindex2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;polyendindex&apos; can be reduced." verbose="The scope of the variable &apos;polyendindex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1059" column="23"/>
            <symbol>polyendindex</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vprev&apos; can be reduced." verbose="The scope of the variable &apos;vprev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1061" column="25"/>
            <symbol>vprev</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p1&apos; can be declared with const" verbose="Parameter &apos;p1&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="58" column="42"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p2&apos; can be declared with const" verbose="Parameter &apos;p2&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="58" column="55"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p3&apos; can be declared with const" verbose="Parameter &apos;p3&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="58" column="68"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p11&apos; can be declared with const" verbose="Parameter &apos;p11&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="134" column="48"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p12&apos; can be declared with const" verbose="Parameter &apos;p12&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="134" column="62"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p21&apos; can be declared with const" verbose="Parameter &apos;p21&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="134" column="76"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p22&apos; can be declared with const" verbose="Parameter &apos;p22&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="134" column="90"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p1&apos; can be declared with const" verbose="Parameter &apos;p1&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="284" column="47"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p2&apos; can be declared with const" verbose="Parameter &apos;p2&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="284" column="60"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p3&apos; can be declared with const" verbose="Parameter &apos;p3&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="284" column="73"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p1&apos; can be declared with const" verbose="Parameter &apos;p1&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="291" column="47"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p2&apos; can be declared with const" verbose="Parameter &apos;p2&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="291" column="60"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p3&apos; can be declared with const" verbose="Parameter &apos;p3&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="291" column="73"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p1&apos; can be declared with const" verbose="Parameter &apos;p1&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1352" column="44"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p2&apos; can be declared with const" verbose="Parameter &apos;p2&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1352" column="57"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" call-funcname="AddDiagonal" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1157" col="17" call-argexpr="&newnumvertices" call-argvaluetype="7" call-argvalue="8"/><function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" call-funcname="AddDiagonal" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1175" col="16" call-argexpr="&newnumvertices" call-argvaluetype="7" call-argvalue="8"/><function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" call-funcname="AddDiagonal" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1194" col="17" call-argexpr="&newnumvertices" call-argvaluetype="7" call-argvalue="8"/><function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" call-funcname="AddDiagonal" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1213" col="17" call-argexpr="&newnumvertices" call-argvaluetype="7" call-argvalue="8"/><function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" call-funcname="AddDiagonal" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1226" col="18" call-argexpr="&newnumvertices" call-argvaluetype="7" call-argvalue="8"/><function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" call-funcname="AddDiagonal" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1252" col="18" call-argexpr="&newnumvertices" call-argvaluetype="7" call-argvalue="8"/><function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:200:6" call-funcname="RemoveHoles" call-argnr="1" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="447" col="6" my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:222:6" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:200:6" call-funcname="RemoveHoles" call-argnr="1" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="558" col="6" my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:291:6" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:264:6" call-funcname="MonotonePartition" call-argnr="1" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1538" col="6" my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:253:6" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:186:6" call-funcname="TriangulateMonotone" call-argnr="2" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1540" col="7" my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:253:6" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:163:7" my-argnr="1" my-argname="v" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="324" col="7" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:171:7" my-argnr="1" my-argname="v" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="333" col="7" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:172:7" my-argnr="1" my-argname="v" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="343" col="7" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:175:7" my-argnr="6" my-argname="dpstates" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="703" col="7" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:176:7" my-argnr="5" my-argname="dpstates" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="727" col="6" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:177:7" my-argnr="5" my-argname="dpstates" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="762" col="6" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" my-argnr="1" my-argname="vertices" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1324" col="2" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" my-argnr="2" my-argname="numvertices" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1319" col="15" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" my-argnr="5" my-argname="vertextypes" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1340" col="2" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" my-argnr="6" my-argname="edgeTreeIterators" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1341" col="2" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" my-argnr="8" my-argname="helpers" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1342" col="2" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:242:6" my-argnr="1" my-argname="poly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1547" col="19" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:200:6" my-argnr="1" my-argname="inpolys" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="180" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:210:6" my-argnr="1" my-argname="poly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="377" col="5" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:277:6" my-argnr="1" my-argname="poly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="466" col="16" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:232:6" my-argnr="1" my-argname="poly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="579" col="6" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:302:6" my-argnr="1" my-argname="poly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="805" col="6" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:264:6" my-argnr="1" my-argname="inpolys" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1066" col="13" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:181:7" my-argnr="2" my-argname="numvertices" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1319" col="15" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:186:6" my-argnr="1" my-argname="inPoly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1408" col="14" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/misc/triangulator.h:242:6" my-argnr="1" my-argname="poly" file="/home/hbina/git/godot/thirdparty/misc/triangulator.cpp" line="1547" col="19" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="Clear" lineNumber="45"/>
    <functiondecl functionName="Init" lineNumber="52"/>
    <functiondecl functionName="Triangle" lineNumber="58"/>
    <functiondecl functionName="GetOrientation" lineNumber="81"/>
    <functiondecl functionName="SetOrientation" lineNumber="94"/>
    <functiondecl functionName="Invert" lineNumber="101"/>
    <functiondecl functionName="Normalize" lineNumber="114"/>
    <functiondecl functionName="Distance" lineNumber="126"/>
    <functiondecl functionName="Intersects" lineNumber="134"/>
    <functiondecl functionName="RemoveHoles" lineNumber="166"/>
    <functiondecl functionName="IsConvex" lineNumber="284"/>
    <functiondecl functionName="IsReflex" lineNumber="291"/>
    <functiondecl functionName="IsInside" lineNumber="298"/>
    <functiondecl functionName="InCone" lineNumber="305"/>
    <functiondecl functionName="InCone" lineNumber="321"/>
    <functiondecl functionName="UpdateVertexReflexity" lineNumber="331"/>
    <functiondecl functionName="UpdateVertex" lineNumber="338"/>
    <functiondecl functionName="Triangulate_EC" lineNumber="369"/>
    <functiondecl functionName="Triangulate_EC" lineNumber="443"/>
    <functiondecl functionName="ConvexPartition_HM" lineNumber="454"/>
    <functiondecl functionName="ConvexPartition_HM" lineNumber="554"/>
    <functiondecl functionName="Triangulate_OPT" lineNumber="568"/>
    <functiondecl functionName="UpdateState" lineNumber="698"/>
    <functiondecl functionName="TypeA" lineNumber="721"/>
    <functiondecl functionName="TypeB" lineNumber="756"/>
    <functiondecl functionName="ConvexPartition_OPT" lineNumber="790"/>
    <functiondecl functionName="MonotonePartition" lineNumber="1055"/>
    <functiondecl functionName="AddDiagonal" lineNumber="1313"/>
    <functiondecl functionName="Below" lineNumber="1352"/>
    <functiondecl functionName="IsConvex" lineNumber="1373"/>
    <functiondecl functionName="TriangulateMonotone" lineNumber="1402"/>
    <functiondecl functionName="Triangulate_MONO" lineNumber="1534"/>
    <functiondecl functionName="Triangulate_MONO" lineNumber="1545"/>
    <functioncall functionName="AddDiagonal"/>
    <functioncall functionName="Below"/>
    <functioncall functionName="Clear"/>
    <functioncall functionName="ConvexPartition_HM"/>
    <functioncall functionName="Distance"/>
    <functioncall functionName="GetNumPoints"/>
    <functioncall functionName="GetOrientation"/>
    <functioncall functionName="GetPoint"/>
    <functioncall functionName="GetPoints"/>
    <functioncall functionName="InCone"/>
    <functioncall functionName="Init"/>
    <functioncall functionName="Intersects"/>
    <functioncall functionName="Invert"/>
    <functioncall functionName="IsConvex"/>
    <functioncall functionName="IsHole"/>
    <functioncall functionName="IsInside"/>
    <functioncall functionName="IsReflex"/>
    <functioncall functionName="MonotonePartition"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="Normalize"/>
    <functioncall functionName="RemoveHoles"/>
    <functioncall functionName="Triangle"/>
    <functioncall functionName="TriangulateMonotone"/>
    <functioncall functionName="Triangulate_EC"/>
    <functioncall functionName="Triangulate_MONO"/>
    <functioncall functionName="TriangulatorPoly"/>
    <functioncall functionName="TypeA"/>
    <functioncall functionName="TypeB"/>
    <functioncall functionName="UpdateState"/>
    <functioncall functionName="UpdateVertex"/>
    <functioncall functionName="UpdateVertexReflexity"/>
    <functioncall functionName="Vector2"/>
    <functioncall functionName="VertexSorter"/>
    <functioncall functionName="a"/>
    <functioncall functionName="angle"/>
    <functioncall functionName="area"/>
    <functioncall functionName="b"/>
    <functioncall functionName="back"/>
    <functioncall functionName="bestvertex"/>
    <functioncall functionName="bottomindex"/>
    <functioncall functionName="break"/>
    <functioncall functionName="char"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="convex"/>
    <functioncall functionName="d2"/>
    <functioncall functionName="diagonal"/>
    <functioncall functionName="dpstates"/>
    <functioncall functionName="earfound"/>
    <functioncall functionName="edgeTree"/>
    <functioncall functionName="edgeTreeIterators"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="error"/>
    <functioncall functionName="false"/>
    <functioncall functionName="for"/>
    <functioncall functionName="front"/>
    <functioncall functionName="gap"/>
    <functioncall functionName="get"/>
    <functioncall functionName="hasholes"/>
    <functioncall functionName="helpers"/>
    <functioncall functionName="hole"/>
    <functioncall functionName="holeiter"/>
    <functioncall functionName="holepoint"/>
    <functioncall functionName="holepointindex"/>
    <functioncall functionName="i"/>
    <functioncall functionName="i1"/>
    <functioncall functionName="i11"/>
    <functioncall functionName="i12"/>
    <functioncall functionName="i13"/>
    <functioncall functionName="i2"/>
    <functioncall functionName="i21"/>
    <functioncall functionName="i22"/>
    <functioncall functionName="i23"/>
    <functioncall functionName="if"/>
    <functioncall functionName="iiter"/>
    <functioncall functionName="ijreal"/>
    <functioncall functionName="index"/>
    <functioncall functionName="index1"/>
    <functioncall functionName="index2"/>
    <functioncall functionName="inpolys"/>
    <functioncall functionName="insert"/>
    <functioncall functionName="invpoints"/>
    <functioncall functionName="isActive"/>
    <functioncall functionName="isConvex"/>
    <functioncall functionName="isEar"/>
    <functioncall functionName="isdiagonal"/>
    <functioncall functionName="iter"/>
    <functioncall functionName="iter1"/>
    <functioncall functionName="iter2"/>
    <functioncall functionName="j"/>
    <functioncall functionName="jkreal"/>
    <functioncall functionName="k"/>
    <functioncall functionName="leftindex"/>
    <functioncall functionName="linep1"/>
    <functioncall functionName="linep2"/>
    <functioncall functionName="long"/>
    <functioncall functionName="lower_bound"/>
    <functioncall functionName="maxnumvertices"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="minweight"/>
    <functioncall functionName="monotone"/>
    <functioncall functionName="mpoly"/>
    <functioncall functionName="n"/>
    <functioncall functionName="newdiagonal"/>
    <functioncall functionName="newedge"/>
    <functioncall functionName="newindex1"/>
    <functioncall functionName="newindex2"/>
    <functioncall functionName="newnumvertices"/>
    <functioncall functionName="newpoly"/>
    <functioncall functionName="next"/>
    <functioncall functionName="numpoints"/>
    <functioncall functionName="numvertices"/>
    <functioncall functionName="outpolys"/>
    <functioncall functionName="p"/>
    <functioncall functionName="p1"/>
    <functioncall functionName="p11"/>
    <functioncall functionName="p2"/>
    <functioncall functionName="p21"/>
    <functioncall functionName="p3"/>
    <functioncall functionName="p4"/>
    <functioncall functionName="pairs"/>
    <functioncall functionName="parts"/>
    <functioncall functionName="pointfound"/>
    <functioncall functionName="points"/>
    <functioncall functionName="pointvisible"/>
    <functioncall functionName="poly"/>
    <functioncall functionName="polyendindex"/>
    <functioncall functionName="polyiter"/>
    <functioncall functionName="polypoint"/>
    <functioncall functionName="polypointindex"/>
    <functioncall functionName="polys"/>
    <functioncall functionName="polystartindex"/>
    <functioncall functionName="pop_back"/>
    <functioncall functionName="pop_front"/>
    <functioncall functionName="prev"/>
    <functioncall functionName="previous"/>
    <functioncall functionName="priority"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="push_front"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rightindex"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sort"/>
    <functioncall functionName="sqrt"/>
    <functioncall functionName="stackptr"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="tmp"/>
    <functioncall functionName="top"/>
    <functioncall functionName="topindex"/>
    <functioncall functionName="triangle"/>
    <functioncall functionName="triangles"/>
    <functioncall functionName="true"/>
    <functioncall functionName="used"/>
    <functioncall functionName="v"/>
    <functioncall functionName="vertextypes"/>
    <functioncall functionName="vertices"/>
    <functioncall functionName="vindex"/>
    <functioncall functionName="vindex2"/>
    <functioncall functionName="visible"/>
    <functioncall functionName="w"/>
    <functioncall functionName="weight"/>
    <functioncall functionName="while"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
  </FileInfo>
</analyzerinfo>
