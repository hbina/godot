<?xml version="1.0"?>
<analyzerinfo checksum="1617907094">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;v0&apos; can be reduced." verbose="The scope of the variable &apos;v0&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp" line="108" column="6"/>
            <symbol>v0</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;v1&apos; can be reduced." verbose="The scope of the variable &apos;v1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp" line="108" column="10"/>
            <symbol>v1</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp" line="282" column="15" info="Shadow variable"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp" line="268" column="13" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functioncall functionName="ATTRIBUTE_ALIGNED16"/>
    <functioncall functionName="BT_DECLARE_ALIGNED_ALLOCATOR"/>
    <functioncall functionName="BT_LARGE_FLOAT"/>
    <functioncall functionName="GrahamScanConvexHull2D"/>
    <functioncall functionName="GrahamVector3"/>
    <functioncall functionName="_directions"/>
    <functioncall functionName="_supporting"/>
    <functioncall functionName="aabbMax"/>
    <functioncall functionName="aabbMin"/>
    <functioncall functionName="averageFaceNormal"/>
    <functioncall functionName="batchedUnitVectorGetSupportingVertexWithoutMargin"/>
    <functioncall functionName="break"/>
    <functioncall functionName="btAlignedAlloc"/>
    <functioncall functionName="btAlignedFree"/>
    <functioncall functionName="btAssert"/>
    <functioncall functionName="btConvexInternalShape"/>
    <functioncall functionName="btConvexPolyhedron"/>
    <functioncall functionName="btPolyhedralConvexAabbCachingShape"/>
    <functioncall functionName="btPolyhedralConvexShape"/>
    <functioncall functionName="btScalar"/>
    <functioncall functionName="btSqrt"/>
    <functioncall functionName="btVector3"/>
    <functioncall functionName="class"/>
    <functioncall functionName="combinedFace"/>
    <functioncall functionName="compute"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="conv"/>
    <functioncall functionName="cross"/>
    <functioncall functionName="did_merge"/>
    <functioncall functionName="dot"/>
    <functioncall functionName="eq"/>
    <functioncall functionName="expand"/>
    <functioncall functionName="f"/>
    <functioncall functionName="face"/>
    <functioncall functionName="faceNormal"/>
    <functioncall functionName="faceNormalA"/>
    <functioncall functionName="faceNormalB"/>
    <functioncall functionName="false"/>
    <functioncall functionName="firstEdge"/>
    <functioncall functionName="for"/>
    <functioncall functionName="found"/>
    <functioncall functionName="getAabb"/>
    <functioncall functionName="getMargin"/>
    <functioncall functionName="getNextEdgeOfFace"/>
    <functioncall functionName="getNonvirtualAabb"/>
    <functioncall functionName="getNumVertices"/>
    <functioncall functionName="getPlaneEquationsFromVertices"/>
    <functioncall functionName="getSourceVertex"/>
    <functioncall functionName="getTargetVertex"/>
    <functioncall functionName="getVertex"/>
    <functioncall functionName="getVerticesFromPlaneEquations"/>
    <functioncall functionName="getX"/>
    <functioncall functionName="getY"/>
    <functioncall functionName="getZ"/>
    <functioncall functionName="hull"/>
    <functioncall functionName="i"/>
    <functioncall functionName="ident"/>
    <functioncall functionName="if"/>
    <functioncall functionName="initialize"/>
    <functioncall functionName="initialize2"/>
    <functioncall functionName="inner_count"/>
    <functioncall functionName="int"/>
    <functioncall functionName="is_in_current_group"/>
    <functioncall functionName="j"/>
    <functioncall functionName="k"/>
    <functioncall functionName="lenSqr"/>
    <functioncall functionName="length2"/>
    <functioncall functionName="m_collisionMargin"/>
    <functioncall functionName="m_isLocalAabbValid"/>
    <functioncall functionName="m_localAabbMax"/>
    <functioncall functionName="m_localAabbMin"/>
    <functioncall functionName="m_orgIndex"/>
    <functioncall functionName="m_polyhedron"/>
    <functioncall functionName="margin"/>
    <functioncall functionName="maxDot"/>
    <functioncall functionName="mem"/>
    <functioncall functionName="new"/>
    <functioncall functionName="newDot"/>
    <functioncall functionName="newEdge"/>
    <functioncall functionName="newVertex"/>
    <functioncall functionName="normalize"/>
    <functioncall functionName="numFaces"/>
    <functioncall functionName="numVertices"/>
    <functioncall functionName="orgIndex"/>
    <functioncall functionName="orgVertices"/>
    <functioncall functionName="orgpoints"/>
    <functioncall functionName="p"/>
    <functioncall functionName="plane"/>
    <functioncall functionName="planeEq"/>
    <functioncall functionName="planeEquations"/>
    <functioncall functionName="polyhedron"/>
    <functioncall functionName="pop_back"/>
    <functioncall functionName="prevVertex"/>
    <functioncall functionName="project"/>
    <functioncall functionName="pt"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="recalcLocalAabb"/>
    <functioncall functionName="refFace"/>
    <functioncall functionName="reject_merge"/>
    <functioncall functionName="remove"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="scaling"/>
    <functioncall functionName="setIdentity"/>
    <functioncall functionName="setLocalScaling"/>
    <functioncall functionName="setValue"/>
    <functioncall functionName="setZero"/>
    <functioncall functionName="shiftVerticesByMargin"/>
    <functioncall functionName="shiftedPlaneEquations"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="src"/>
    <functioncall functionName="supVec"/>
    <functioncall functionName="targ"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="testContainment"/>
    <functioncall functionName="tmpVertices"/>
    <functioncall functionName="trans"/>
    <functioncall functionName="true"/>
    <functioncall functionName="v"/>
    <functioncall functionName="v0"/>
    <functioncall functionName="v1"/>
    <functioncall functionName="vec0"/>
    <functioncall functionName="wa"/>
    <functioncall functionName="while"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
    <functioncall functionName="y2"/>
    <functioncall functionName="z"/>
    <functioncall functionName="z2"/>
  </FileInfo>
</analyzerinfo>
