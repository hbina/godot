<?xml version="1.0"?>
<analyzerinfo checksum="654766435">
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="652" column="19"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tmp1&apos; can be reduced." verbose="The scope of the variable &apos;tmp1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="355" column="6"/>
            <symbol>tmp1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tmp2&apos; can be reduced." verbose="The scope of the variable &apos;tmp2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="355" column="12"/>
            <symbol>tmp2</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:419:13" call-funcname="get_modulation_value" call-argnr="6" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="619" col="24" call-argexpr="&Mod" call-argvaluetype="7" call-argvalue="4"/><function-call call-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:419:13" call-funcname="get_modulation_value" call-argnr="7" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="619" col="24" call-argexpr="&DoPT" call-argvaluetype="7" call-argvalue="4"/><function-call call-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:520:13" call-funcname="decompress_pvrtc" call-argnr="5" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="652" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:269:13" my-argnr="1" my-argname="p_block" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="272" col="16" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:305:13" my-argnr="1" my-argname="p_block" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="307" col="23" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:419:13" my-argnr="6" my-argname="r_mod" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="460" col="3" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:419:13" my-argnr="7" my-argname="p_dopt" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="432" col="3" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.h:40:15" my-argnr="1" my-argname="p_extensions" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="173" col="2" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:186:13" my-argnr="1" my-argname="p_img" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="188" col="19" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp:38:13" my-argnr="1" my-argname="p_img" file="/home/hbina/git/godot/modules/pvr/texture_loader_pvr.cpp" line="641" col="16" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="load" lineNumber="54"/>
    <functiondecl functionName="get_recognized_extensions" lineNumber="171"/>
    <functiondecl functionName="handles_type" lineNumber="175"/>
    <functiondecl functionName="get_resource_type" lineNumber="179"/>
    <functiondecl functionName="_compress_pvrtc4" lineNumber="186"/>
    <functiondecl functionName="is_po2" lineNumber="261"/>
    <functiondecl functionName="unpack_5554" lineNumber="269"/>
    <functiondecl functionName="unpack_modulations" lineNumber="305"/>
    <functiondecl functionName="interpolate_colors" lineNumber="351"/>
    <functiondecl functionName="get_modulation_value" lineNumber="419"/>
    <functiondecl functionName="twiddle_uv" lineNumber="465"/>
    <functiondecl functionName="decompress_pvrtc" lineNumber="520"/>
    <functiondecl functionName="_pvrtc_decompress" lineNumber="639"/>
    <functioncall functionName="ASig"/>
    <functioncall functionName="BSig"/>
    <functioncall functionName="CLAMP"/>
    <functioncall functionName="ColorRgba"/>
    <functioncall functionName="DoPT"/>
    <functioncall functionName="ERR_CANT_OPEN"/>
    <functioncall functionName="ERR_FAIL_COND"/>
    <functioncall functionName="ERR_FAIL_COND_V"/>
    <functioncall functionName="ERR_FAIL_V_MSG"/>
    <functioncall functionName="ERR_FILE_CORRUPT"/>
    <functioncall functionName="EncodeRgba4Bpp"/>
    <functioncall functionName="FORMAT_DXT1"/>
    <functioncall functionName="FORMAT_DXT3"/>
    <functioncall functionName="FORMAT_DXT5"/>
    <functioncall functionName="FORMAT_ETC"/>
    <functioncall functionName="FORMAT_L8"/>
    <functioncall functionName="FORMAT_LA8"/>
    <functioncall functionName="FORMAT_MAX"/>
    <functioncall functionName="FORMAT_PVRTC2"/>
    <functioncall functionName="FORMAT_PVRTC2A"/>
    <functioncall functionName="FORMAT_PVRTC4"/>
    <functioncall functionName="FORMAT_PVRTC4A"/>
    <functioncall functionName="FORMAT_RGB8"/>
    <functioncall functionName="FORMAT_RGBA8"/>
    <functioncall functionName="GetData"/>
    <functioncall functionName="Image"/>
    <functioncall functionName="ImageTexture"/>
    <functioncall functionName="MAX"/>
    <functioncall functionName="Mod"/>
    <functioncall functionName="OK"/>
    <functioncall functionName="READ"/>
    <functioncall functionName="RES"/>
    <functioncall functionName="Reps"/>
    <functioncall functionName="ResourceFormatPVR"/>
    <functioncall functionName="String"/>
    <functioncall functionName="_2bit"/>
    <functioncall functionName="_compress_pvrtc4"/>
    <functioncall functionName="_pvrtc_decompress"/>
    <functioncall functionName="blk_y"/>
    <functioncall functionName="blk_yp1"/>
    <functioncall functionName="block_height"/>
    <functioncall functionName="block_mod_mode"/>
    <functioncall functionName="block_width"/>
    <functioncall functionName="block_x"/>
    <functioncall functionName="block_xp1"/>
    <functioncall functionName="bm"/>
    <functioncall functionName="break"/>
    <functioncall functionName="convert"/>
    <functioncall functionName="create"/>
    <functioncall functionName="create_from_image"/>
    <functioncall functionName="data"/>
    <functioncall functionName="decompress_pvrtc"/>
    <functioncall functionName="default"/>
    <functioncall functionName="detect_alpha"/>
    <functioncall functionName="disable_twiddling"/>
    <functioncall functionName="dp"/>
    <functioncall functionName="duplicate"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="err"/>
    <functioncall functionName="f"/>
    <functioncall functionName="false"/>
    <functioncall functionName="faref"/>
    <functioncall functionName="for"/>
    <functioncall functionName="format"/>
    <functioncall functionName="generate_mipmaps"/>
    <functioncall functionName="get_32"/>
    <functioncall functionName="get_buffer"/>
    <functioncall functionName="get_data"/>
    <functioncall functionName="get_error"/>
    <functioncall functionName="get_extension"/>
    <functioncall functionName="get_format"/>
    <functioncall functionName="get_height"/>
    <functioncall functionName="get_mipmap_count"/>
    <functioncall functionName="get_mipmap_offset_size_and_dimensions"/>
    <functioncall functionName="get_modulation_value"/>
    <functioncall functionName="get_position"/>
    <functioncall functionName="get_width"/>
    <functioncall functionName="h"/>
    <functioncall functionName="has_mipmaps"/>
    <functioncall functionName="height"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="image"/>
    <functioncall functionName="instance"/>
    <functioncall functionName="int"/>
    <functioncall functionName="interpolate_colors"/>
    <functioncall functionName="is_parent_class"/>
    <functioncall functionName="is_po2"/>
    <functioncall functionName="is_size_po2"/>
    <functioncall functionName="itos"/>
    <functioncall functionName="j"/>
    <functioncall functionName="k"/>
    <functioncall functionName="make_mipmaps"/>
    <functioncall functionName="memcmp"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memnew"/>
    <functioncall functionName="minus1"/>
    <functioncall functionName="mipmaps"/>
    <functioncall functionName="mod_val"/>
    <functioncall functionName="new"/>
    <functioncall functionName="newdata"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="ofs"/>
    <functioncall functionName="open"/>
    <functioncall functionName="override"/>
    <functioncall functionName="p_2bit"/>
    <functioncall functionName="p_blocks"/>
    <functioncall functionName="p_height"/>
    <functioncall functionName="p_modulation"/>
    <functioncall functionName="p_modulation_modes"/>
    <functioncall functionName="p_path"/>
    <functioncall functionName="p_tiled"/>
    <functioncall functionName="p_type"/>
    <functioncall functionName="p_width"/>
    <functioncall functionName="p_x"/>
    <functioncall functionName="p_y"/>
    <functioncall functionName="prev"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="ptrw"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="pvrid"/>
    <functioncall functionName="r"/>
    <functioncall functionName="r_error"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="resize_to_po2"/>
    <functioncall functionName="return"/>
    <functioncall functionName="seek"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="surfsize"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="tmp1"/>
    <functioncall functionName="to_lower"/>
    <functioncall functionName="true"/>
    <functioncall functionName="twiddle_uv"/>
    <functioncall functionName="uint8_t"/>
    <functioncall functionName="unpack_5554"/>
    <functioncall functionName="unpack_modulations"/>
    <functioncall functionName="w"/>
    <functioncall functionName="while"/>
    <functioncall functionName="width"/>
    <functioncall functionName="x"/>
    <functioncall functionName="x_block_size"/>
    <functioncall functionName="y"/>
  </FileInfo>
</analyzerinfo>
