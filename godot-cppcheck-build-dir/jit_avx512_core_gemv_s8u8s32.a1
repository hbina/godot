<?xml version="1.0"?>
<analyzerinfo checksum="3399570101">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;status&apos; can be reduced." verbose="The scope of the variable &apos;status&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="100" column="9"/>
            <symbol>status</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;acc&apos; can be reduced." verbose="The scope of the variable &apos;acc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="259" column="25"/>
            <symbol>acc</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/gemv.hpp:24:5" call-funcname="gemv_threading_driver" call-argnr="1" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="44" col="38" call-argexpr="&arg_gemv" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/gemv.hpp:24:5" call-funcname="gemv_threading_driver" call-argnr="1" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="65" col="38" call-argexpr="&arg_gemv" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp:75:5" call-funcname="gemv_kernel_driver" call-argnr="1" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="163" col="36" call-argexpr="&arg_seq" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp:75:5" call-funcname="gemv_kernel_driver" call-argnr="1" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="245" col="31" call-argexpr="&arg_loc" call-argvaluetype="7" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/gemv.hpp:23:5" my-argnr="1" my-argname="arg" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="25" col="24" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp:75:5" my-argnr="1" my-argname="arg" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="77" col="15" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/gemv.hpp:24:5" my-argnr="1" my-argname="arg" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="108" col="15" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/gemv.hpp:23:5" my-argnr="1" my-argname="arg" file="/home/hbina/git/godot/thirdparty/oidn/mkl-dnn/src/cpu/gemm/s8x8s32/jit_avx512_core_gemv_s8u8s32.cpp" line="25" col="24" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="gemm_s8u8s32_jump_to_gemv_s8u8s32" lineNumber="23"/>
    <functiondecl functionName="gemv_kernel_driver" lineNumber="75"/>
    <functiondecl functionName="gemv_threading_driver" lineNumber="95"/>
    <functioncall functionName="BLOCKM"/>
    <functioncall functionName="COL_OFFSET"/>
    <functioncall functionName="COPY_A"/>
    <functioncall functionName="COPY_NONE"/>
    <functioncall functionName="DECLARE_CPU_JIT_AUX_FUNCTIONS"/>
    <functioncall functionName="FIX_OFFSET"/>
    <functioncall functionName="MB"/>
    <functioncall functionName="NB"/>
    <functioncall functionName="NO_OFFSET"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="PARTITION_1D_COL"/>
    <functioncall functionName="PARTITION_1D_ROW"/>
    <functioncall functionName="PARTITION_2D_COL_MAJOR"/>
    <functioncall functionName="ROW_OFFSET"/>
    <functioncall functionName="UM"/>
    <functioncall functionName="UN"/>
    <functioncall functionName="a"/>
    <functioncall functionName="arg_gemv"/>
    <functioncall functionName="arg_loc"/>
    <functioncall functionName="arg_seq"/>
    <functioncall functionName="b"/>
    <functioncall functionName="beta"/>
    <functioncall functionName="c"/>
    <functioncall functionName="for"/>
    <functioncall functionName="free"/>
    <functioncall functionName="gemv_kernel_driver"/>
    <functioncall functionName="gemv_s8u8s32_kernel"/>
    <functioncall functionName="gemv_threading_driver"/>
    <functioncall functionName="gemv_u8s8s32_kernel"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="j"/>
    <functioncall functionName="j_from"/>
    <functioncall functionName="j_to"/>
    <functioncall functionName="jit_avx512_core_u8_copy_an_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_at_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_bn_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_bt_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_sum_an_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_sum_at_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_sum_bn_kern"/>
    <functioncall functionName="jit_avx512_core_u8_copy_sum_bt_kern"/>
    <functioncall functionName="k"/>
    <functioncall functionName="lda"/>
    <functioncall functionName="ldb"/>
    <functioncall functionName="ldc"/>
    <functioncall functionName="loc_incy"/>
    <functioncall functionName="loc_y"/>
    <functioncall functionName="long"/>
    <functioncall functionName="m"/>
    <functioncall functionName="m_from"/>
    <functioncall functionName="m_to"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="max"/>
    <functioncall functionName="min"/>
    <functioncall functionName="mkldnn_get_max_threads"/>
    <functioncall functionName="mkldnn_in_parallel"/>
    <functioncall functionName="myM"/>
    <functioncall functionName="myN"/>
    <functioncall functionName="n"/>
    <functioncall functionName="n_from"/>
    <functioncall functionName="n_to"/>
    <functioncall functionName="new_x"/>
    <functioncall functionName="new_y"/>
    <functioncall functionName="nthr"/>
    <functioncall functionName="nthr_m"/>
    <functioncall functionName="nthr_n"/>
    <functioncall functionName="parallel_nd"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="swap"/>
    <functioncall functionName="tmp_y"/>
    <functioncall functionName="while"/>
    <functioncall functionName="zero"/>
  </FileInfo>
</analyzerinfo>
