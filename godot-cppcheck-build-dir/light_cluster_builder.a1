<?xml version="1.0"?>
<analyzerinfo checksum="1818029028">
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.h" line="130" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.h" line="146" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.h" line="193" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.h" line="239" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="52" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="127" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="217" column="11"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="220" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="223" column="11"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="226" column="10"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.cpp" line="229" column="13"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.h:127:22" call-funcname="_add_item" call-argnr="2" file="/home/hbina/git/godot/servers/rendering/rasterizer_rd/light_cluster_builder.h" line="170" col="14" call-argexpr="ITEM_TYPE_OMNI_LIGHT" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="begin" lineNumber="33"/>
    <functiondecl functionName="bake_cluster" lineNumber="47"/>
    <functiondecl functionName="setup" lineNumber="180"/>
    <functiondecl functionName="get_cluster_texture" lineNumber="208"/>
    <functiondecl functionName="get_cluster_indices_buffer" lineNumber="211"/>
    <functioncall functionName="Cell"/>
    <functioncall functionName="DATA_FORMAT_R32G32B32A32_UINT"/>
    <functioncall functionName="ITEM_TYPE_DECAL"/>
    <functioncall functionName="ITEM_TYPE_MAX"/>
    <functioncall functionName="ITEM_TYPE_OMNI_LIGHT"/>
    <functioncall functionName="ITEM_TYPE_REFLECTION_PROBE"/>
    <functioncall functionName="ITEM_TYPE_SPOT_LIGHT"/>
    <functioncall functionName="Item"/>
    <functioncall functionName="LIGHT_TYPE_OMNI"/>
    <functioncall functionName="LIGHT_TYPE_SPOT"/>
    <functioncall functionName="LightClusterBuilder"/>
    <functioncall functionName="LightData"/>
    <functioncall functionName="MAX"/>
    <functioncall functionName="MIN"/>
    <functioncall functionName="OrientedBoxData"/>
    <functioncall functionName="SortID"/>
    <functioncall functionName="TEXTURE_TYPE_3D"/>
    <functioncall functionName="TEXTURE_USAGE_CAN_UPDATE_BIT"/>
    <functioncall functionName="TextureView"/>
    <functioncall functionName="Vector3"/>
    <functioncall functionName="_add_item"/>
    <functioncall functionName="aabb"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buffer_update"/>
    <functioncall functionName="cell_index"/>
    <functioncall functionName="cluster_data"/>
    <functioncall functionName="cluster_data_ptr"/>
    <functioncall functionName="cluster_dataw"/>
    <functioncall functionName="cluster_texture"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="counter"/>
    <functioncall functionName="decal_count"/>
    <functioncall functionName="decals"/>
    <functioncall functionName="deg2rad"/>
    <functioncall functionName="depth"/>
    <functioncall functionName="expand_to"/>
    <functioncall functionName="far_from_x"/>
    <functioncall functionName="far_from_y"/>
    <functioncall functionName="far_to_x"/>
    <functioncall functionName="far_to_y"/>
    <functioncall functionName="floor"/>
    <functioncall functionName="for"/>
    <functioncall functionName="free"/>
    <functioncall functionName="from_slice"/>
    <functioncall functionName="from_x"/>
    <functioncall functionName="from_y"/>
    <functioncall functionName="get_axis"/>
    <functioncall functionName="get_singleton"/>
    <functioncall functionName="get_uniform_scale"/>
    <functioncall functionName="get_z_far"/>
    <functioncall functionName="get_z_near"/>
    <functioncall functionName="height"/>
    <functioncall functionName="i"/>
    <functioncall functionName="ids_ptr"/>
    <functioncall functionName="if"/>
    <functioncall functionName="index"/>
    <functioncall functionName="int"/>
    <functioncall functionName="is_valid"/>
    <functioncall functionName="item_count"/>
    <functioncall functionName="item_index"/>
    <functioncall functionName="item_type"/>
    <functioncall functionName="items"/>
    <functioncall functionName="items_buffer"/>
    <functioncall functionName="j"/>
    <functioncall functionName="len"/>
    <functioncall functionName="light_count"/>
    <functioncall functionName="lights"/>
    <functioncall functionName="limit_far"/>
    <functioncall functionName="limit_near"/>
    <functioncall functionName="max"/>
    <functioncall functionName="memalloc"/>
    <functioncall functionName="memfree"/>
    <functioncall functionName="memrealloc"/>
    <functioncall functionName="min"/>
    <functioncall functionName="near_from_x"/>
    <functioncall functionName="near_from_y"/>
    <functioncall functionName="near_to_x"/>
    <functioncall functionName="near_to_y"/>
    <functioncall functionName="nearest_power_of_2_templated"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="origin"/>
    <functioncall functionName="p_aabb"/>
    <functioncall functionName="p_cam_projection"/>
    <functioncall functionName="p_depth"/>
    <functioncall functionName="p_height"/>
    <functioncall functionName="p_index"/>
    <functioncall functionName="p_radius"/>
    <functioncall functionName="p_spot_aperture"/>
    <functioncall functionName="p_type"/>
    <functioncall functionName="p_view_transform"/>
    <functioncall functionName="p_width"/>
    <functioncall functionName="position"/>
    <functioncall functionName="ptrw"/>
    <functioncall functionName="r"/>
    <functioncall functionName="radius"/>
    <functioncall functionName="refprobe_count"/>
    <functioncall functionName="refprobes"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="return"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="slice_depth"/>
    <functioncall functionName="sort_id_count"/>
    <functioncall functionName="sort_id_max"/>
    <functioncall functionName="sort_ids"/>
    <functioncall functionName="spot_aperture"/>
    <functioncall functionName="storage_buffer_create"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="sx"/>
    <functioncall functionName="sy"/>
    <functioncall functionName="tan"/>
    <functioncall functionName="texture_create"/>
    <functioncall functionName="texture_update"/>
    <functioncall functionName="tf"/>
    <functioncall functionName="to_slice"/>
    <functioncall functionName="to_x"/>
    <functioncall functionName="to_y"/>
    <functioncall functionName="true"/>
    <functioncall functionName="type"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="unlikely"/>
    <functioncall functionName="width"/>
    <functioncall functionName="x"/>
    <functioncall functionName="xform"/>
    <functioncall functionName="y"/>
    <functioncall functionName="z"/>
    <functioncall functionName="z_axis"/>
    <functioncall functionName="z_far"/>
    <functioncall functionName="zeromem"/>
  </FileInfo>
</analyzerinfo>
