<?xml version="1.0"?>
<analyzerinfo checksum="1243803136">
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="39" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="57" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="69" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="83" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="328" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="542" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/drivers/pulseaudio/audio_driver_pulseaudio.cpp" line="741" column="30"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="pa_state_cb" lineNumber="38"/>
    <functiondecl functionName="pa_sink_info_cb" lineNumber="56"/>
    <functiondecl functionName="pa_source_info_cb" lineNumber="68"/>
    <functiondecl functionName="pa_server_info_cb" lineNumber="80"/>
    <functiondecl functionName="detect_channels" lineNumber="90"/>
    <functiondecl functionName="init_device" lineNumber="147"/>
    <functiondecl functionName="init" lineNumber="238"/>
    <functiondecl functionName="get_latency" lineNumber="300"/>
    <functiondecl functionName="thread_func" lineNumber="326"/>
    <functiondecl functionName="start" lineNumber="526"/>
    <functiondecl functionName="get_mix_rate" lineNumber="531"/>
    <functiondecl functionName="get_speaker_mode" lineNumber="536"/>
    <functiondecl functionName="pa_sinklist_cb" lineNumber="541"/>
    <functiondecl functionName="get_device_list" lineNumber="553"/>
    <functiondecl functionName="get_device" lineNumber="585"/>
    <functiondecl functionName="set_device" lineNumber="590"/>
    <functiondecl functionName="lock" lineNumber="597"/>
    <functiondecl functionName="unlock" lineNumber="604"/>
    <functiondecl functionName="finish_device" lineNumber="611"/>
    <functiondecl functionName="finish" lineNumber="620"/>
    <functiondecl functionName="capture_init_device" lineNumber="646"/>
    <functiondecl functionName="capture_finish_device" lineNumber="704"/>
    <functiondecl functionName="capture_start" lineNumber="716"/>
    <functiondecl functionName="capture_stop" lineNumber="725"/>
    <functiondecl functionName="capture_set_device" lineNumber="733"/>
    <functiondecl functionName="pa_sourcelist_cb" lineNumber="740"/>
    <functiondecl functionName="capture_get_device_list" lineNumber="755"/>
    <functiondecl functionName="capture_get_device" lineNumber="787"/>
    <functioncall functionName="AudioDriverPulseAudio"/>
    <functioncall functionName="DEFAULT_MIX_RATE"/>
    <functioncall functionName="DEFAULT_OUTPUT_LATENCY"/>
    <functioncall functionName="ERR_CANT_OPEN"/>
    <functioncall functionName="ERR_FAIL_COND_MSG"/>
    <functioncall functionName="ERR_FAIL_COND_V"/>
    <functioncall functionName="ERR_FAIL_V"/>
    <functioncall functionName="ERR_PRINT"/>
    <functioncall functionName="GLOBAL_DEF_RST"/>
    <functioncall functionName="MIN"/>
    <functioncall functionName="PA_CHANNEL_POSITION_FRONT_CENTER"/>
    <functioncall functionName="PA_CHANNEL_POSITION_FRONT_LEFT"/>
    <functioncall functionName="PA_CHANNEL_POSITION_FRONT_RIGHT"/>
    <functioncall functionName="PA_CHANNEL_POSITION_LFE"/>
    <functioncall functionName="PA_CHANNEL_POSITION_REAR_LEFT"/>
    <functioncall functionName="PA_CHANNEL_POSITION_REAR_RIGHT"/>
    <functioncall functionName="PA_CHANNEL_POSITION_SIDE_LEFT"/>
    <functioncall functionName="PA_CHANNEL_POSITION_SIDE_RIGHT"/>
    <functioncall functionName="PA_CONTEXT_NOFLAGS"/>
    <functioncall functionName="PA_SAMPLE_S16LE"/>
    <functioncall functionName="PA_SEEK_RELATIVE"/>
    <functioncall functionName="PA_STREAM_AUTO_TIMING_UPDATE"/>
    <functioncall functionName="String"/>
    <functioncall functionName="WARN_PRINT"/>
    <functioncall functionName="active"/>
    <functioncall functionName="ad"/>
    <functioncall functionName="attr"/>
    <functioncall functionName="audio_server_process"/>
    <functioncall functionName="avail_bytes"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buffer_frames"/>
    <functioncall functionName="bytes"/>
    <functioncall functionName="bytes_to_write"/>
    <functioncall functionName="c"/>
    <functioncall functionName="capture"/>
    <functioncall functionName="capture_device_name"/>
    <functioncall functionName="capture_finish_device"/>
    <functioncall functionName="capture_get_device_list"/>
    <functioncall functionName="capture_init_device"/>
    <functioncall functionName="capture_new_device"/>
    <functioncall functionName="channel_map"/>
    <functioncall functionName="channels"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="closest_power_of_2"/>
    <functioncall functionName="create"/>
    <functioncall functionName="default"/>
    <functioncall functionName="default_device"/>
    <functioncall functionName="default_sink_name"/>
    <functioncall functionName="default_source_name"/>
    <functioncall functionName="delay_usec"/>
    <functioncall functionName="detect_channels"/>
    <functioncall functionName="dev"/>
    <functioncall functionName="device"/>
    <functioncall functionName="device_name"/>
    <functioncall functionName="double"/>
    <functioncall functionName="eol"/>
    <functioncall functionName="error_code"/>
    <functioncall functionName="exit_thread"/>
    <functioncall functionName="false"/>
    <functioncall functionName="find"/>
    <functioncall functionName="finish_device"/>
    <functioncall functionName="flags"/>
    <functioncall functionName="for"/>
    <functioncall functionName="get_data"/>
    <functioncall functionName="get_device_list"/>
    <functioncall functionName="get_singleton"/>
    <functioncall functionName="get_speaker_mode_by_total_channels"/>
    <functioncall functionName="get_ticks_msec"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="init_device"/>
    <functioncall functionName="input_buffer_frames"/>
    <functioncall functionName="input_buffer_init"/>
    <functioncall functionName="input_buffer_write"/>
    <functioncall functionName="int16_t"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="itos"/>
    <functioncall functionName="latency"/>
    <functioncall functionName="lock"/>
    <functioncall functionName="maxbytes"/>
    <functioncall functionName="memdelete"/>
    <functioncall functionName="mix_rate"/>
    <functioncall functionName="msec"/>
    <functioncall functionName="name"/>
    <functioncall functionName="negative"/>
    <functioncall functionName="new_device"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="override"/>
    <functioncall functionName="p_name"/>
    <functioncall functionName="p_udata"/>
    <functioncall functionName="pa_buffer_size"/>
    <functioncall functionName="pa_channel_map_init_stereo"/>
    <functioncall functionName="pa_context_connect"/>
    <functioncall functionName="pa_context_disconnect"/>
    <functioncall functionName="pa_context_errno"/>
    <functioncall functionName="pa_context_get_server_info"/>
    <functioncall functionName="pa_context_get_sink_info_by_name"/>
    <functioncall functionName="pa_context_get_sink_info_list"/>
    <functioncall functionName="pa_context_get_source_info_by_name"/>
    <functioncall functionName="pa_context_get_source_info_list"/>
    <functioncall functionName="pa_context_get_state"/>
    <functioncall functionName="pa_context_new"/>
    <functioncall functionName="pa_context_set_state_callback"/>
    <functioncall functionName="pa_context_unref"/>
    <functioncall functionName="pa_ctx"/>
    <functioncall functionName="pa_mainloop_free"/>
    <functioncall functionName="pa_mainloop_get_api"/>
    <functioncall functionName="pa_mainloop_iterate"/>
    <functioncall functionName="pa_mainloop_new"/>
    <functioncall functionName="pa_map"/>
    <functioncall functionName="pa_ml"/>
    <functioncall functionName="pa_op"/>
    <functioncall functionName="pa_operation_unref"/>
    <functioncall functionName="pa_ready"/>
    <functioncall functionName="pa_rec_map"/>
    <functioncall functionName="pa_rec_str"/>
    <functioncall functionName="pa_server_info_cb"/>
    <functioncall functionName="pa_sink_info_cb"/>
    <functioncall functionName="pa_sinklist_cb"/>
    <functioncall functionName="pa_source_info_cb"/>
    <functioncall functionName="pa_sourcelist_cb"/>
    <functioncall functionName="pa_state_cb"/>
    <functioncall functionName="pa_status"/>
    <functioncall functionName="pa_str"/>
    <functioncall functionName="pa_stream_connect_playback"/>
    <functioncall functionName="pa_stream_connect_record"/>
    <functioncall functionName="pa_stream_disconnect"/>
    <functioncall functionName="pa_stream_drop"/>
    <functioncall functionName="pa_stream_flags"/>
    <functioncall functionName="pa_stream_get_latency"/>
    <functioncall functionName="pa_stream_get_state"/>
    <functioncall functionName="pa_stream_new"/>
    <functioncall functionName="pa_stream_peek"/>
    <functioncall functionName="pa_stream_readable_size"/>
    <functioncall functionName="pa_stream_unref"/>
    <functioncall functionName="pa_stream_writable_size"/>
    <functioncall functionName="pa_stream_write"/>
    <functioncall functionName="pa_strerror"/>
    <functioncall functionName="palat"/>
    <functioncall functionName="print_verbose"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="ptrw"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="r"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="ret"/>
    <functioncall functionName="return"/>
    <functioncall functionName="sample"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="spec"/>
    <functioncall functionName="start_counting_ticks"/>
    <functioncall functionName="stop_counting_ticks"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="this"/>
    <functioncall functionName="thread"/>
    <functioncall functionName="thread_exited"/>
    <functioncall functionName="thread_func"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="unlock"/>
    <functioncall functionName="userdata"/>
    <functioncall functionName="utf8"/>
    <functioncall functionName="wait_to_finish"/>
    <functioncall functionName="while"/>
    <functioncall functionName="write_ofs"/>
  </FileInfo>
</analyzerinfo>
