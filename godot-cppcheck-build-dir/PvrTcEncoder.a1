<?xml version="1.0"?>
<analyzerinfo checksum="1131272959">
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ColorRgba &lt; int &gt;::operator%&apos; can be const." verbose="The member function &apos;ColorRgba &lt; int &gt;::operator%&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/ColorRgba.h" line="120" column="9"/>
            <symbol>ColorRgba &lt; int &gt;::operator%</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ColorRgba &lt; int &gt;::operator==&apos; can be const." verbose="The member function &apos;ColorRgba &lt; int &gt;::operator==&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/ColorRgba.h" line="127" column="10"/>
            <symbol>ColorRgba &lt; int &gt;::operator==</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ColorRgba &lt; int &gt;::operator!=&apos; can be const." verbose="The member function &apos;ColorRgba &lt; int &gt;::operator!=&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/ColorRgba.h" line="132" column="10"/>
            <symbol>ColorRgba &lt; int &gt;::operator!=</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ColorRgba &lt; unsigned char &gt;::operator%&apos; can be const." verbose="The member function &apos;ColorRgba &lt; unsigned char &gt;::operator%&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/ColorRgba.h" line="120" column="9"/>
            <symbol>ColorRgba &lt; unsigned char &gt;::operator%</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ColorRgba &lt; unsigned char &gt;::operator==&apos; can be const." verbose="The member function &apos;ColorRgba &lt; unsigned char &gt;::operator==&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/ColorRgba.h" line="127" column="10"/>
            <symbol>ColorRgba &lt; unsigned char &gt;::operator==</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ColorRgba &lt; unsigned char &gt;::operator!=&apos; can be const." verbose="The member function &apos;ColorRgba &lt; unsigned char &gt;::operator!=&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/ColorRgba.h" line="132" column="10"/>
            <symbol>ColorRgba &lt; unsigned char &gt;::operator!=</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Bitmap&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Bitmap&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/Bitmap.h" line="16" column="11"/>
            <symbol>Bitmap</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Bitmap&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Bitmap&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/pvrtccompressor/PvrTcEncoder.cpp" file="/home/hbina/git/godot/thirdparty/pvrtccompressor/Bitmap.h" line="16" column="11"/>
            <symbol>Bitmap</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="GetMortonNumber" lineNumber="29"/>
    <functiondecl functionName="EncodeAlpha2Bpp" lineNumber="36"/>
    <functiondecl functionName="EncodeAlpha4Bpp" lineNumber="78"/>
    <functiondecl functionName="CalculateBoundingBox" lineNumber="123"/>
    <functiondecl functionName="EncodeRgb4Bpp" lineNumber="150"/>
    <functiondecl functionName="CalculateBoundingBox" lineNumber="239"/>
    <functiondecl functionName="EncodeRgb4Bpp" lineNumber="267"/>
    <functiondecl functionName="CalculateBoundingBox" lineNumber="358"/>
    <functiondecl functionName="EncodeRgba4Bpp" lineNumber="386"/>
    <functioncall functionName="BILINEAR_FACTORS"/>
    <functioncall functionName="Bitmap"/>
    <functioncall functionName="CalculateBoundingBox"/>
    <functioncall functionName="ColorRgb &lt; int &gt;"/>
    <functioncall functionName="ColorRgb &lt; unsigned char &gt;"/>
    <functioncall functionName="ColorRgba &lt; int &gt;"/>
    <functioncall functionName="ColorRgba &lt; unsigned char &gt;"/>
    <functioncall functionName="GetBitmapHeight"/>
    <functioncall functionName="GetBitmapWidth"/>
    <functioncall functionName="GetColorRgbA"/>
    <functioncall functionName="GetColorRgbB"/>
    <functioncall functionName="GetColorRgbaA"/>
    <functioncall functionName="GetColorRgbaB"/>
    <functioncall functionName="GetData"/>
    <functioncall functionName="GetMortonNumber"/>
    <functioncall functionName="GetRawData"/>
    <functioncall functionName="Interval &lt; Javelin :: ColorRgb &lt;unsigned char &gt; &gt;"/>
    <functioncall functionName="Interval &lt; Javelin :: ColorRgba &lt;unsigned char &gt; &gt;"/>
    <functioncall functionName="IsPowerOf2"/>
    <functioncall functionName="Point2"/>
    <functioncall functionName="RotateRight"/>
    <functioncall functionName="SetColorA"/>
    <functioncall functionName="SetColorB"/>
    <functioncall functionName="SetMax"/>
    <functioncall functionName="SetMin"/>
    <functioncall functionName="a"/>
    <functioncall functionName="alpha"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bitmap"/>
    <functioncall functionName="blockBitmapData"/>
    <functioncall functionName="blockMask"/>
    <functioncall functionName="blue"/>
    <functioncall functionName="ca"/>
    <functioncall functionName="cbb"/>
    <functioncall functionName="char"/>
    <functioncall functionName="const"/>
    <functioncall functionName="data"/>
    <functioncall functionName="for"/>
    <functioncall functionName="g"/>
    <functioncall functionName="green"/>
    <functioncall functionName="h"/>
    <functioncall functionName="height"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="max"/>
    <functioncall functionName="min"/>
    <functioncall functionName="modulationData"/>
    <functioncall functionName="projection"/>
    <functioncall functionName="px"/>
    <functioncall functionName="r"/>
    <functioncall functionName="red"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="result"/>
    <functioncall functionName="return"/>
    <functioncall functionName="shift"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="value"/>
    <functioncall functionName="w"/>
    <functioncall functionName="width"/>
    <functioncall functionName="x"/>
    <functioncall functionName="x0"/>
    <functioncall functionName="x1"/>
    <functioncall functionName="xOffset"/>
    <functioncall functionName="y"/>
    <functioncall functionName="y0"/>
    <functioncall functionName="y1"/>
    <functioncall functionName="yOffset"/>
  </FileInfo>
</analyzerinfo>
