<?xml version="1.0"?>
<analyzerinfo checksum="2542401871">
        <error id="functionConst" severity="style" msg="Technically the member function &apos;spv::Builder::getAccessChain&apos; can be const." verbose="The member function &apos;spv::Builder::getAccessChain&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="629" column="17"/>
            <symbol>spv::Builder::getAccessChain</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;spv::Builder::isInSpecConstCodeGenMode&apos; can be const." verbose="The member function &apos;spv::Builder::isInSpecConstCodeGenMode&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="713" column="10"/>
            <symbol>spv::Builder::isInSpecConstCodeGenMode</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;Function&apos; argument 4 names different: declaration &apos;firstParam&apos; definition &apos;firstParamId&apos;." verbose="Function &apos;Function&apos; argument 4 names different: declaration &apos;firstParam&apos; definition &apos;firstParamId&apos;." cwe="628" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="442" column="71"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="327" column="56"/>
            <symbol>Function</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;unreachable&apos; shadows outer variable" verbose="Local variable &apos;unreachable&apos; shadows outer variable" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="238" column="22" info="Shadow variable"/>
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="299" column="10" info="Shadowed declaration"/>
            <symbol>unreachable</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;newChain&apos; should be passed by const reference." verbose="Parameter &apos;newChain&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="630" column="37"/>
            <symbol>newChain</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;coherentFlags&apos; should be passed by const reference." verbose="Parameter &apos;coherentFlags&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="650" column="64"/>
            <symbol>coherentFlags</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;coherentFlags&apos; should be passed by const reference." verbose="Parameter &apos;coherentFlags&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="662" column="99"/>
            <symbol>coherentFlags</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:167:8" call-funcname="makeIntegerType" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="169" col="56" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:108:10" call-funcname="addExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="116" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:109:10" call-funcname="removeExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="120" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" call-funcname="addIncorporatedExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="121" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h:399:10" my-argnr="1" my-argname="instruction" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="401" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:167:8" call-funcname="makeIntegerType" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="169" col="56" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:108:10" call-funcname="addExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="116" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:109:10" call-funcname="removeExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="120" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" call-funcname="addIncorporatedExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="121" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h:399:10" my-argnr="1" my-argname="instruction" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="401" col="28" value="0"/>
  </FileInfo>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::SpvBuildLogger::tbdFunctionality&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::SpvBuildLogger::tbdFunctionality&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/Logger.h" line="50" column="10"/>
            <symbol>spv::SpvBuildLogger::tbdFunctionality</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::SpvBuildLogger::missingFunctionality&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::SpvBuildLogger::missingFunctionality&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/Logger.h" line="51" column="10"/>
            <symbol>spv::SpvBuildLogger::missingFunctionality</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::SpvBuildLogger::warning&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::SpvBuildLogger::warning&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/Logger.h" line="52" column="10"/>
            <symbol>spv::SpvBuildLogger::warning</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::SpvBuildLogger::getAllMessages&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::SpvBuildLogger::getAllMessages&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/Logger.h" line="54" column="17"/>
            <symbol>spv::SpvBuildLogger::getAllMessages</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::Builder::isCooperativeMatrixType&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::Builder::isCooperativeMatrixType&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="220" column="10"/>
            <symbol>spv::Builder::isCooperativeMatrixType</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::Builder::AccessChain::CoherentFlags::clear&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::Builder::AccessChain::CoherentFlags::clear&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="581" column="18"/>
            <symbol>spv::Builder::AccessChain::CoherentFlags::clear</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;spv::Builder::AccessChain::CoherentFlags::isVolatile&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;spv::Builder::AccessChain::CoherentFlags::isVolatile&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="582" column="18"/>
            <symbol>spv::Builder::AccessChain::CoherentFlags::isVolatile</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;spv::Builder::AccessChain::CoherentFlags::operator|=&apos; can be const." verbose="The member function &apos;spv::Builder::AccessChain::CoherentFlags::operator|=&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvPostProcess.cpp" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="583" column="27"/>
            <symbol>spv::Builder::AccessChain::CoherentFlags::operator|=</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:167:8" call-funcname="makeIntegerType" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="169" col="56" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:108:10" call-funcname="addExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="116" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:109:10" call-funcname="removeExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="120" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" call-funcname="addIncorporatedExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="121" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h:399:10" my-argnr="1" my-argname="instruction" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="401" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:167:8" call-funcname="makeIntegerType" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="169" col="56" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:108:10" call-funcname="addExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="116" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:109:10" call-funcname="removeExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="120" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" call-funcname="addIncorporatedExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="121" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spirv.hpp:1436:13" my-argnr="2" my-argname="hasResult" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spirv.hpp" line="1437" col="6" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spirv.hpp:1436:13" my-argnr="3" my-argname="hasResultType" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spirv.hpp" line="1437" col="19" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h:399:10" my-argnr="1" my-argname="instruction" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="401" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:167:8" call-funcname="makeIntegerType" call-argnr="2" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="169" col="56" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:108:10" call-funcname="addExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="116" col="13" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:109:10" call-funcname="removeExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="120" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="1"/>
<function-call call-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:113:10" call-funcname="addIncorporatedExtension" call-argnr="1" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h" line="121" col="9" my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/SpvBuilder.h:118:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h:399:10" my-argnr="1" my-argname="instruction" file="/home/hbina/git/godot/thirdparty/glslang/SPIRV/spvIR.h" line="401" col="28" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="postProcessType" lineNumber="65"/>
    <functiondecl functionName="postProcess" lineNumber="189"/>
    <functiondecl functionName="postProcessCFG" lineNumber="326"/>
    <functiondecl functionName="postProcessFeatures" lineNumber="386"/>
    <functiondecl functionName="postProcess" lineNumber="443"/>
    <functiondecl functionName="postProcessType" lineNumber="65"/>
    <functiondecl functionName="postProcess" lineNumber="189"/>
    <functiondecl functionName="postProcessCFG" lineNumber="326"/>
    <functiondecl functionName="postProcessFeatures" lineNumber="386"/>
    <functiondecl functionName="postProcess" lineNumber="443"/>
    <functiondecl functionName="postProcessCFG" lineNumber="326"/>
    <functiondecl functionName="postProcess" lineNumber="443"/>
    <functiondecl functionName="postProcessType" lineNumber="65"/>
    <functiondecl functionName="postProcess" lineNumber="189"/>
    <functiondecl functionName="postProcessCFG" lineNumber="326"/>
    <functiondecl functionName="postProcessFeatures" lineNumber="386"/>
    <functiondecl functionName="postProcess" lineNumber="443"/>
    <functiondecl functionName="postProcessType" lineNumber="65"/>
    <functiondecl functionName="postProcess" lineNumber="189"/>
    <functiondecl functionName="postProcessCFG" lineNumber="326"/>
    <functiondecl functionName="postProcessFeatures" lineNumber="386"/>
    <functiondecl functionName="postProcess" lineNumber="443"/>
    <functioncall functionName="Block"/>
    <functioncall functionName="CapabilityDerivativeControl"/>
    <functioncall functionName="CapabilityFloat16"/>
    <functioncall functionName="CapabilityGroupNonUniformPartitionedNV"/>
    <functioncall functionName="CapabilityImageQuery"/>
    <functioncall functionName="CapabilityInt16"/>
    <functioncall functionName="CapabilityInt8"/>
    <functioncall functionName="CapabilityInterpolationFunction"/>
    <functioncall functionName="CapabilityStorageBuffer16BitAccess"/>
    <functioncall functionName="CapabilityStorageBuffer8BitAccess"/>
    <functioncall functionName="CoherentFlags"/>
    <functioncall functionName="Decoration"/>
    <functioncall functionName="DecorationAliasedPointerEXT"/>
    <functioncall functionName="DecorationMax"/>
    <functioncall functionName="Dim"/>
    <functioncall functionName="E_SPV_AMD_gpu_shader_half_float"/>
    <functioncall functionName="E_SPV_AMD_gpu_shader_int16"/>
    <functioncall functionName="E_SPV_KHR_16bit_storage"/>
    <functioncall functionName="E_SPV_KHR_8bit_storage"/>
    <functioncall functionName="E_SPV_NV_shader_subgroup_partitioned"/>
    <functioncall functionName="ExecutionModel"/>
    <functioncall functionName="FPFastMathModeMask"/>
    <functioncall functionName="Function"/>
    <functioncall functionName="FunctionControlMask"/>
    <functioncall functionName="FunctionControlMaskNone"/>
    <functioncall functionName="GLSLstd450Count"/>
    <functioncall functionName="GcnShaderCountAMD"/>
    <functioncall functionName="IdImmediate"/>
    <functioncall functionName="ImageFormat"/>
    <functioncall functionName="ImageOperandsMask"/>
    <functioncall functionName="Instruction"/>
    <functioncall functionName="KernelProfilingInfoMask"/>
    <functioncall functionName="LoopBlocks"/>
    <functioncall functionName="LoopControlMask"/>
    <functioncall functionName="MemoryAccessMask"/>
    <functioncall functionName="MemoryAccessMaskNone"/>
    <functioncall functionName="MemorySemanticsImageMemoryMask"/>
    <functioncall functionName="MemorySemanticsMask"/>
    <functioncall functionName="NoResult"/>
    <functioncall functionName="NoType"/>
    <functioncall functionName="Op"/>
    <functioncall functionName="OpBranch"/>
    <functioncall functionName="OpFunction"/>
    <functioncall functionName="OpFunctionEnd"/>
    <functioncall functionName="OpFunctionParameter"/>
    <functioncall functionName="OpLabel"/>
    <functioncall functionName="OpString"/>
    <functioncall functionName="OpTypeBool"/>
    <functioncall functionName="OpTypeFloat"/>
    <functioncall functionName="OpTypeInt"/>
    <functioncall functionName="OpTypePointer"/>
    <functioncall functionName="OpUnreachable"/>
    <functioncall functionName="ReachDeadContinue"/>
    <functioncall functionName="ReachDeadMerge"/>
    <functioncall functionName="ReachReason"/>
    <functioncall functionName="ScopeMax"/>
    <functioncall functionName="SelectionControlMask"/>
    <functioncall functionName="ShaderBallotCountAMD"/>
    <functioncall functionName="ShaderExplicitVertexParameterCountAMD"/>
    <functioncall functionName="ShaderTrinaryMinMaxCountAMD"/>
    <functioncall functionName="SpvOptions"/>
    <functioncall functionName="Spv_1_3"/>
    <functioncall functionName="Spv_1_5"/>
    <functioncall functionName="StorageClass"/>
    <functioncall functionName="StorageClassPhysicalStorageBufferEXT"/>
    <functioncall functionName="a"/>
    <functioncall functionName="addCapability"/>
    <functioncall functionName="addDecoration"/>
    <functioncall functionName="addExtension"/>
    <functioncall functionName="addFunction"/>
    <functioncall functionName="addIdOperand"/>
    <functioncall functionName="addImmediateOperand"/>
    <functioncall functionName="addIncorporatedExtension"/>
    <functioncall functionName="addInstruction"/>
    <functioncall functionName="addLocalVariable"/>
    <functioncall functionName="addStringOperand"/>
    <functioncall functionName="addr"/>
    <functioncall functionName="alignment"/>
    <functioncall functionName="alignmentIdx"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="b"/>
    <functioncall functionName="back"/>
    <functioncall functionName="baseExt"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="block"/>
    <functioncall functionName="body"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="bp"/>
    <functioncall functionName="branch"/>
    <functioncall functionName="break"/>
    <functioncall functionName="c"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="cap"/>
    <functioncall functionName="cbegin"/>
    <functioncall functionName="cend"/>
    <functioncall functionName="charCount"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="coherent"/>
    <functioncall functionName="component"/>
    <functioncall functionName="const"/>
    <functioncall functionName="containsPhysicalStorageBufferOrArray"/>
    <functioncall functionName="containsType"/>
    <functioncall functionName="continue_target"/>
    <functioncall functionName="count"/>
    <functioncall functionName="decoration_id"/>
    <functioncall functionName="default"/>
    <functioncall functionName="devicecoherent"/>
    <functioncall functionName="disableOptimizer"/>
    <functioncall functionName="disassemble"/>
    <functioncall functionName="dump"/>
    <functioncall functionName="e"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="entry"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="ext"/>
    <functioncall functionName="f"/>
    <functioncall functionName="false"/>
    <functioncall functionName="file"/>
    <functioncall functionName="fileString"/>
    <functioncall functionName="file_c_str"/>
    <functioncall functionName="find"/>
    <functioncall functionName="first"/>
    <functioncall functionName="for"/>
    <functioncall functionName="for_each"/>
    <functioncall functionName="found"/>
    <functioncall functionName="foundDecoration"/>
    <functioncall functionName="foundStorage"/>
    <functioncall functionName="front"/>
    <functioncall functionName="fun"/>
    <functioncall functionName="function"/>
    <functioncall functionName="functionInstruction"/>
    <functioncall functionName="functionType"/>
    <functioncall functionName="generateDebugInfo"/>
    <functioncall functionName="get"/>
    <functioncall functionName="getBlocks"/>
    <functioncall functionName="getContainedTypeId"/>
    <functioncall functionName="getDerefTypeId"/>
    <functioncall functionName="getEntryBlock"/>
    <functioncall functionName="getFunctions"/>
    <functioncall functionName="getId"/>
    <functioncall functionName="getIdOperand"/>
    <functioncall functionName="getImmediateOperand"/>
    <functioncall functionName="getInstruction"/>
    <functioncall functionName="getInstructions"/>
    <functioncall functionName="getLocalVariables"/>
    <functioncall functionName="getMostBasicTypeClass"/>
    <functioncall functionName="getNumOperands"/>
    <functioncall functionName="getNumTypeComponents"/>
    <functioncall functionName="getNumTypeConstituents"/>
    <functioncall functionName="getOpCode"/>
    <functioncall functionName="getParent"/>
    <functioncall functionName="getResultId"/>
    <functioncall functionName="getScalarTypeId"/>
    <functioncall functionName="getScalarTypeWidth"/>
    <functioncall functionName="getSpvVersion"/>
    <functioncall functionName="getStorageClass"/>
    <functioncall functionName="getStringId"/>
    <functioncall functionName="getTypeClass"/>
    <functioncall functionName="getTypeId"/>
    <functioncall functionName="getTypeNumColumns"/>
    <functioncall functionName="getTypeNumRows"/>
    <functioncall functionName="getTypeStorageClass"/>
    <functioncall functionName="getUniqueId"/>
    <functioncall functionName="head"/>
    <functioncall functionName="header"/>
    <functioncall functionName="headerForUnreachableContinue"/>
    <functioncall functionName="i"/>
    <functioncall functionName="id"/>
    <functioncall functionName="idx"/>
    <functioncall functionName="if"/>
    <functioncall functionName="immediate"/>
    <functioncall functionName="implicitThis"/>
    <functioncall functionName="inReadableOrder"/>
    <functioncall functionName="incId"/>
    <functioncall functionName="incorporatedVersion"/>
    <functioncall functionName="insert"/>
    <functioncall functionName="inst"/>
    <functioncall functionName="instruction"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isAggregateType"/>
    <functioncall functionName="isArrayType"/>
    <functioncall functionName="isConstantOpCode"/>
    <functioncall functionName="isCooperativeMatrixType"/>
    <functioncall functionName="isId"/>
    <functioncall functionName="isIdOperand"/>
    <functioncall functionName="isImage"/>
    <functioncall functionName="isImageType"/>
    <functioncall functionName="isMatrixType"/>
    <functioncall functionName="isPointer"/>
    <functioncall functionName="isPointerType"/>
    <functioncall functionName="isSampledImageType"/>
    <functioncall functionName="isScalarType"/>
    <functioncall functionName="isSpecConstantOpCode"/>
    <functioncall functionName="isStructType"/>
    <functioncall functionName="isVectorType"/>
    <functioncall functionName="lValue"/>
    <functioncall functionName="lang"/>
    <functioncall functionName="long"/>
    <functioncall functionName="makeInt64Constant"/>
    <functioncall functionName="makeIntConstant"/>
    <functioncall functionName="makeIntType"/>
    <functioncall functionName="makeIntegerType"/>
    <functioncall functionName="makeUintType"/>
    <functioncall functionName="mapInstruction"/>
    <functioncall functionName="mem"/>
    <functioncall functionName="memoryAccess"/>
    <functioncall functionName="merge"/>
    <functioncall functionName="move"/>
    <functioncall functionName="name"/>
    <functioncall functionName="newChain"/>
    <functioncall functionName="nonprivate"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="op"/>
    <functioncall functionName="opCode"/>
    <functioncall functionName="opcode"/>
    <functioncall functionName="optimizeSize"/>
    <functioncall functionName="out"/>
    <functioncall functionName="p"/>
    <functioncall functionName="param"/>
    <functioncall functionName="parent"/>
    <functioncall functionName="postProcess"/>
    <functioncall functionName="postProcessCFG"/>
    <functioncall functionName="postProcessFeatures"/>
    <functioncall functionName="postProcessType"/>
    <functioncall functionName="preSwizzleBaseType"/>
    <functioncall functionName="precision"/>
    <functioncall functionName="pred"/>
    <functioncall functionName="promoExt"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="queuefamilycoherent"/>
    <functioncall functionName="rValue"/>
    <functioncall functionName="raw_instruction"/>
    <functioncall functionName="reachableBlocks"/>
    <functioncall functionName="removeExtension"/>
    <functioncall functionName="remove_if"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="resultId"/>
    <functioncall functionName="resultType"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rewriteAsCanonicalUnreachableContinue"/>
    <functioncall functionName="rewriteAsCanonicalUnreachableMerge"/>
    <functioncall functionName="scalarTypeId"/>
    <functioncall functionName="second"/>
    <functioncall functionName="setBlock"/>
    <functioncall functionName="setImmediateOperand"/>
    <functioncall functionName="size"/>
    <functioncall functionName="specConstant"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="static_cast&lt;void&gt;"/>
    <functioncall functionName="storageClass"/>
    <functioncall functionName="str"/>
    <functioncall functionName="strId"/>
    <functioncall functionName="subgroupcoherent"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="text"/>
    <functioncall functionName="this"/>
    <functioncall functionName="true"/>
    <functioncall functionName="typeId"/>
    <functioncall functionName="u"/>
    <functioncall functionName="unique_ptr"/>
    <functioncall functionName="unreachable"/>
    <functioncall functionName="unreachableDefinitions"/>
    <functioncall functionName="unreachableMerges"/>
    <functioncall functionName="validate"/>
    <functioncall functionName="version"/>
    <functioncall functionName="volatil"/>
    <functioncall functionName="w"/>
    <functioncall functionName="while"/>
    <functioncall functionName="width"/>
    <functioncall functionName="word"/>
    <functioncall functionName="wordCount"/>
    <functioncall functionName="wordString"/>
    <functioncall functionName="workgroupcoherent"/>
  </FileInfo>
</analyzerinfo>
