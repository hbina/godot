<?xml version="1.0"?>
<analyzerinfo checksum="1197557436">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;MethodBind0::method&apos; is not initialized in the constructor." verbose="Member variable &apos;MethodBind0::method&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="69" column="2"/>
            <symbol>MethodBind0::method</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;MethodBind0C::method&apos; is not initialized in the constructor." verbose="Member variable &apos;MethodBind0C::method&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="425" column="2"/>
            <symbol>MethodBind0C::method</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;get_instance_class&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;get_instance_class&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="32" column="17" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="278" column="17" info="Virtual function in base class"/>
            <symbol>get_instance_class</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;get_instance_class&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;get_instance_class&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="388" column="17" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="278" column="17" info="Virtual function in base class"/>
            <symbol>get_instance_class</symbol>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical disjunction always evaluates to true: node || !(obj)." verbose="Logical disjunction always evaluates to true: node || !(obj). Are these conditions necessary? Did you intend to use &amp;&amp; instead? Are the numbers correct? Are you comparing the correct variables?" cwe="571">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="140" column="15"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="139" column="16" info="&apos;node&apos; is assigned value &apos;p_variant&apos; here."/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="138" column="17" info="&apos;obj&apos; is assigned value &apos;p_variant&apos; here."/>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical disjunction always evaluates to true: control || !(obj)." verbose="Logical disjunction always evaluates to true: control || !(obj). Are these conditions necessary? Did you intend to use &amp;&amp; instead? Are the numbers correct? Are you comparing the correct variables?" cwe="571">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="149" column="18"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="148" column="22" info="&apos;control&apos; is assigned value &apos;p_variant&apos; here."/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="147" column="17" info="&apos;obj&apos; is assigned value &apos;p_variant&apos; here."/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="38" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="394" column="33"/>
        </error>
        <error id="oppositeExpression" severity="style" msg="Opposite expression on both sides of &apos;||&apos;." verbose="Finding the opposite expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="140" column="15"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="139" column="16" info="&apos;node&apos; is assigned value &apos;p_variant&apos; here."/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="138" column="17" info="&apos;obj&apos; is assigned value &apos;p_variant&apos; here."/>
        </error>
        <error id="oppositeExpression" severity="style" msg="Opposite expression on both sides of &apos;||&apos;." verbose="Finding the opposite expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="149" column="18"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="148" column="22" info="&apos;control&apos; is assigned value &apos;p_variant&apos; here."/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.h" line="147" column="17" info="&apos;obj&apos; is assigned value &apos;p_variant&apos; here."/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/core/method_bind.h:233:7" call-funcname="set_argument_count" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="74" col="21" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/method_bind.h:233:7" call-funcname="set_argument_count" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="430" col="21" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;MethodBind0::_get_argument_type&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;MethodBind0::_get_argument_type&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="19" column="16"/>
            <symbol>MethodBind0::_get_argument_type</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;MethodBind0C::_get_argument_type&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;MethodBind0C::_get_argument_type&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="375" column="16"/>
            <symbol>MethodBind0C::_get_argument_type</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!instance&apos; is redundant or there is possible null pointer dereference: instance." verbose="Either the condition &apos;!instance&apos; is redundant or there is possible null pointer dereference: instance." cwe="476" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="59" column="4" info="Null pointer dereference"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="38" column="33" info="Assignment &apos;instance=(__UnexistingClass*)p_object&apos;, assigned value is 0"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="43" column="19" info="Assuming that condition &apos;!instance&apos; is not redundant"/>
            <symbol>instance</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!instance&apos; is redundant or there is possible null pointer dereference: instance." verbose="Either the condition &apos;!instance&apos; is redundant or there is possible null pointer dereference: instance." cwe="476" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="415" column="4" info="Null pointer dereference"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="394" column="33" info="Assignment &apos;instance=(__UnexistingClass*)p_object&apos;, assigned value is 0"/>
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="399" column="19" info="Assuming that condition &apos;!instance&apos; is not redundant"/>
            <symbol>instance</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/core/method_bind.h:225:7" call-funcname="_set_const" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="71" col="13" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/method_bind.h:230:7" call-funcname="_generate_argument_types" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="72" col="27" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/method_bind.h:230:7" call-funcname="_generate_argument_types" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="428" col="27" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/method_bind.h:233:7" call-funcname="set_argument_count" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.cpp" line="90" col="20" call-argexpr="p_count" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/hbina/git/godot/core/method_bind.gen.inc" line="72" col="28" info="Calling function '_generate_argument_types', 1st argument '0' value is 0"/>
</function-call>  </FileInfo>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="65" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="/home/hbina/git/godot/core/method_bind.cpp" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="421" column="33"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/core/method_bind.h:233:7" call-funcname="set_argument_count" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="74" col="21" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/core/method_bind.h:233:7" call-funcname="set_argument_count" call-argnr="1" file="/home/hbina/git/godot/core/method_bind.gen.inc" line="430" col="21" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:126:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="126" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:176:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="176" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:178:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="178" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:179:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="179" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:180:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="180" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:181:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="181" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:182:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="182" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:183:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="183" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:184:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="184" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:185:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="185" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:186:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="186" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:187:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="187" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:188:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="188" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:202:29" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="203" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:126:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="126" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:176:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="176" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:178:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="178" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:179:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="179" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:180:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="180" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:181:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="181" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:182:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="182" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:183:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="183" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:184:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="184" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:185:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="185" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:186:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="186" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:187:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="187" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:188:1" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="188" col="1" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/core/method_bind.h:202:29" my-argnr="2" my-argname="p_ptr" file="/home/hbina/git/godot/core/method_bind.h" line="203" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="_set_const" lineNumber="53"/>
    <functiondecl functionName="_set_returns" lineNumber="58"/>
    <functiondecl functionName="get_name" lineNumber="63"/>
    <functiondecl functionName="set_name" lineNumber="66"/>
    <functiondecl functionName="set_default_arguments" lineNumber="82"/>
    <functiondecl functionName="get_argument_info" lineNumber="38"/>
    <functiondecl functionName="get_return_info" lineNumber="47"/>
    <functiondecl functionName="_set_const" lineNumber="53"/>
    <functiondecl functionName="_set_returns" lineNumber="58"/>
    <functiondecl functionName="get_name" lineNumber="63"/>
    <functiondecl functionName="set_name" lineNumber="66"/>
    <functiondecl functionName="set_argument_names" lineNumber="71"/>
    <functiondecl functionName="get_argument_names" lineNumber="75"/>
    <functiondecl functionName="set_default_arguments" lineNumber="82"/>
    <functiondecl functionName="_generate_argument_types" lineNumber="88"/>
    <functiondecl functionName="get_argument_info" lineNumber="38"/>
    <functiondecl functionName="get_return_info" lineNumber="47"/>
    <functiondecl functionName="_set_const" lineNumber="53"/>
    <functiondecl functionName="_set_returns" lineNumber="58"/>
    <functiondecl functionName="get_name" lineNumber="63"/>
    <functiondecl functionName="set_name" lineNumber="66"/>
    <functiondecl functionName="set_argument_names" lineNumber="71"/>
    <functiondecl functionName="get_argument_names" lineNumber="75"/>
    <functiondecl functionName="set_default_arguments" lineNumber="82"/>
    <functiondecl functionName="_generate_argument_types" lineNumber="88"/>
    <functiondecl functionName="_set_const" lineNumber="53"/>
    <functiondecl functionName="_set_returns" lineNumber="58"/>
    <functiondecl functionName="get_name" lineNumber="63"/>
    <functiondecl functionName="set_name" lineNumber="66"/>
    <functiondecl functionName="set_default_arguments" lineNumber="82"/>
    <functiondecl functionName="_set_const" lineNumber="53"/>
    <functiondecl functionName="_set_returns" lineNumber="58"/>
    <functiondecl functionName="get_name" lineNumber="63"/>
    <functiondecl functionName="set_name" lineNumber="66"/>
    <functiondecl functionName="set_default_arguments" lineNumber="82"/>
    <functiondecl functionName="_set_const" lineNumber="53"/>
    <functiondecl functionName="_set_returns" lineNumber="58"/>
    <functiondecl functionName="get_name" lineNumber="63"/>
    <functiondecl functionName="set_name" lineNumber="66"/>
    <functiondecl functionName="set_default_arguments" lineNumber="82"/>
    <functioncall functionName="Axis"/>
    <functioncall functionName="CALL_ERROR_TOO_FEW_ARGUMENTS"/>
    <functioncall functionName="CALL_ERROR_TOO_MANY_ARGUMENTS"/>
    <functioncall functionName="CALL_OK"/>
    <functioncall functionName="ConnectFlags"/>
    <functioncall functionName="Corner"/>
    <functioncall functionName="ERR_FAIL_COND_V"/>
    <functioncall functionName="ERR_FAIL_INDEX_V"/>
    <functioncall functionName="Error"/>
    <functioncall functionName="HAlign"/>
    <functioncall functionName="MAKE_ENUM_TYPE_INFO"/>
    <functioncall functionName="METHOD_FLAGS_DEFAULT"/>
    <functioncall functionName="METHOD_FLAG_CONST"/>
    <functioncall functionName="METHOD_FLAG_NORMAL"/>
    <functioncall functionName="METHOD_FLAG_VARARG"/>
    <functioncall functionName="Margin"/>
    <functioncall functionName="MethodBind"/>
    <functioncall functionName="MethodBind0"/>
    <functioncall functionName="MethodBind0C"/>
    <functioncall functionName="MethodFlags"/>
    <functioncall functionName="NIL"/>
    <functioncall functionName="Operator"/>
    <functioncall functionName="Orientation"/>
    <functioncall functionName="P1"/>
    <functioncall functionName="P2"/>
    <functioncall functionName="P3"/>
    <functioncall functionName="P4"/>
    <functioncall functionName="P5"/>
    <functioncall functionName="PropertyHint"/>
    <functioncall functionName="PropertyInfo"/>
    <functioncall functionName="PropertyUsageFlags"/>
    <functioncall functionName="R"/>
    <functioncall functionName="String"/>
    <functioncall functionName="Type"/>
    <functioncall functionName="VAlign"/>
    <functioncall functionName="Variant"/>
    <functioncall functionName="_gen_argument_type"/>
    <functioncall functionName="_gen_argument_type_info"/>
    <functioncall functionName="_generate_argument_types"/>
    <functioncall functionName="_get_argument_type"/>
    <functioncall functionName="_set_const"/>
    <functioncall functionName="argt"/>
    <functioncall functionName="argument_types"/>
    <functioncall functionName="const"/>
    <functioncall functionName="dm"/>
    <functioncall functionName="false"/>
    <functioncall functionName="for"/>
    <functioncall functionName="get_argument_count"/>
    <functioncall functionName="get_class_static"/>
    <functioncall functionName="get_default_argument_count"/>
    <functioncall functionName="i"/>
    <functioncall functionName="idx"/>
    <functioncall functionName="if"/>
    <functioncall functionName="instance"/>
    <functioncall functionName="is_const"/>
    <functioncall functionName="is_vararg"/>
    <functioncall functionName="itos"/>
    <functioncall functionName="memdelete_arr"/>
    <functioncall functionName="memnew"/>
    <functioncall functionName="memnew_arr"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="obj"/>
    <functioncall functionName="operatorint"/>
    <functioncall functionName="p_arg"/>
    <functioncall functionName="p_arg_count"/>
    <functioncall functionName="p_argument"/>
    <functioncall functionName="p_const"/>
    <functioncall functionName="p_count"/>
    <functioncall functionName="p_defargs"/>
    <functioncall functionName="p_hint"/>
    <functioncall functionName="p_info"/>
    <functioncall functionName="p_method"/>
    <functioncall functionName="p_name"/>
    <functioncall functionName="p_names"/>
    <functioncall functionName="p_object"/>
    <functioncall functionName="p_ptr"/>
    <functioncall functionName="p_return_nil_is_variant"/>
    <functioncall functionName="p_returns"/>
    <functioncall functionName="p_val"/>
    <functioncall functionName="p_variant"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="return"/>
    <functioncall functionName="set_argument_count"/>
    <functioncall functionName="set_method"/>
    <functioncall functionName="set_method_info"/>
    <functioncall functionName="size"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="true"/>
    <functioncall functionName="wchar_t"/>
  </FileInfo>
</analyzerinfo>
