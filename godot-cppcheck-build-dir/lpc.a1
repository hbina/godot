<?xml version="1.0"?>
<analyzerinfo checksum="48144294">
        <error id="allocaCalled" severity="warning" msg="Obsolete function &apos;alloca&apos; called. In C99 and later it is recommended to use a variable length array instead." verbose="The obsolete function &apos;alloca&apos; is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function &apos;alloca&apos; is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="61" column="15"/>
            <symbol>alloca</symbol>
        </error>
        <error id="allocaCalled" severity="warning" msg="Obsolete function &apos;alloca&apos; called. In C99 and later it is recommended to use a variable length array instead." verbose="The obsolete function &apos;alloca&apos; is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function &apos;alloca&apos; is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="62" column="15"/>
            <symbol>alloca</symbol>
        </error>
        <error id="allocaCalled" severity="warning" msg="Obsolete function &apos;alloca&apos; called. In C99 and later it is recommended to use a variable length array instead." verbose="The obsolete function &apos;alloca&apos; is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function &apos;alloca&apos; is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="141" column="15"/>
            <symbol>alloca</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;o&apos; can be reduced." verbose="The scope of the variable &apos;o&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="139" column="12"/>
            <symbol>o</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="139" column="14"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="140" column="9"/>
            <symbol>y</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;vorbis_lpc_from_data&apos; argument 2 names different: declaration &apos;lpc&apos; definition &apos;lpci&apos;." verbose="Function &apos;vorbis_lpc_from_data&apos; argument 2 names different: declaration &apos;lpc&apos; definition &apos;lpci&apos;." cwe="628" inconclusive="true">
            <location file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" line="60" column="47"/>
            <location file0="/home/hbina/git/godot/thirdparty/libvorbis/lpc.c" file="/home/hbina/git/godot/thirdparty/libvorbis/lpc.h" line="23" column="54"/>
            <symbol>vorbis_lpc_from_data</symbol>
        </error>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/libvorbis/scales.h:43:21" my-argnr="1" my-argname="x" file="/home/hbina/git/godot/thirdparty/libvorbis/scales.h" line="48" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="vorbis_lpc_from_data" lineNumber="60"/>
    <functiondecl functionName="vorbis_lpc_predict" lineNumber="132"/>
    <functiondecl functionName="vorbis_lpc_from_data" lineNumber="60"/>
    <functiondecl functionName="vorbis_lpc_predict" lineNumber="132"/>
    <functiondecl functionName="vorbis_lpc_from_data" lineNumber="60"/>
    <functiondecl functionName="vorbis_lpc_predict" lineNumber="132"/>
    <functiondecl functionName="vorbis_lpc_from_data" lineNumber="60"/>
    <functiondecl functionName="vorbis_lpc_predict" lineNumber="132"/>
    <functiondecl functionName="vorbis_lpc_from_data" lineNumber="60"/>
    <functiondecl functionName="vorbis_lpc_predict" lineNumber="132"/>
    <functiondecl functionName="vorbis_lpc_from_data" lineNumber="60"/>
    <functiondecl functionName="vorbis_lpc_predict" lineNumber="132"/>
    <functioncall functionName="_alloca"/>
    <functioncall functionName="_mm_cvtsd_si32"/>
    <functioncall functionName="_mm_load_sd"/>
    <functioncall functionName="alloca"/>
    <functioncall functionName="asm"/>
    <functioncall functionName="d"/>
    <functioncall functionName="done"/>
    <functioncall functionName="double"/>
    <functioncall functionName="f"/>
    <functioncall functionName="float"/>
    <functioncall functionName="floor"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fpu"/>
    <functioncall functionName="g"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="j"/>
    <functioncall functionName="m"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="n"/>
    <functioncall functionName="o"/>
    <functioncall functionName="prime"/>
    <functioncall functionName="r"/>
    <functioncall functionName="return"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="void"/>
    <functioncall functionName="while"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
  </FileInfo>
</analyzerinfo>
