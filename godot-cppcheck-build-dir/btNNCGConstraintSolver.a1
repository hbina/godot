<?xml version="1.0"?>
<analyzerinfo checksum="2716399814">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;btSolverAnalyticsData::m_numBodies&apos; is not initialized in the constructor." verbose="Member variable &apos;btSolverAnalyticsData::m_numBodies&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h" line="34" column="2"/>
            <symbol>btSolverAnalyticsData::m_numBodies</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;btSolverAnalyticsData::m_numContactManifolds&apos; is not initialized in the constructor." verbose="Member variable &apos;btSolverAnalyticsData::m_numContactManifolds&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h" line="34" column="2"/>
            <symbol>btSolverAnalyticsData::m_numContactManifolds</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;applyFriction&apos; is always true" verbose="Condition &apos;applyFriction&apos; is always true" cwe="571">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="158" column="10" info="Condition &apos;applyFriction&apos; is always true"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="157" column="27" info="Assignment &apos;applyFriction=true&apos;, assigned value is 1"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solveManifold&apos; can be reduced." verbose="The scope of the variable &apos;solveManifold&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="161" column="28"/>
            <symbol>solveManifold</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solveManifold&apos; can be reduced." verbose="The scope of the variable &apos;solveManifold&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="179" column="28"/>
            <symbol>solveManifold</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;constraint&apos; can be reduced." verbose="The scope of the variable &apos;constraint&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="302" column="26"/>
            <symbol>constraint</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;constraint&apos; can be reduced." verbose="The scope of the variable &apos;constraint&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="317" column="26"/>
            <symbol>constraint</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;constraint&apos; can be reduced." verbose="The scope of the variable &apos;constraint&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btNNCGConstraintSolver.cpp" line="333" column="27"/>
            <symbol>constraint</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functioncall functionName="ATTRIBUTE_ALIGNED16"/>
    <functioncall functionName="additionaldeltaimpulse"/>
    <functioncall functionName="applyFriction"/>
    <functioncall functionName="beta"/>
    <functioncall functionName="bodies"/>
    <functioncall functionName="bodyA"/>
    <functioncall functionName="bodyAid"/>
    <functioncall functionName="bodyB"/>
    <functioncall functionName="bodyBid"/>
    <functioncall functionName="btNNCGConstraintSolver"/>
    <functioncall functionName="btRandInt2"/>
    <functioncall functionName="btScalar"/>
    <functioncall functionName="btSequentialImpulseConstraintSolver"/>
    <functioncall functionName="btSolverAnalyticsData"/>
    <functioncall functionName="c"/>
    <functioncall functionName="class"/>
    <functioncall functionName="constraint"/>
    <functioncall functionName="constraints"/>
    <functioncall functionName="contactConstraint"/>
    <functioncall functionName="debugDrawer"/>
    <functioncall functionName="deltaf"/>
    <functioncall functionName="deltaflengthsqr"/>
    <functioncall functionName="false"/>
    <functioncall functionName="for"/>
    <functioncall functionName="getOrInitSolverBody"/>
    <functioncall functionName="getRigidBodyA"/>
    <functioncall functionName="getRigidBodyB"/>
    <functioncall functionName="if"/>
    <functioncall functionName="infoGlobal"/>
    <functioncall functionName="int"/>
    <functioncall functionName="internalApplyImpulse"/>
    <functioncall functionName="internalGetInvMass"/>
    <functioncall functionName="isEnabled"/>
    <functioncall functionName="j"/>
    <functioncall functionName="m_angularComponentA"/>
    <functioncall functionName="m_angularComponentB"/>
    <functioncall functionName="m_appliedImpulse"/>
    <functioncall functionName="m_deltafLengthSqrPrev"/>
    <functioncall functionName="m_friction"/>
    <functioncall functionName="m_frictionIndex"/>
    <functioncall functionName="m_numIterations"/>
    <functioncall functionName="m_onlyForNoneContact"/>
    <functioncall functionName="m_overrideNumSolverIterations"/>
    <functioncall functionName="m_resolveSplitPenetrationImpulse"/>
    <functioncall functionName="m_solverBodyIdA"/>
    <functioncall functionName="m_solverBodyIdB"/>
    <functioncall functionName="m_timeStep"/>
    <functioncall functionName="manifoldPtr"/>
    <functioncall functionName="numBodies"/>
    <functioncall functionName="numConstraints"/>
    <functioncall functionName="numManifolds"/>
    <functioncall functionName="resizeNoInitialize"/>
    <functioncall functionName="resolveSingleConstraintRowGeneric"/>
    <functioncall functionName="resolveSingleConstraintRowLowerLimit"/>
    <functioncall functionName="rollingFrictionConstraint"/>
    <functioncall functionName="rollingFrictionMagnitude"/>
    <functioncall functionName="rowSolver"/>
    <functioncall functionName="seed"/>
    <functioncall functionName="size"/>
    <functioncall functionName="solveConstraintObsolete"/>
    <functioncall functionName="solveGroupCacheFriendlyFinish"/>
    <functioncall functionName="solveGroupCacheFriendlySetup"/>
    <functioncall functionName="solveManifold"/>
    <functioncall functionName="swapi"/>
    <functioncall functionName="tmp"/>
    <functioncall functionName="totalImpulse"/>
    <functioncall functionName="true"/>
  </FileInfo>
</analyzerinfo>
