<?xml version="1.0"?>
<analyzerinfo checksum="1762340355">
        <error id="redundantAssignment" severity="style" msg="Variable &apos;CAb[0]&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;CAb[0]&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/fixed/burg_modified_FIX.c" line="112" column="14" info="CAb[0] is overwritten"/>
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/fixed/burg_modified_FIX.c" line="83" column="14" info="CAb[0] is assigned"/>
            <symbol>CAb[0]</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="silk_burg_modified_c" lineNumber="45"/>
    <functioncall functionName="Atmp1"/>
    <functioncall functionName="Atmp_QA"/>
    <functioncall functionName="C0"/>
    <functioncall functionName="C0_64"/>
    <functioncall functionName="C_first_row"/>
    <functioncall functionName="C_last_row"/>
    <functioncall functionName="D"/>
    <functioncall functionName="FIND_LPC_COND_FAC"/>
    <functioncall functionName="MAC16_16"/>
    <functioncall functionName="SILK_FIX_CONST"/>
    <functioncall functionName="SILK_MAX_ORDER_LPC"/>
    <functioncall functionName="arch"/>
    <functioncall functionName="break"/>
    <functioncall functionName="celt_pitch_xcorr"/>
    <functioncall functionName="d"/>
    <functioncall functionName="for"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="invGain_Q30"/>
    <functioncall functionName="k"/>
    <functioncall functionName="lz"/>
    <functioncall functionName="minInvGain_Q30"/>
    <functioncall functionName="n"/>
    <functioncall functionName="nrg"/>
    <functioncall functionName="num"/>
    <functioncall functionName="opus_int32"/>
    <functioncall functionName="rc_Q31"/>
    <functioncall functionName="reached_max_gain"/>
    <functioncall functionName="rshifts"/>
    <functioncall functionName="silk_ADD32"/>
    <functioncall functionName="silk_ADD_LSHIFT32"/>
    <functioncall functionName="silk_CLZ32"/>
    <functioncall functionName="silk_CLZ64"/>
    <functioncall functionName="silk_DIV32"/>
    <functioncall functionName="silk_DIV32_varQ"/>
    <functioncall functionName="silk_LSHIFT"/>
    <functioncall functionName="silk_LSHIFT32"/>
    <functioncall functionName="silk_MLA"/>
    <functioncall functionName="silk_MLA_ovflw"/>
    <functioncall functionName="silk_RSHIFT32"/>
    <functioncall functionName="silk_RSHIFT64"/>
    <functioncall functionName="silk_RSHIFT_ROUND"/>
    <functioncall functionName="silk_SMLAWB"/>
    <functioncall functionName="silk_SMLAWW"/>
    <functioncall functionName="silk_SMMUL"/>
    <functioncall functionName="silk_SQRT_APPROX"/>
    <functioncall functionName="silk_abs"/>
    <functioncall functionName="silk_assert"/>
    <functioncall functionName="silk_inner_prod16_aligned_64"/>
    <functioncall functionName="silk_inner_prod_aligned"/>
    <functioncall functionName="silk_int32_MAX"/>
    <functioncall functionName="silk_int32_MIN"/>
    <functioncall functionName="silk_memcpy"/>
    <functioncall functionName="silk_memset"/>
    <functioncall functionName="silk_min"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="tmp1"/>
    <functioncall functionName="tmp2"/>
    <functioncall functionName="x"/>
    <functioncall functionName="x1"/>
    <functioncall functionName="x2"/>
    <functioncall functionName="x_ptr"/>
    <functioncall functionName="xcorr"/>
  </FileInfo>
</analyzerinfo>
