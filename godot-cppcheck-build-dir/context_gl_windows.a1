<?xml version="1.0"?>
<analyzerinfo checksum="2398152761">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ContextGL_Windows::pixel_format&apos; is not initialized in the constructor." verbose="Member variable &apos;ContextGL_Windows::pixel_format&apos; is not initialized in the constructor." cwe="398">
            <location file="/home/hbina/git/godot/platform/windows/context_gl_windows.cpp" line="219" column="20"/>
            <symbol>ContextGL_Windows::pixel_format</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;hWnd&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;hWnd&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="/home/hbina/git/godot/platform/windows/context_gl_windows.cpp" line="222" column="2"/>
            <symbol>hWnd</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ContextGL_Windows::get_window_width&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ContextGL_Windows::get_window_width&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/platform/windows/context_gl_windows.cpp" file="/home/hbina/git/godot/platform/windows/context_gl_windows.h" line="66" column="6"/>
            <location file="/home/hbina/git/godot/platform/windows/context_gl_windows.cpp" line="63" column="24"/>
            <symbol>ContextGL_Windows::get_window_width</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ContextGL_Windows::get_window_height&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ContextGL_Windows::get_window_height&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/platform/windows/context_gl_windows.cpp" file="/home/hbina/git/godot/platform/windows/context_gl_windows.h" line="67" column="6"/>
            <location file="/home/hbina/git/godot/platform/windows/context_gl_windows.cpp" line="68" column="24"/>
            <symbol>ContextGL_Windows::get_window_height</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="release_current" lineNumber="53"/>
    <functiondecl functionName="make_current" lineNumber="58"/>
    <functiondecl functionName="get_window_width" lineNumber="63"/>
    <functiondecl functionName="get_window_height" lineNumber="68"/>
    <functiondecl functionName="should_vsync_via_compositor" lineNumber="73"/>
    <functiondecl functionName="swap_buffers" lineNumber="90"/>
    <functiondecl functionName="set_use_vsync" lineNumber="110"/>
    <functiondecl functionName="is_using_vsync" lineNumber="122"/>
    <functiondecl functionName="initialize" lineNumber="129"/>
    <functiondecl functionName="release_current" lineNumber="53"/>
    <functiondecl functionName="make_current" lineNumber="58"/>
    <functiondecl functionName="get_window_width" lineNumber="63"/>
    <functiondecl functionName="get_window_height" lineNumber="68"/>
    <functiondecl functionName="should_vsync_via_compositor" lineNumber="73"/>
    <functiondecl functionName="swap_buffers" lineNumber="90"/>
    <functiondecl functionName="set_use_vsync" lineNumber="110"/>
    <functiondecl functionName="is_using_vsync" lineNumber="122"/>
    <functiondecl functionName="initialize" lineNumber="129"/>
    <functioncall functionName="BYTE"/>
    <functioncall functionName="ChoosePixelFormat"/>
    <functioncall functionName="ContextGL_Windows"/>
    <functioncall functionName="DwmFlush"/>
    <functioncall functionName="DwmIsCompositionEnabled"/>
    <functioncall functionName="GetDC"/>
    <functioncall functionName="HDC"/>
    <functioncall functionName="HGLRC"/>
    <functioncall functionName="PFD_DOUBLEBUFFER"/>
    <functioncall functionName="PFD_MAIN_PLANE"/>
    <functioncall functionName="PFD_TYPE_RGBA"/>
    <functioncall functionName="PIXELFORMATDESCRIPTOR"/>
    <functioncall functionName="SUCCEEDED"/>
    <functioncall functionName="SetPixelFormat"/>
    <functioncall functionName="SwapBuffers"/>
    <functioncall functionName="attribs"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="const"/>
    <functioncall functionName="dwm_enabled"/>
    <functioncall functionName="false"/>
    <functioncall functionName="get_singleton"/>
    <functioncall functionName="get_video_mode"/>
    <functioncall functionName="hDC"/>
    <functioncall functionName="hRC"/>
    <functioncall functionName="hWnd"/>
    <functioncall functionName="height"/>
    <functioncall functionName="hwnd"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="is_layered_allowed"/>
    <functioncall functionName="is_vsync_via_compositor_enabled"/>
    <functioncall functionName="is_window_fullscreen"/>
    <functioncall functionName="new_hRC"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="opengl_3_context"/>
    <functioncall functionName="p_opengl_3_context"/>
    <functioncall functionName="p_use"/>
    <functioncall functionName="pfd"/>
    <functioncall functionName="pixel_format"/>
    <functioncall functionName="ret"/>
    <functioncall functionName="set_use_vsync"/>
    <functioncall functionName="should_vsync_via_compositor"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="swap_interval"/>
    <functioncall functionName="true"/>
    <functioncall functionName="use_vsync"/>
    <functioncall functionName="void"/>
    <functioncall functionName="vsync_via_compositor"/>
    <functioncall functionName="wglCreateContext"/>
    <functioncall functionName="wglCreateContextAttribsARB"/>
    <functioncall functionName="wglDeleteContext"/>
    <functioncall functionName="wglGetProcAddress"/>
    <functioncall functionName="wglGetSwapIntervalEXT"/>
    <functioncall functionName="wglMakeCurrent"/>
    <functioncall functionName="wglSwapIntervalEXT"/>
    <functioncall functionName="width"/>
  </FileInfo>
</analyzerinfo>
