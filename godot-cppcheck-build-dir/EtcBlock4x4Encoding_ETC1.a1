<?xml version="1.0"?>
<analyzerinfo checksum="985495790">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Block4x4Encoding_ETC1::m_pencodingbitsRGB8&apos; is not initialized in the constructor." verbose="Member variable &apos;Block4x4Encoding_ETC1::m_pencodingbitsRGB8&apos; is not initialized in the constructor." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="74" column="25"/>
            <symbol>Block4x4Encoding_ETC1::m_pencodingbitsRGB8</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_frgbaColor1&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_frgbaColor1&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="79" column="3"/>
            <symbol>m_frgbaColor1</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="44" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator+</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="54" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator+</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="64" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator-</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="74" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator-</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator*&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator*&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="84" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator*</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::ScaleRGB&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::ScaleRGB&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="95" column="25"/>
            <symbol>Etc::ColorFloatRGBA::ScaleRGB</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::ClampRGB&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::ClampRGB&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="269" column="25"/>
            <symbol>Etc::ColorFloatRGBA::ClampRGB</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::ClampRGBA&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::ClampRGBA&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="282" column="25"/>
            <symbol>Etc::ColorFloatRGBA::ClampRGBA</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4Encoding::GetMode&apos; can be const." verbose="The member function &apos;Etc::Block4x4Encoding::GetMode&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="100" column="15"/>
            <symbol>Etc::Block4x4Encoding::GetMode</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4Encoding::IsDone&apos; can be const." verbose="The member function &apos;Etc::Block4x4Encoding::IsDone&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="105" column="15"/>
            <symbol>Etc::Block4x4Encoding::IsDone</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Etc::Block4x4Encoding_ETC1::CalcGrayDistance2&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Etc::Block4x4Encoding_ETC1::CalcGrayDistance2&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="138" column="16"/>
            <symbol>Etc::Block4x4Encoding_ETC1::CalcGrayDistance2</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetSourceWidth&apos; can be const." verbose="The member function &apos;Etc::Image::GetSourceWidth&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="105" column="23"/>
            <symbol>Etc::Image::GetSourceWidth</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetSourceHeight&apos; can be const." verbose="The member function &apos;Etc::Image::GetSourceHeight&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="110" column="23"/>
            <symbol>Etc::Image::GetSourceHeight</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetExtendedWidth&apos; can be const." verbose="The member function &apos;Etc::Image::GetExtendedWidth&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="115" column="23"/>
            <symbol>Etc::Image::GetExtendedWidth</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetExtendedHeight&apos; can be const." verbose="The member function &apos;Etc::Image::GetExtendedHeight&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="120" column="23"/>
            <symbol>Etc::Image::GetExtendedHeight</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetNumberOfBlocks&apos; can be const." verbose="The member function &apos;Etc::Image::GetNumberOfBlocks&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="125" column="23"/>
            <symbol>Etc::Image::GetNumberOfBlocks</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetEncodingBitsBytes&apos; can be const." verbose="The member function &apos;Etc::Image::GetEncodingBitsBytes&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="140" column="23"/>
            <symbol>Etc::Image::GetEncodingBitsBytes</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetEncodingTimeMs&apos; can be const." verbose="The member function &apos;Etc::Image::GetEncodingTimeMs&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="145" column="14"/>
            <symbol>Etc::Image::GetEncodingTimeMs</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetFormat&apos; can be const." verbose="The member function &apos;Etc::Image::GetFormat&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="162" column="17"/>
            <symbol>Etc::Image::GetFormat</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetErrorMetric&apos; can be const." verbose="The member function &apos;Etc::Image::GetErrorMetric&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="174" column="22"/>
            <symbol>Etc::Image::GetErrorMetric</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4::GetSourceH&apos; can be const." verbose="The member function &apos;Etc::Block4x4::GetSourceH&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4.h" line="75" column="23"/>
            <symbol>Etc::Block4x4::GetSourceH</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4::GetSourceV&apos; can be const." verbose="The member function &apos;Etc::Block4x4::GetSourceV&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4.h" line="80" column="23"/>
            <symbol>Etc::Block4x4::GetSourceV</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4::GetErrorMetric&apos; can be const." verbose="The member function &apos;Etc::Block4x4::GetErrorMetric&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4.h" line="122" column="22"/>
            <symbol>Etc::Block4x4::GetErrorMetric</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4::GetSourceAlphaMix&apos; can be const." verbose="The member function &apos;Etc::Block4x4::GetSourceAlphaMix&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4.h" line="134" column="25"/>
            <symbol>Etc::Block4x4::GetSourceAlphaMix</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4::HasBorderPixels&apos; can be const." verbose="The member function &apos;Etc::Block4x4::HasBorderPixels&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4.h" line="144" column="15"/>
            <symbol>Etc::Block4x4::HasBorderPixels</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Block4x4::HasPunchThroughPixels&apos; can be const." verbose="The member function &apos;Etc::Block4x4::HasPunchThroughPixels&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4.h" line="149" column="15"/>
            <symbol>Etc::Block4x4::HasPunchThroughPixels</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;InitFromSource&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;InitFromSource&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="35" column="16" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="58" column="16" info="Virtual function in base class"/>
            <symbol>InitFromSource</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;InitFromEncodingBits&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;InitFromEncodingBits&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="41" column="16" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="63" column="16" info="Virtual function in base class"/>
            <symbol>InitFromEncodingBits</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;PerformIteration&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;PerformIteration&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="47" column="16" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="71" column="16" info="Virtual function in base class"/>
            <symbol>PerformIteration</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;GetFlip&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;GetFlip&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="49" column="23" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="94" column="16" info="Virtual function in base class"/>
            <symbol>GetFlip</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;IsDifferential&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;IsDifferential&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="54" column="23" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="96" column="16" info="Virtual function in base class"/>
            <symbol>IsDifferential</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;SetEncodingBits&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;SetEncodingBits&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="59" column="16" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="92" column="16" info="Virtual function in base class"/>
            <symbol>SetEncodingBits</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;HasSeverelyBentDifferentialColors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;HasSeverelyBentDifferentialColors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="88" column="15" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding.h" line="98" column="16" info="Virtual function in base class"/>
            <symbol>HasSeverelyBentDifferentialColors</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="379" column="7" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="526" column="7" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1097" column="8" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1108" column="9" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1128" column="10" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1139" column="11" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1149" column="10" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;DEBUG_PRINT&apos; is always false" verbose="Condition &apos;DEBUG_PRINT&apos; is always false" cwe="570">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1162" column="8" info="Condition &apos;DEBUG_PRINT&apos; is always false"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="127" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="147" column="25"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;a_fLinear&apos; can be declared with const" verbose="Parameter &apos;a_fLinear&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColor.h" line="39" column="34"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;a_rfrgba&apos; can be declared with const" verbose="Parameter &apos;a_rfrgba&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="44" column="51"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;a_rfrgba&apos; can be declared with const" verbose="Parameter &apos;a_rfrgba&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="74" column="51"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;r_frgbaPixel&apos; can be declared with const" verbose="Parameter &apos;r_frgbaPixel&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="138" column="50"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;r_frgbaTarget&apos; can be declared with const" verbose="Parameter &apos;r_frgbaTarget&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h" line="139" column="27"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;trys&apos; is assigned a value that is never used." verbose="Variable &apos;trys&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="571" column="24"/>
            <symbol>trys</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;trys&apos; is assigned a value that is never used." verbose="Variable &apos;trys&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="833" column="22"/>
            <symbol>trys</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="243" col="19" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="243" col="19" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="255" col="19" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="255" col="19" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="317" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="317" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="317" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:125:8" call-funcname="TryIndividual" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="324" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="330" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="330" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="330" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:125:8" call-funcname="TryIndividual" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="336" col="16" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1003" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1004" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1005" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1006" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1019" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1020" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1021" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1022" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1051" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="4" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1052" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1053" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:121:8" call-funcname="TryDifferential" call-argnr="3" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1054" col="18" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:134:8" call-funcname="CalculateHalfOfTheSelectors" call-argnr="1" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1067" col="31" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:134:8" call-funcname="CalculateHalfOfTheSelectors" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1067" col="31" call-argexpr="s_auiTopPixelMapping" call-argvaluetype="7" call-argvalue="32"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:134:8" call-funcname="CalculateHalfOfTheSelectors" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1068" col="31" call-argexpr="s_auiBottomPixelMapping" call-argvaluetype="7" call-argvalue="32"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:134:8" call-funcname="CalculateHalfOfTheSelectors" call-argnr="1" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1072" col="31" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:134:8" call-funcname="CalculateHalfOfTheSelectors" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1072" col="31" call-argexpr="s_auiLeftPixelMapping" call-argvaluetype="7" call-argvalue="32"/><function-call call-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:134:8" call-funcname="CalculateHalfOfTheSelectors" call-argnr="2" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="1073" col="31" call-argexpr="s_auiRightPixelMapping" call-argvaluetype="7" call-argvalue="32"/>  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:123:8" my-argnr="1" my-argname="a_phalf" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="695" col="3" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.h:126:8" my-argnr="1" my-argname="a_phalf" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcBlock4x4Encoding_ETC1.cpp" line="888" col="3" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="InitFromSource" lineNumber="113"/>
    <functiondecl functionName="InitFromEncodingBits" lineNumber="138"/>
    <functiondecl functionName="InitFromEncodingBits_Selectors" lineNumber="207"/>
    <functiondecl functionName="PerformIteration" lineNumber="232"/>
    <functiondecl functionName="PerformFirstIteration" lineNumber="311"/>
    <functiondecl functionName="CalculateMostLikelyFlip" lineNumber="350"/>
    <functiondecl functionName="CalculateSourceAverages" lineNumber="394"/>
    <functiondecl functionName="TryDifferential" lineNumber="544"/>
    <functiondecl functionName="TryDifferentialHalf" lineNumber="692"/>
    <functiondecl functionName="TryIndividual" lineNumber="807"/>
    <functiondecl functionName="TryIndividualHalf" lineNumber="885"/>
    <functiondecl functionName="TryDegenerates1" lineNumber="1000"/>
    <functiondecl functionName="TryDegenerates2" lineNumber="1016"/>
    <functiondecl functionName="TryDegenerates3" lineNumber="1032"/>
    <functiondecl functionName="TryDegenerates4" lineNumber="1048"/>
    <functiondecl functionName="CalculateSelectors" lineNumber="1063"/>
    <functiondecl functionName="CalculateHalfOfTheSelectors" lineNumber="1083"/>
    <functiondecl functionName="SetEncodingBits" lineNumber="1185"/>
    <functiondecl functionName="SetEncodingBits_Selectors" lineNumber="1239"/>
    <functiondecl functionName="Decode" lineNumber="1259"/>
    <functioncall functionName="ALPHA"/>
    <functioncall functionName="AddToEncodingStatus"/>
    <functioncall functionName="BYTES_PER_BLOCK"/>
    <functioncall functionName="Block4x4"/>
    <functioncall functionName="Block4x4Encoding"/>
    <functioncall functionName="Block4x4EncodingBits_RGB8"/>
    <functioncall functionName="Block4x4Encoding_ETC1"/>
    <functioncall functionName="CW_RANGES"/>
    <functioncall functionName="CalcBlockError"/>
    <functioncall functionName="CalcGrayDistance2"/>
    <functioncall functionName="CalcPixelError"/>
    <functioncall functionName="CalculateHalfOfTheSelectors"/>
    <functioncall functionName="CalculateMostLikelyFlip"/>
    <functioncall functionName="CalculateSourceAverages"/>
    <functioncall functionName="ClampRGB"/>
    <functioncall functionName="ColorFloatRGBA"/>
    <functioncall functionName="ConvertFromRGB4"/>
    <functioncall functionName="ConvertFromRGB5"/>
    <functioncall functionName="DEBUG_PRINT"/>
    <functioncall functionName="Decode"/>
    <functioncall functionName="DifferentialTrys"/>
    <functioncall functionName="ERROR_METRICS"/>
    <functioncall functionName="ETC1"/>
    <functioncall functionName="EncodingStatus"/>
    <functioncall functionName="FLT_MAX"/>
    <functioncall functionName="FORMATS"/>
    <functioncall functionName="GetDecodedAlphas"/>
    <functioncall functionName="GetDecodedColors"/>
    <functioncall functionName="GetError"/>
    <functioncall functionName="GetErrorMetric"/>
    <functioncall functionName="GetFlip"/>
    <functioncall functionName="GetImageSource"/>
    <functioncall functionName="GetMode"/>
    <functioncall functionName="GetSourceAlphaMix"/>
    <functioncall functionName="Image"/>
    <functioncall functionName="IndividualTrys"/>
    <functioncall functionName="Init"/>
    <functioncall functionName="InitFromEncodingBits_Selectors"/>
    <functioncall functionName="IntBlue"/>
    <functioncall functionName="IntGreen"/>
    <functioncall functionName="IntRed"/>
    <functioncall functionName="IsDifferential"/>
    <functioncall functionName="LinearToLog"/>
    <functioncall functionName="LogToLinear"/>
    <functioncall functionName="MAX_TRYS"/>
    <functioncall functionName="MODES"/>
    <functioncall functionName="MODE_ETC1"/>
    <functioncall functionName="MODE_H"/>
    <functioncall functionName="MODE_PLANAR"/>
    <functioncall functionName="MODE_R11"/>
    <functioncall functionName="MODE_RG11"/>
    <functioncall functionName="MODE_T"/>
    <functioncall functionName="MODE_UNKNOWN"/>
    <functioncall functionName="NORMALXYZ"/>
    <functioncall functionName="NUMERIC"/>
    <functioncall functionName="ONE_PLUS_ALPHA"/>
    <functioncall functionName="OPAQUE"/>
    <functioncall functionName="PIXELS"/>
    <functioncall functionName="PerformFirstIteration"/>
    <functioncall functionName="PerformIteration"/>
    <functioncall functionName="R11"/>
    <functioncall functionName="REC709"/>
    <functioncall functionName="RG11"/>
    <functioncall functionName="RGB8"/>
    <functioncall functionName="RGB8A1"/>
    <functioncall functionName="RGBA"/>
    <functioncall functionName="RGBA8"/>
    <functioncall functionName="RGBX"/>
    <functioncall functionName="RoundRGB"/>
    <functioncall functionName="SELECTORS"/>
    <functioncall functionName="SIGNED_R11"/>
    <functioncall functionName="SIGNED_RG11"/>
    <functioncall functionName="SRGB8"/>
    <functioncall functionName="SRGB8A1"/>
    <functioncall functionName="SRGBA8"/>
    <functioncall functionName="ScaleRGB"/>
    <functioncall functionName="SetDoneIfPerfect"/>
    <functioncall functionName="SetEncodingBits"/>
    <functioncall functionName="SetEncodingBits_Selectors"/>
    <functioncall functionName="TRANSLUCENT"/>
    <functioncall functionName="TRANSPARENT"/>
    <functioncall functionName="TryDegenerates1"/>
    <functioncall functionName="TryDegenerates2"/>
    <functioncall functionName="TryDegenerates3"/>
    <functioncall functionName="TryDegenerates4"/>
    <functioncall functionName="TryDifferential"/>
    <functioncall functionName="TryDifferentialHalf"/>
    <functioncall functionName="TryIndividual"/>
    <functioncall functionName="TryIndividualHalf"/>
    <functioncall functionName="UNKNOWN"/>
    <functioncall functionName="a_boolFlip"/>
    <functioncall functionName="a_encStatus"/>
    <functioncall functionName="a_errormetric"/>
    <functioncall functionName="a_f"/>
    <functioncall functionName="a_fA"/>
    <functioncall functionName="a_fB"/>
    <functioncall functionName="a_fEffort"/>
    <functioncall functionName="a_fG"/>
    <functioncall functionName="a_fLinear"/>
    <functioncall functionName="a_fR"/>
    <functioncall functionName="a_format"/>
    <functioncall functionName="a_i"/>
    <functioncall functionName="a_iDistance"/>
    <functioncall functionName="a_iGrayOffset1"/>
    <functioncall functionName="a_iGrayOffset2"/>
    <functioncall functionName="a_pafrgbaSource"/>
    <functioncall functionName="a_paucEncodingBits"/>
    <functioncall functionName="a_pblockParent"/>
    <functioncall functionName="a_ucB4"/>
    <functioncall functionName="a_ucG4"/>
    <functioncall functionName="a_ucR4"/>
    <functioncall functionName="a_uiH"/>
    <functioncall functionName="a_uiRadius"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="blue1"/>
    <functioncall functionName="blue2"/>
    <functioncall functionName="break"/>
    <functioncall functionName="char"/>
    <functioncall functionName="cw1"/>
    <functioncall functionName="cw2"/>
    <functioncall functionName="dblue2"/>
    <functioncall functionName="default"/>
    <functioncall functionName="dgreen2"/>
    <functioncall functionName="diff"/>
    <functioncall functionName="dred2"/>
    <functioncall functionName="errorMetric"/>
    <functioncall functionName="fA"/>
    <functioncall functionName="fB"/>
    <functioncall functionName="fBottomGrayErrorSum"/>
    <functioncall functionName="fCWError"/>
    <functioncall functionName="fDelta"/>
    <functioncall functionName="fDeltaGray"/>
    <functioncall functionName="fDeltaRGB"/>
    <functioncall functionName="fDeltaRGB1"/>
    <functioncall functionName="fDeltaRGB2"/>
    <functioncall functionName="fError"/>
    <functioncall functionName="fG"/>
    <functioncall functionName="fPixelError"/>
    <functioncall functionName="fR"/>
    <functioncall functionName="fRightGrayErrorSum"/>
    <functioncall functionName="fWeightSumBottom"/>
    <functioncall functionName="fWeightSumLL"/>
    <functioncall functionName="fWeightSumLR"/>
    <functioncall functionName="fWeightSumLeft"/>
    <functioncall functionName="fWeightSumRight"/>
    <functioncall functionName="fWeightSumTop"/>
    <functioncall functionName="fWeightSumUR"/>
    <functioncall functionName="false"/>
    <functioncall functionName="flip"/>
    <functioncall functionName="float"/>
    <functioncall functionName="for"/>
    <functioncall functionName="frgbaColor1"/>
    <functioncall functionName="frgbaColor2"/>
    <functioncall functionName="frgbaDecodedPixel"/>
    <functioncall functionName="frgbaSumLL"/>
    <functioncall functionName="frgbaSumLR"/>
    <functioncall functionName="frgbaSumUR"/>
    <functioncall functionName="green1"/>
    <functioncall functionName="green2"/>
    <functioncall functionName="iB2"/>
    <functioncall functionName="iBlue"/>
    <functioncall functionName="iBlue1"/>
    <functioncall functionName="iDBlue2"/>
    <functioncall functionName="iDGreen2"/>
    <functioncall functionName="iDRed2"/>
    <functioncall functionName="iG2"/>
    <functioncall functionName="iGreen"/>
    <functioncall functionName="iGreen1"/>
    <functioncall functionName="iPixel"/>
    <functioncall functionName="iR2"/>
    <functioncall functionName="iRed"/>
    <functioncall functionName="iRed1"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isnan"/>
    <functioncall functionName="m_boolDiff"/>
    <functioncall functionName="m_boolDone"/>
    <functioncall functionName="m_boolFlip"/>
    <functioncall functionName="m_boolMostLikelyFlip"/>
    <functioncall functionName="m_boolSeverelyBentColors"/>
    <functioncall functionName="m_fError"/>
    <functioncall functionName="m_fError1"/>
    <functioncall functionName="m_fError2"/>
    <functioncall functionName="m_frgbaColor1"/>
    <functioncall functionName="m_frgbaColor2"/>
    <functioncall functionName="m_frgbaSourceAverageBottom"/>
    <functioncall functionName="m_frgbaSourceAverageLeft"/>
    <functioncall functionName="m_frgbaSourceAverageRight"/>
    <functioncall functionName="m_frgbaSourceAverageTop"/>
    <functioncall functionName="m_half1"/>
    <functioncall functionName="m_half2"/>
    <functioncall functionName="m_iBlue"/>
    <functioncall functionName="m_iGreen"/>
    <functioncall functionName="m_iRed"/>
    <functioncall functionName="m_ptryBest"/>
    <functioncall functionName="m_uiCW"/>
    <functioncall functionName="m_uiCW1"/>
    <functioncall functionName="m_uiCW2"/>
    <functioncall functionName="m_uiEncodingIterations"/>
    <functioncall functionName="m_uiRadius"/>
    <functioncall functionName="m_uiTrys"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="pauiPixelMapping1"/>
    <functioncall functionName="pauiPixelMapping2"/>
    <functioncall functionName="powf"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="private:"/>
    <functioncall functionName="ptry"/>
    <functioncall functionName="ptry1"/>
    <functioncall functionName="ptry2"/>
    <functioncall functionName="red1"/>
    <functioncall functionName="red2"/>
    <functioncall functionName="return"/>
    <functioncall functionName="roundf"/>
    <functioncall functionName="s_auiBottomPixelMapping"/>
    <functioncall functionName="s_auiLeftPixelMapping"/>
    <functioncall functionName="s_auiPixelOrderFlip0"/>
    <functioncall functionName="s_auiPixelOrderFlip1"/>
    <functioncall functionName="s_auiRightPixelMapping"/>
    <functioncall functionName="s_auiTopPixelMapping"/>
    <functioncall functionName="selectors"/>
    <functioncall functionName="short"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="true"/>
    <functioncall functionName="trys"/>
    <functioncall functionName="uiB4"/>
    <functioncall functionName="uiByte"/>
    <functioncall functionName="uiByteLSB"/>
    <functioncall functionName="uiByteMSB"/>
    <functioncall functionName="uiCW"/>
    <functioncall functionName="uiG4"/>
    <functioncall functionName="uiPixel"/>
    <functioncall functionName="uiPixel1"/>
    <functioncall functionName="uiPixel2"/>
    <functioncall functionName="uiPixelOrder"/>
    <functioncall functionName="uiR4"/>
    <functioncall functionName="uiSelector"/>
    <functioncall functionName="uiSelector1"/>
    <functioncall functionName="uiSelector2"/>
    <functioncall functionName="uiSelectorLSB"/>
  </FileInfo>
</analyzerinfo>
