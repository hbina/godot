<?xml version="1.0"?>
<analyzerinfo checksum="4227393035">
        <error id="redundantAssignment" severity="style" msg="Variable &apos;CAb[0]&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;CAb[0]&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/fixed/x86/burg_modified_FIX_sse.c" line="124" column="14" info="CAb[0] is overwritten"/>
            <location file="/home/hbina/git/godot/thirdparty/opus/silk/fixed/x86/burg_modified_FIX_sse.c" line="95" column="14" info="CAb[0] is assigned"/>
            <symbol>CAb[0]</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="silk_burg_modified_sse4_1" lineNumber="50"/>
    <functioncall functionName="ATMP_3210"/>
    <functioncall functionName="Atmp1"/>
    <functioncall functionName="Atmp_QA"/>
    <functioncall functionName="C0"/>
    <functioncall functionName="CONST1"/>
    <functioncall functionName="C_first_row"/>
    <functioncall functionName="C_last_row"/>
    <functioncall functionName="D"/>
    <functioncall functionName="FIND_LPC_COND_FAC"/>
    <functioncall functionName="FIRST_3210"/>
    <functioncall functionName="LAST_3210"/>
    <functioncall functionName="MAC16_16"/>
    <functioncall functionName="OP_CVTEPI16_EPI32_M64"/>
    <functioncall functionName="PTR_3210"/>
    <functioncall functionName="SILK_FIX_CONST"/>
    <functioncall functionName="SILK_MAX_ORDER_LPC"/>
    <functioncall functionName="SUBFR_3210"/>
    <functioncall functionName="T1_3210"/>
    <functioncall functionName="T2_3210"/>
    <functioncall functionName="TMP1_3210"/>
    <functioncall functionName="TMP2_3210"/>
    <functioncall functionName="X1_3210"/>
    <functioncall functionName="X2_3210"/>
    <functioncall functionName="_MM_SHUFFLE"/>
    <functioncall functionName="_mm_add_epi32"/>
    <functioncall functionName="_mm_blend_epi16"/>
    <functioncall functionName="_mm_cvtsi128_si32"/>
    <functioncall functionName="_mm_loadu_si128"/>
    <functioncall functionName="_mm_mul_epi32"/>
    <functioncall functionName="_mm_mullo_epi32"/>
    <functioncall functionName="_mm_set1_epi32"/>
    <functioncall functionName="_mm_setzero_si128"/>
    <functioncall functionName="_mm_shuffle_epi32"/>
    <functioncall functionName="_mm_shufflelo_epi16"/>
    <functioncall functionName="_mm_slli_epi32"/>
    <functioncall functionName="_mm_slli_epi64"/>
    <functioncall functionName="_mm_srai_epi32"/>
    <functioncall functionName="_mm_srli_epi64"/>
    <functioncall functionName="_mm_storeu_si128"/>
    <functioncall functionName="_mm_unpackhi_epi64"/>
    <functioncall functionName="arch"/>
    <functioncall functionName="break"/>
    <functioncall functionName="celt_pitch_xcorr"/>
    <functioncall functionName="d"/>
    <functioncall functionName="for"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="invGain_Q30"/>
    <functioncall functionName="k"/>
    <functioncall functionName="lz"/>
    <functioncall functionName="minInvGain_Q30"/>
    <functioncall functionName="n"/>
    <functioncall functionName="nrg"/>
    <functioncall functionName="num"/>
    <functioncall functionName="opus_int32"/>
    <functioncall functionName="rc_Q31"/>
    <functioncall functionName="reached_max_gain"/>
    <functioncall functionName="rshifts"/>
    <functioncall functionName="rshifts_extra"/>
    <functioncall functionName="silk_ADD32"/>
    <functioncall functionName="silk_ADD_LSHIFT32"/>
    <functioncall functionName="silk_CLZ32"/>
    <functioncall functionName="silk_DIV32"/>
    <functioncall functionName="silk_DIV32_varQ"/>
    <functioncall functionName="silk_LSHIFT"/>
    <functioncall functionName="silk_LSHIFT32"/>
    <functioncall functionName="silk_MLA"/>
    <functioncall functionName="silk_RSHIFT32"/>
    <functioncall functionName="silk_RSHIFT64"/>
    <functioncall functionName="silk_RSHIFT_ROUND"/>
    <functioncall functionName="silk_SMLAWB"/>
    <functioncall functionName="silk_SMLAWW"/>
    <functioncall functionName="silk_SMMUL"/>
    <functioncall functionName="silk_SQRT_APPROX"/>
    <functioncall functionName="silk_abs"/>
    <functioncall functionName="silk_assert"/>
    <functioncall functionName="silk_inner_prod16_aligned_64"/>
    <functioncall functionName="silk_inner_prod_aligned"/>
    <functioncall functionName="silk_int32_MAX"/>
    <functioncall functionName="silk_int32_MIN"/>
    <functioncall functionName="silk_max"/>
    <functioncall functionName="silk_memcpy"/>
    <functioncall functionName="silk_memset"/>
    <functioncall functionName="silk_min"/>
    <functioncall functionName="silk_sum_sqr_shift"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="tmp1"/>
    <functioncall functionName="tmp2"/>
    <functioncall functionName="x"/>
    <functioncall functionName="x1"/>
    <functioncall functionName="x2"/>
    <functioncall functionName="x_ptr"/>
    <functioncall functionName="xcorr"/>
    <functioncall functionName="xmm_tmp1"/>
    <functioncall functionName="xmm_tmp2"/>
    <functioncall functionName="xmm_x_ptr_n_k_x2x0"/>
    <functioncall functionName="xmm_x_ptr_n_k_x3x1"/>
    <functioncall functionName="xmm_x_ptr_sub_x2x0"/>
    <functioncall functionName="xmm_x_ptr_sub_x3x1"/>
  </FileInfo>
</analyzerinfo>
