<?xml version="1.0"?>
<analyzerinfo checksum="3142916903">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;btSolverAnalyticsData::m_numBodies&apos; is not initialized in the constructor." verbose="Member variable &apos;btSolverAnalyticsData::m_numBodies&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h" line="34" column="2"/>
            <symbol>btSolverAnalyticsData::m_numBodies</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;btSolverAnalyticsData::m_numContactManifolds&apos; is not initialized in the constructor." verbose="Member variable &apos;btSolverAnalyticsData::m_numContactManifolds&apos; is not initialized in the constructor." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h" line="34" column="2"/>
            <symbol>btSolverAnalyticsData::m_numContactManifolds</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;applyFriction&apos; is always true" verbose="Condition &apos;applyFriction&apos; is always true" cwe="571">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1612" column="9" info="Condition &apos;applyFriction&apos; is always true"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1611" column="26" info="Assignment &apos;applyFriction=true&apos;, assigned value is 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1003" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1004" column="12"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solverBodyA&apos; can be reduced." verbose="The scope of the variable &apos;solverBodyA&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="520" column="16"/>
            <symbol>solverBodyA</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solverBodyB&apos; can be reduced." verbose="The scope of the variable &apos;solverBodyB&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="521" column="16"/>
            <symbol>solverBodyB</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solverBodyA&apos; can be reduced." verbose="The scope of the variable &apos;solverBodyA&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="629" column="16"/>
            <symbol>solverBodyA</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solverBodyB&apos; can be reduced." verbose="The scope of the variable &apos;solverBodyB&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="630" column="16"/>
            <symbol>solverBodyB</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;manifold&apos; can be reduced." verbose="The scope of the variable &apos;manifold&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1152" column="24"/>
            <symbol>manifold</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solveManifold&apos; can be reduced." verbose="The scope of the variable &apos;solveManifold&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1615" column="27"/>
            <symbol>solveManifold</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;solveManifold&apos; can be reduced." verbose="The scope of the variable &apos;solveManifold&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1629" column="27"/>
            <symbol>solveManifold</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iteration&apos; can be reduced." verbose="The scope of the variable &apos;iteration&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1700" column="6"/>
            <symbol>iteration</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;manifold&apos; is assigned a value that is never used." verbose="Variable &apos;manifold&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="1152" column="33"/>
            <symbol>manifold</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;resultUpperLess&apos; is assigned a value that is never used." verbose="Variable &apos;resultUpperLess&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="221" column="18"/>
            <symbol>resultUpperLess</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;resultUpperLess&apos; is assigned a value that is never used." verbose="Variable &apos;resultUpperLess&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="335" column="18"/>
            <symbol>resultUpperLess</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;rb0?rb0-&gt;getInvInertiaTensorWorld()*torqueAxis0*rb0-&gt;getAngularFactor():btVector3(0,0,0)&apos; is redundant or there is possible null pointer dereference: rb0." verbose="Either the condition &apos;rb0?rb0-&gt;getInvInertiaTensorWorld()*torqueAxis0*rb0-&gt;getAngularFactor():btVector3(0,0,0)&apos; is redundant or there is possible null pointer dereference: rb0." cwe="476" inconclusive="true">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="855" column="21" info="Null pointer dereference"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="808" column="26" info="Assignment &apos;rb0=bodyA-&gt;m_originalBody&apos;, assigned value is 0"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="849" column="45" info="Assuming that condition &apos;rb0?rb0-&gt;getInvInertiaTensorWorld()*torqueAxis0*rb0-&gt;getAngularFactor():btVector3(0,0,0)&apos; is not redundant"/>
            <symbol>rb0</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;rb1?rb1-&gt;getInvInertiaTensorWorld()*-torqueAxis1*rb1-&gt;getAngularFactor():btVector3(0,0,0)&apos; is redundant or there is possible null pointer dereference: rb1." verbose="Either the condition &apos;rb1?rb1-&gt;getInvInertiaTensorWorld()*-torqueAxis1*rb1-&gt;getAngularFactor():btVector3(0,0,0)&apos; is redundant or there is possible null pointer dereference: rb1." cwe="476" inconclusive="true">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="856" column="21" info="Null pointer dereference"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="809" column="26" info="Assignment &apos;rb1=bodyB-&gt;m_originalBody&apos;, assigned value is 0"/>
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp" line="851" column="45" info="Assuming that condition &apos;rb1?rb1-&gt;getInvInertiaTensorWorld()*-torqueAxis1*rb1-&gt;getAngularFactor():btVector3(0,0,0)&apos; is not redundant"/>
            <symbol>rb1</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="btSimdDot3" lineNumber="107"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_sse2" lineNumber="150"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_sse4_1_fma3" lineNumber="181"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_sse2" lineNumber="208"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_sse4_1_fma3" lineNumber="236"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="btSimdDot3" lineNumber="107"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_sse2" lineNumber="150"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_sse4_1_fma3" lineNumber="181"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_sse2" lineNumber="208"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_sse4_1_fma3" lineNumber="236"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functiondecl functionName="gResolveSingleConstraintRowGeneric_scalar_reference" lineNumber="47"/>
    <functiondecl functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference" lineNumber="79"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_scalar_reference" lineNumber="284"/>
    <functiondecl functionName="gResolveSplitPenetrationImpulse_sse2" lineNumber="316"/>
    <functioncall functionName="ATTRIBUTE_ALIGNED16"/>
    <functioncall functionName="BT_ENABLE_GYROSCOPIC_FORCE_EXPLICIT"/>
    <functioncall functionName="BT_ENABLE_GYROSCOPIC_FORCE_IMPLICIT_BODY"/>
    <functioncall functionName="BT_ENABLE_GYROSCOPIC_FORCE_IMPLICIT_WORLD"/>
    <functioncall functionName="BT_PROFILE"/>
    <functioncall functionName="CF_ANISOTROPIC_FRICTION"/>
    <functioncall functionName="CF_ANISOTROPIC_ROLLING_FRICTION"/>
    <functioncall functionName="CO_FEATHERSTONE_LINK"/>
    <functioncall functionName="INVALID_SOLVER_BODY_ID"/>
    <functioncall functionName="SIMD_EPSILON"/>
    <functioncall functionName="SIMD_INFINITY"/>
    <functioncall functionName="_MM_SHUFFLE"/>
    <functioncall functionName="_mm_add_ps"/>
    <functioncall functionName="_mm_and_ps"/>
    <functioncall functionName="_mm_andnot_ps"/>
    <functioncall functionName="_mm_blendv_ps"/>
    <functioncall functionName="_mm_cmpgt_ps"/>
    <functioncall functionName="_mm_cmplt_ps"/>
    <functioncall functionName="_mm_dp_ps"/>
    <functioncall functionName="_mm_fmadd_ps"/>
    <functioncall functionName="_mm_fnmadd_ps"/>
    <functioncall functionName="_mm_mul_ps"/>
    <functioncall functionName="_mm_or_ps"/>
    <functioncall functionName="_mm_set1_ps"/>
    <functioncall functionName="_mm_set_ps1"/>
    <functioncall functionName="_mm_shuffle_ps"/>
    <functioncall functionName="_mm_sub_ps"/>
    <functioncall functionName="addFrictionConstraint"/>
    <functioncall functionName="addTorsionalFrictionConstraint"/>
    <functioncall functionName="applyAnisotropicFriction"/>
    <functioncall functionName="applyFriction"/>
    <functioncall functionName="axis0"/>
    <functioncall functionName="axis1"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bodies"/>
    <functioncall functionName="body"/>
    <functioncall functionName="body0"/>
    <functioncall functionName="bodyA"/>
    <functioncall functionName="bodyAid"/>
    <functioncall functionName="bodyB"/>
    <functioncall functionName="bodyBid"/>
    <functioncall functionName="bodyId"/>
    <functioncall functionName="break"/>
    <functioncall functionName="btAssert"/>
    <functioncall functionName="btFabs"/>
    <functioncall functionName="btMax"/>
    <functioncall functionName="btPlaneSpace1"/>
    <functioncall functionName="btRand2"/>
    <functioncall functionName="btRandInt2"/>
    <functioncall functionName="btScalar"/>
    <functioncall functionName="btSequentialImpulseConstraintSolver"/>
    <functioncall functionName="btSimdDot3"/>
    <functioncall functionName="btSimdScalar"/>
    <functioncall functionName="btSolverAnalyticsData"/>
    <functioncall functionName="btSolverConstraint"/>
    <functioncall functionName="btSqrt"/>
    <functioncall functionName="btVector3"/>
    <functioncall functionName="buildJacobian"/>
    <functioncall functionName="c"/>
    <functioncall functionName="cfm"/>
    <functioncall functionName="cfmSlip"/>
    <functioncall functionName="class"/>
    <functioncall functionName="colObj0"/>
    <functioncall functionName="colObj1"/>
    <functioncall functionName="collisionObject"/>
    <functioncall functionName="combinedTorsionalFriction"/>
    <functioncall functionName="computeGyroscopicForceExplicit"/>
    <functioncall functionName="computeGyroscopicImpulseImplicit_Body"/>
    <functioncall functionName="computeGyroscopicImpulseImplicit_World"/>
    <functioncall functionName="computeImpulseDenominator"/>
    <functioncall functionName="constraint"/>
    <functioncall functionName="constraints"/>
    <functioncall functionName="contactConstraint"/>
    <functioncall functionName="convertBodies"/>
    <functioncall functionName="convertContact"/>
    <functioncall functionName="convertContacts"/>
    <functioncall functionName="convertJoint"/>
    <functioncall functionName="convertJoints"/>
    <functioncall functionName="cp"/>
    <functioncall functionName="cpAppliedImp"/>
    <functioncall functionName="cross"/>
    <functioncall functionName="currentConstraintRow"/>
    <functioncall functionName="currentRow"/>
    <functioncall functionName="debugDrawer"/>
    <functioncall functionName="deltaImpulse"/>
    <functioncall functionName="deltaVel1Dotn"/>
    <functioncall functionName="deltaVel2Dotn"/>
    <functioncall functionName="denom"/>
    <functioncall functionName="denom1"/>
    <functioncall functionName="desiredVelocity"/>
    <functioncall functionName="dot"/>
    <functioncall functionName="expand"/>
    <functioncall functionName="expandNonInitializing"/>
    <functioncall functionName="externalForceImpulseA"/>
    <functioncall functionName="externalForceImpulseB"/>
    <functioncall functionName="externalTorqueImpulseA"/>
    <functioncall functionName="externalTorqueImpulseB"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fb"/>
    <functioncall functionName="fixedBody"/>
    <functioncall functionName="for"/>
    <functioncall functionName="found"/>
    <functioncall functionName="frictionIndex"/>
    <functioncall functionName="frictionMode"/>
    <functioncall functionName="fsum"/>
    <functioncall functionName="ftorqueAxis1"/>
    <functioncall functionName="fuzzyZero"/>
    <functioncall functionName="gResolveSingleConstraintRowGeneric_scalar_reference"/>
    <functioncall functionName="gResolveSingleConstraintRowGeneric_sse2"/>
    <functioncall functionName="gResolveSingleConstraintRowGeneric_sse4_1_fma3"/>
    <functioncall functionName="gResolveSingleConstraintRowLowerLimit_scalar_reference"/>
    <functioncall functionName="gResolveSingleConstraintRowLowerLimit_sse2"/>
    <functioncall functionName="gResolveSingleConstraintRowLowerLimit_sse4_1_fma3"/>
    <functioncall functionName="gResolveSplitPenetrationImpulse_scalar_reference"/>
    <functioncall functionName="gResolveSplitPenetrationImpulse_sse2"/>
    <functioncall functionName="getAngularFactor"/>
    <functioncall functionName="getAngularVelocity"/>
    <functioncall functionName="getAnisotropicFriction"/>
    <functioncall functionName="getBasis"/>
    <functioncall functionName="getBody0"/>
    <functioncall functionName="getBody1"/>
    <functioncall functionName="getBreakingImpulseThreshold"/>
    <functioncall functionName="getCompanionId"/>
    <functioncall functionName="getContactPoint"/>
    <functioncall functionName="getContactProcessingThreshold"/>
    <functioncall functionName="getCpuFeatures"/>
    <functioncall functionName="getDeltaAngularVelocity"/>
    <functioncall functionName="getDeltaLinearVelocity"/>
    <functioncall functionName="getDistance"/>
    <functioncall functionName="getFlags"/>
    <functioncall functionName="getInfo1"/>
    <functioncall functionName="getInfo2"/>
    <functioncall functionName="getInternalType"/>
    <functioncall functionName="getInvInertiaTensorWorld"/>
    <functioncall functionName="getInvMass"/>
    <functioncall functionName="getJointFeedback"/>
    <functioncall functionName="getLinearFactor"/>
    <functioncall functionName="getLinearVelocity"/>
    <functioncall functionName="getNumContacts"/>
    <functioncall functionName="getOrInitSolverBody"/>
    <functioncall functionName="getOrigin"/>
    <functioncall functionName="getOverrideNumSolverIterations"/>
    <functioncall functionName="getPositionWorldOnA"/>
    <functioncall functionName="getPositionWorldOnB"/>
    <functioncall functionName="getPushVelocity"/>
    <functioncall functionName="getRigidBodyA"/>
    <functioncall functionName="getRigidBodyB"/>
    <functioncall functionName="getTotalForce"/>
    <functioncall functionName="getTotalTorque"/>
    <functioncall functionName="getTurnVelocity"/>
    <functioncall functionName="getVelocityInLocalPoint"/>
    <functioncall functionName="getVelocityInLocalPointNoDelta"/>
    <functioncall functionName="getWorldArrayIndex"/>
    <functioncall functionName="getWorldTransform"/>
    <functioncall functionName="gyroForce"/>
    <functioncall functionName="hasAnisotropicFriction"/>
    <functioncall functionName="i"/>
    <functioncall functionName="iBegin"/>
    <functioncall functionName="if"/>
    <functioncall functionName="impulseMagnitude"/>
    <functioncall functionName="info1"/>
    <functioncall functionName="info2"/>
    <functioncall functionName="infoGlobal"/>
    <functioncall functionName="initSolverBody"/>
    <functioncall functionName="int"/>
    <functioncall functionName="internalApplyImpulse"/>
    <functioncall functionName="internalApplyPushImpulse"/>
    <functioncall functionName="internalGetDeltaAngularVelocity"/>
    <functioncall functionName="internalGetDeltaLinearVelocity"/>
    <functioncall functionName="internalGetInvMass"/>
    <functioncall functionName="internalGetPushVelocity"/>
    <functioncall functionName="internalGetTurnVelocity"/>
    <functioncall functionName="internalSetAppliedImpulse"/>
    <functioncall functionName="internalSetInvMass"/>
    <functioncall functionName="isEnabled"/>
    <functioncall functionName="isKinematicObject"/>
    <functioncall functionName="isMultiBodyType"/>
    <functioncall functionName="isStaticOrKinematic"/>
    <functioncall functionName="isStaticOrKinematicObject"/>
    <functioncall functionName="isZero"/>
    <functioncall functionName="iteration"/>
    <functioncall functionName="j"/>
    <functioncall functionName="lat_rel_vel"/>
    <functioncall functionName="leastSquaresResidual"/>
    <functioncall functionName="length"/>
    <functioncall functionName="length2"/>
    <functioncall functionName="linearComponentA"/>
    <functioncall functionName="linearComponentB"/>
    <functioncall functionName="lowMinApplied"/>
    <functioncall functionName="lowerLimit"/>
    <functioncall functionName="lowerLimit1"/>
    <functioncall functionName="mVec128"/>
    <functioncall functionName="m_angularComponentA"/>
    <functioncall functionName="m_angularComponentB"/>
    <functioncall functionName="m_angularVelocity"/>
    <functioncall functionName="m_appliedImpulse"/>
    <functioncall functionName="m_appliedPushImpulse"/>
    <functioncall functionName="m_cfm"/>
    <functioncall functionName="m_combinedContactDamping1"/>
    <functioncall functionName="m_combinedContactStiffness1"/>
    <functioncall functionName="m_combinedFriction"/>
    <functioncall functionName="m_combinedRestitution"/>
    <functioncall functionName="m_combinedRollingFriction"/>
    <functioncall functionName="m_combinedSpinningFriction"/>
    <functioncall functionName="m_contactCFM"/>
    <functioncall functionName="m_contactERP"/>
    <functioncall functionName="m_contactMotion1"/>
    <functioncall functionName="m_contactMotion2"/>
    <functioncall functionName="m_contactNormal1"/>
    <functioncall functionName="m_contactNormal2"/>
    <functioncall functionName="m_damping"/>
    <functioncall functionName="m_erp"/>
    <functioncall functionName="m_erp2"/>
    <functioncall functionName="m_externalForceImpulse"/>
    <functioncall functionName="m_externalTorqueImpulse"/>
    <functioncall functionName="m_fixedBodyId"/>
    <functioncall functionName="m_friction"/>
    <functioncall functionName="m_frictionCFM"/>
    <functioncall functionName="m_frictionIndex"/>
    <functioncall functionName="m_globalCfm"/>
    <functioncall functionName="m_jacDiagABInv"/>
    <functioncall functionName="m_lateralFrictionDir1"/>
    <functioncall functionName="m_lateralFrictionDir2"/>
    <functioncall functionName="m_leastSquaresResidual"/>
    <functioncall functionName="m_linearSlop"/>
    <functioncall functionName="m_lowerLimit"/>
    <functioncall functionName="m_maxGyroscopicForce"/>
    <functioncall functionName="m_maxOverrideNumSolverIterations"/>
    <functioncall functionName="m_normalWorldOnB"/>
    <functioncall functionName="m_numConstraintRows"/>
    <functioncall functionName="m_numIterations"/>
    <functioncall functionName="m_originalBody"/>
    <functioncall functionName="m_originalContactPoint"/>
    <functioncall functionName="m_overrideNumSolverIterations"/>
    <functioncall functionName="m_relpos1CrossNormal"/>
    <functioncall functionName="m_relpos2CrossNormal"/>
    <functioncall functionName="m_resolveSingleConstraintRowGeneric"/>
    <functioncall functionName="m_resolveSingleConstraintRowLowerLimit"/>
    <functioncall functionName="m_resolveSplitPenetrationImpulse"/>
    <functioncall functionName="m_restitutionVelocityThreshold"/>
    <functioncall functionName="m_rhs"/>
    <functioncall functionName="m_rhsPenetration"/>
    <functioncall functionName="m_solverBodyIdA"/>
    <functioncall functionName="m_solverBodyIdB"/>
    <functioncall functionName="m_solverMode"/>
    <functioncall functionName="m_sor"/>
    <functioncall functionName="m_splitImpulse"/>
    <functioncall functionName="m_splitImpulsePenetrationThreshold"/>
    <functioncall functionName="m_splitImpulseTurnErp"/>
    <functioncall functionName="m_timeStep"/>
    <functioncall functionName="m_upperLimit"/>
    <functioncall functionName="m_warmstartingFactor"/>
    <functioncall functionName="m_worldTransform"/>
    <functioncall functionName="manifold"/>
    <functioncall functionName="manifoldPtr"/>
    <functioncall functionName="mask"/>
    <functioncall functionName="maskLower"/>
    <functioncall functionName="maskUpper"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="n"/>
    <functioncall functionName="normalAxis"/>
    <functioncall functionName="normalAxis1"/>
    <functioncall functionName="normalize"/>
    <functioncall functionName="numBodies"/>
    <functioncall functionName="numConstraintPool"/>
    <functioncall functionName="numConstraints"/>
    <functioncall functionName="numFrictionPool"/>
    <functioncall functionName="numManifolds"/>
    <functioncall functionName="numNonContactPool"/>
    <functioncall functionName="overrideNumSolverIterations"/>
    <functioncall functionName="penetration"/>
    <functioncall functionName="penetrationImpulse"/>
    <functioncall functionName="pos1"/>
    <functioncall functionName="pos2"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="pt"/>
    <functioncall functionName="rb"/>
    <functioncall functionName="rb0"/>
    <functioncall functionName="rb1"/>
    <functioncall functionName="rbA"/>
    <functioncall functionName="rbB"/>
    <functioncall functionName="rel_pos1"/>
    <functioncall functionName="rel_pos2"/>
    <functioncall functionName="rel_vel"/>
    <functioncall functionName="relaxation"/>
    <functioncall functionName="reserve"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="resizeNoInitialize"/>
    <functioncall functionName="resolveSingleConstraintRowGeneric"/>
    <functioncall functionName="resolveSingleConstraintRowLowerLimit"/>
    <functioncall functionName="resolveSplitPenetrationImpulse"/>
    <functioncall functionName="restitutionCurve"/>
    <functioncall functionName="result"/>
    <functioncall functionName="resultLowerLess"/>
    <functioncall functionName="resultUpperLess"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rollingFriction"/>
    <functioncall functionName="rollingFrictionConstraint"/>
    <functioncall functionName="rollingFrictionMagnitude"/>
    <functioncall functionName="rowSolver"/>
    <functioncall functionName="seed"/>
    <functioncall functionName="setAngularVelocity"/>
    <functioncall functionName="setCompanionId"/>
    <functioncall functionName="setEnabled"/>
    <functioncall functionName="setFrictionConstraintImpulse"/>
    <functioncall functionName="setIdentity"/>
    <functioncall functionName="setLinearVelocity"/>
    <functioncall functionName="setValue"/>
    <functioncall functionName="setWorldTransform"/>
    <functioncall functionName="setZero"/>
    <functioncall functionName="setupContactConstraint"/>
    <functioncall functionName="setupFrictionConstraint"/>
    <functioncall functionName="setupSolverFunctions"/>
    <functioncall functionName="setupTorsionalFrictionConstraint"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="solveConstraintObsolete"/>
    <functioncall functionName="solveGroupCacheFriendlyFinish"/>
    <functioncall functionName="solveGroupCacheFriendlyIterations"/>
    <functioncall functionName="solveGroupCacheFriendlySetup"/>
    <functioncall functionName="solveGroupCacheFriendlySplitImpulseIterations"/>
    <functioncall functionName="solveManifold"/>
    <functioncall functionName="solveSingleIteration"/>
    <functioncall functionName="solverBody"/>
    <functioncall functionName="solverBodyId"/>
    <functioncall functionName="solverBodyIdA"/>
    <functioncall functionName="solverBodyIdB"/>
    <functioncall functionName="solverConstraint"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="sum"/>
    <functioncall functionName="swapi"/>
    <functioncall functionName="timeStep"/>
    <functioncall functionName="tmp"/>
    <functioncall functionName="torqueAxis0"/>
    <functioncall functionName="torqueAxis1"/>
    <functioncall functionName="totalImpulse"/>
    <functioncall functionName="totalNumRows"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uniqueId"/>
    <functioncall functionName="upcast"/>
    <functioncall functionName="upperLimit"/>
    <functioncall functionName="upperLimit1"/>
    <functioncall functionName="upperMinApplied"/>
    <functioncall functionName="useSimd"/>
    <functioncall functionName="vec"/>
    <functioncall functionName="vec0"/>
    <functioncall functionName="vec1"/>
    <functioncall functionName="vel"/>
    <functioncall functionName="vel1"/>
    <functioncall functionName="vel2"/>
    <functioncall functionName="vel2Dotn"/>
    <functioncall functionName="velocityImpulse"/>
    <functioncall functionName="void"/>
    <functioncall functionName="writeBackBodies"/>
    <functioncall functionName="writeBackContacts"/>
    <functioncall functionName="writeBackJoints"/>
    <functioncall functionName="writebackVelocity"/>
    <functioncall functionName="writebackVelocityAndTransform"/>
  </FileInfo>
</analyzerinfo>
