<?xml version="1.0"?>
<analyzerinfo checksum="2632821910">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;d&apos; can be reduced." verbose="The scope of the variable &apos;d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/vhacd/src/vhacdMesh.cpp" line="146" column="12"/>
            <symbol>d</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;volume&apos; can be reduced." verbose="The scope of the variable &apos;volume&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/vhacd/src/vhacdMesh.cpp" line="170" column="12"/>
            <symbol>volume</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/vhacd/src/vhacdMesh.cpp" line="190" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/vhacd/src/vhacdMesh.cpp" line="190" column="15"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;z&apos; can be reduced." verbose="The scope of the variable &apos;z&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/vhacd/src/vhacdMesh.cpp" line="190" column="18"/>
            <symbol>z</symbol>
        </error>
        <error id="invalidscanf" severity="warning" msg="fscanf() without field width limits can crash with huge input data." verbose="fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file="/home/hbina/git/godot/thirdparty/vhacd/src/vhacdMesh.cpp" line="320" column="9"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functioncall functionName="AddPoint"/>
    <functioncall functionName="AddTriangle"/>
    <functioncall functionName="ComputeVolume4"/>
    <functioncall functionName="GetNPoints"/>
    <functioncall functionName="GetNTriangles"/>
    <functioncall functionName="GetNorm"/>
    <functioncall functionName="GetPoint"/>
    <functioncall functionName="GetPoints"/>
    <functioncall functionName="GetTriangle"/>
    <functioncall functionName="GetTriangles"/>
    <functioncall functionName="Mesh"/>
    <functioncall functionName="PushBack"/>
    <functioncall functionName="Resize"/>
    <functioncall functionName="ResizePoints"/>
    <functioncall functionName="ResizeTriangles"/>
    <functioncall functionName="SaveVRML2"/>
    <functioncall functionName="Size"/>
    <functioncall functionName="Vec3"/>
    <functioncall functionName="X"/>
    <functioncall functionName="Y"/>
    <functioncall functionName="Z"/>
    <functioncall functionName="a"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bary"/>
    <functioncall functionName="c"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="center"/>
    <functioncall functionName="close"/>
    <functioncall functionName="compute"/>
    <functioncall functionName="d"/>
    <functioncall functionName="double"/>
    <functioncall functionName="f"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fid"/>
    <functioncall functionName="fixed"/>
    <functioncall functionName="floatfield"/>
    <functioncall functionName="fm_computeCentroid"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fout"/>
    <functioncall functionName="fscanf"/>
    <functioncall functionName="getNextEdgeOfFace"/>
    <functioncall functionName="getSourceVertex"/>
    <functioncall functionName="getTargetVertex"/>
    <functioncall functionName="getX"/>
    <functioncall functionName="getY"/>
    <functioncall functionName="getZ"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="indices"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="invert"/>
    <functioncall functionName="is_open"/>
    <functioncall functionName="j"/>
    <functioncall functionName="k"/>
    <functioncall functionName="m_d"/>
    <functioncall functionName="material"/>
    <functioncall functionName="minBB"/>
    <functioncall functionName="nPts"/>
    <functioncall functionName="nT"/>
    <functioncall functionName="nV"/>
    <functioncall functionName="ne"/>
    <functioncall functionName="nf"/>
    <functioncall functionName="nv"/>
    <functioncall functionName="p"/>
    <functioncall functionName="pcount"/>
    <functioncall functionName="points"/>
    <functioncall functionName="precision"/>
    <functioncall functionName="pt"/>
    <functioncall functionName="pts"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="setf"/>
    <functioncall functionName="showpoint"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="strOFF"/>
    <functioncall functionName="string"/>
    <functioncall functionName="t"/>
    <functioncall functionName="tcount"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="v"/>
    <functioncall functionName="ver0"/>
    <functioncall functionName="ver1"/>
    <functioncall functionName="ver2"/>
    <functioncall functionName="while"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
    <functioncall functionName="z"/>
  </FileInfo>
</analyzerinfo>
