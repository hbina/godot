<?xml version="1.0"?>
<analyzerinfo checksum="2012661959">
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error">
            <location file0="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp" file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h" line="27" column="27"/>
        </error>
        <error id="memsetClassFloat" severity="portability" msg="Using memset() on struct which contains a floating point number." verbose="Using memset() on struct which contains a floating point number. This is not portable because memset() sets each byte of a block of memory to a specific value and the actual representation of a floating-point value is implementation defined. Note: In case of an IEEE754-1985 compatible implementation setting all bits to zero results in the value 0.0." cwe="758">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp" line="312" column="2"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp" line="311" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp" line="314" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/bullet/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp" line="315" column="21"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="calcArea4Points" lineNumber="91"/>
    <functioncall functionName="ATTRIBUTE_ALIGNED16"/>
    <functioncall functionName="BT_PERSISTENT_MANIFOLD_TYPE"/>
    <functioncall functionName="a"/>
    <functioncall functionName="appliedImpulse"/>
    <functioncall functionName="appliedLateralImpulse1"/>
    <functioncall functionName="appliedLateralImpulse2"/>
    <functioncall functionName="b"/>
    <functioncall functionName="b0"/>
    <functioncall functionName="b1"/>
    <functioncall functionName="b2"/>
    <functioncall functionName="b3"/>
    <functioncall functionName="body0"/>
    <functioncall functionName="body1"/>
    <functioncall functionName="btAssert"/>
    <functioncall functionName="btManifoldPoint"/>
    <functioncall functionName="btMax"/>
    <functioncall functionName="btPersistentManifold"/>
    <functioncall functionName="btPersistentManifoldFloatData"/>
    <functioncall functionName="btScalar"/>
    <functioncall functionName="btTypedObject"/>
    <functioncall functionName="cache"/>
    <functioncall functionName="cachedPoints"/>
    <functioncall functionName="calcArea4Points"/>
    <functioncall functionName="class"/>
    <functioncall functionName="clearUserCache"/>
    <functioncall functionName="closestAxis4"/>
    <functioncall functionName="const"/>
    <functioncall functionName="contactBreakingThreshold"/>
    <functioncall functionName="contactProcessingThreshold"/>
    <functioncall functionName="cross"/>
    <functioncall functionName="dataBuffer"/>
    <functioncall functionName="dataOut"/>
    <functioncall functionName="deSerialize"/>
    <functioncall functionName="deSerializeDouble"/>
    <functioncall functionName="diffA"/>
    <functioncall functionName="dist"/>
    <functioncall functionName="distToManiPoint"/>
    <functioncall functionName="distance"/>
    <functioncall functionName="distance2d"/>
    <functioncall functionName="dot"/>
    <functioncall functionName="false"/>
    <functioncall functionName="for"/>
    <functioncall functionName="gContactCalcArea3Points"/>
    <functioncall functionName="gContactEndedCallback"/>
    <functioncall functionName="gContactProcessedCallback"/>
    <functioncall functionName="getBody0"/>
    <functioncall functionName="getBody1"/>
    <functioncall functionName="getContactBreakingThreshold"/>
    <functioncall functionName="getContactPoint"/>
    <functioncall functionName="getContactProcessingThreshold"/>
    <functioncall functionName="getDistance"/>
    <functioncall functionName="getLifeTime"/>
    <functioncall functionName="getNumContacts"/>
    <functioncall functionName="getUniquePointer"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="index"/>
    <functioncall functionName="insertIndex"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isPredictive"/>
    <functioncall functionName="lastUsedIndex"/>
    <functioncall functionName="length2"/>
    <functioncall functionName="lifeTime"/>
    <functioncall functionName="m_appliedImpulse"/>
    <functioncall functionName="m_appliedImpulseLateral1"/>
    <functioncall functionName="m_appliedImpulseLateral2"/>
    <functioncall functionName="m_body0"/>
    <functioncall functionName="m_body1"/>
    <functioncall functionName="m_cachedPoints"/>
    <functioncall functionName="m_combinedContactDamping1"/>
    <functioncall functionName="m_combinedContactStiffness1"/>
    <functioncall functionName="m_combinedFriction"/>
    <functioncall functionName="m_combinedRestitution"/>
    <functioncall functionName="m_combinedRollingFriction"/>
    <functioncall functionName="m_combinedSpinningFriction"/>
    <functioncall functionName="m_companionIdA"/>
    <functioncall functionName="m_companionIdB"/>
    <functioncall functionName="m_contactBreakingThreshold"/>
    <functioncall functionName="m_contactCFM"/>
    <functioncall functionName="m_contactERP"/>
    <functioncall functionName="m_contactMotion1"/>
    <functioncall functionName="m_contactMotion2"/>
    <functioncall functionName="m_contactPointFlags"/>
    <functioncall functionName="m_contactProcessingThreshold"/>
    <functioncall functionName="m_distance1"/>
    <functioncall functionName="m_frictionCFM"/>
    <functioncall functionName="m_index0"/>
    <functioncall functionName="m_index1"/>
    <functioncall functionName="m_index1a"/>
    <functioncall functionName="m_lifeTime"/>
    <functioncall functionName="m_localPointA"/>
    <functioncall functionName="m_localPointB"/>
    <functioncall functionName="m_normalWorldOnB"/>
    <functioncall functionName="m_numCachedPoints"/>
    <functioncall functionName="m_objectType"/>
    <functioncall functionName="m_partId0"/>
    <functioncall functionName="m_partId1"/>
    <functioncall functionName="m_positionWorldOnB"/>
    <functioncall functionName="m_prevRHS"/>
    <functioncall functionName="m_userPersistentData"/>
    <functioncall functionName="manifoldPoint"/>
    <functioncall functionName="maxvec"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="newPoint"/>
    <functioncall functionName="normal"/>
    <functioncall functionName="oldPtr"/>
    <functioncall functionName="p1"/>
    <functioncall functionName="p2"/>
    <functioncall functionName="p3"/>
    <functioncall functionName="pointA"/>
    <functioncall functionName="pointB"/>
    <functioncall functionName="prevRHS"/>
    <functioncall functionName="projectedDifference"/>
    <functioncall functionName="projectedPoint"/>
    <functioncall functionName="removeContactPoint"/>
    <functioncall functionName="replacePoint"/>
    <functioncall functionName="res0"/>
    <functioncall functionName="res1"/>
    <functioncall functionName="res2"/>
    <functioncall functionName="res3"/>
    <functioncall functionName="serialize"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sortCachedPoints"/>
    <functioncall functionName="this"/>
    <functioncall functionName="trA"/>
    <functioncall functionName="trB"/>
    <functioncall functionName="true"/>
    <functioncall functionName="validContactDistance"/>
  </FileInfo>
</analyzerinfo>
