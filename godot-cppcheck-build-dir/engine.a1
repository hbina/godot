<?xml version="1.0"?>
<analyzerinfo checksum="336324225">
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Engine::get_frames_drawn&apos; can be const." verbose="The member function &apos;Engine::get_frames_drawn&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="93" column="11"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="67" column="18"/>
            <symbol>Engine::get_frames_drawn</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::set_editor_hint&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::set_editor_hint&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="119" column="22"/>
            <symbol>Engine::set_editor_hint</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::is_editor_hint&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::is_editor_hint&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="120" column="22"/>
            <symbol>Engine::is_editor_hint</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::get_version_info&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::get_version_info&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="123" column="13"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="92" column="20"/>
            <symbol>Engine::get_version_info</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::get_author_info&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::get_author_info&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="124" column="13"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="131" column="20"/>
            <symbol>Engine::get_author_info</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::get_copyright_info&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::get_copyright_info&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="125" column="8"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="142" column="15"/>
            <symbol>Engine::get_copyright_info</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::get_donor_info&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::get_donor_info&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="126" column="13"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="164" column="20"/>
            <symbol>Engine::get_donor_info</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::get_license_info&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::get_license_info&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="127" column="13"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="175" column="20"/>
            <symbol>Engine::get_license_info</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;Engine::get_license_text&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;Engine::get_license_text&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to a unnamed namespace." cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/core/engine.cpp" file="/home/hbina/git/godot/core/engine.h" line="128" column="9"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="183" column="16"/>
            <symbol>Engine::get_license_text</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!E&apos; is redundant or there is possible null pointer dereference: E." verbose="Either the condition &apos;!E&apos; is redundant or there is possible null pointer dereference: E." cwe="476" inconclusive="true">
            <location file="/home/hbina/git/godot/core/engine.cpp" line="197" column="9" info="Null pointer dereference"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="195" column="67" info="Assignment &apos;E=singleton_ptrs.find(p_name)&apos;, assigned value is 0"/>
            <location file="/home/hbina/git/godot/core/engine.cpp" line="196" column="22" info="Assuming that condition &apos;!E&apos; is not redundant"/>
            <symbol>E</symbol>
        </error>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/core/engine.cpp:115:14" my-argnr="1" my-argname="info_list" file="/home/hbina/git/godot/core/engine.cpp" line="117" col="18" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/core/engine.cpp:115:14" my-argnr="1" my-argname="info_list" file="/home/hbina/git/godot/core/engine.cpp" line="117" col="18" value="0"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/core/engine.cpp:115:14" my-argnr="1" my-argname="info_list" file="/home/hbina/git/godot/core/engine.cpp" line="117" col="18" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/core/engine.cpp:115:14" my-argnr="1" my-argname="info_list" file="/home/hbina/git/godot/core/engine.cpp" line="117" col="18" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="set_iterations_per_second" lineNumber="39"/>
    <functiondecl functionName="get_iterations_per_second" lineNumber="44"/>
    <functiondecl functionName="set_physics_jitter_fix" lineNumber="49"/>
    <functiondecl functionName="get_physics_jitter_fix" lineNumber="55"/>
    <functiondecl functionName="set_target_fps" lineNumber="59"/>
    <functiondecl functionName="get_target_fps" lineNumber="63"/>
    <functiondecl functionName="get_frames_drawn" lineNumber="67"/>
    <functiondecl functionName="set_frame_delay" lineNumber="72"/>
    <functiondecl functionName="get_frame_delay" lineNumber="77"/>
    <functiondecl functionName="set_time_scale" lineNumber="82"/>
    <functiondecl functionName="get_time_scale" lineNumber="87"/>
    <functiondecl functionName="get_version_info" lineNumber="92"/>
    <functiondecl functionName="array_from_info" lineNumber="115"/>
    <functiondecl functionName="array_from_info_count" lineNumber="123"/>
    <functiondecl functionName="get_author_info" lineNumber="131"/>
    <functiondecl functionName="get_copyright_info" lineNumber="142"/>
    <functiondecl functionName="get_donor_info" lineNumber="164"/>
    <functiondecl functionName="get_license_info" lineNumber="175"/>
    <functiondecl functionName="get_license_text" lineNumber="183"/>
    <functiondecl functionName="add_singleton" lineNumber="187"/>
    <functiondecl functionName="get_singleton_object" lineNumber="193"/>
    <functiondecl functionName="has_singleton" lineNumber="200"/>
    <functiondecl functionName="get_singletons" lineNumber="205"/>
    <functiondecl functionName="get_singleton" lineNumber="213"/>
    <functiondecl functionName="is_abort_on_gpu_errors_enabled" lineNumber="217"/>
    <functiondecl functionName="set_iterations_per_second" lineNumber="39"/>
    <functiondecl functionName="get_iterations_per_second" lineNumber="44"/>
    <functiondecl functionName="set_physics_jitter_fix" lineNumber="49"/>
    <functiondecl functionName="get_physics_jitter_fix" lineNumber="55"/>
    <functiondecl functionName="set_target_fps" lineNumber="59"/>
    <functiondecl functionName="get_target_fps" lineNumber="63"/>
    <functiondecl functionName="get_frames_drawn" lineNumber="67"/>
    <functiondecl functionName="set_frame_delay" lineNumber="72"/>
    <functiondecl functionName="get_frame_delay" lineNumber="77"/>
    <functiondecl functionName="set_time_scale" lineNumber="82"/>
    <functiondecl functionName="get_time_scale" lineNumber="87"/>
    <functiondecl functionName="get_version_info" lineNumber="92"/>
    <functiondecl functionName="array_from_info" lineNumber="115"/>
    <functiondecl functionName="array_from_info_count" lineNumber="123"/>
    <functiondecl functionName="get_author_info" lineNumber="131"/>
    <functiondecl functionName="get_copyright_info" lineNumber="142"/>
    <functiondecl functionName="get_donor_info" lineNumber="164"/>
    <functiondecl functionName="get_license_info" lineNumber="175"/>
    <functiondecl functionName="get_license_text" lineNumber="183"/>
    <functiondecl functionName="add_singleton" lineNumber="187"/>
    <functiondecl functionName="get_singleton_object" lineNumber="193"/>
    <functiondecl functionName="has_singleton" lineNumber="200"/>
    <functiondecl functionName="get_singletons" lineNumber="205"/>
    <functiondecl functionName="get_singleton" lineNumber="213"/>
    <functiondecl functionName="is_abort_on_gpu_errors_enabled" lineNumber="217"/>
    <functioncall functionName="AUTHORS_DEVELOPERS"/>
    <functioncall functionName="AUTHORS_FOUNDERS"/>
    <functioncall functionName="AUTHORS_LEAD_DEVELOPERS"/>
    <functioncall functionName="AUTHORS_PROJECT_MANAGERS"/>
    <functioncall functionName="DONORS_BRONZE"/>
    <functioncall functionName="DONORS_GOLD"/>
    <functioncall functionName="DONORS_SILVER"/>
    <functioncall functionName="DONORS_SPONSOR_GOLD"/>
    <functioncall functionName="DONORS_SPONSOR_MINI"/>
    <functioncall functionName="DONORS_SPONSOR_PLAT"/>
    <functioncall functionName="E"/>
    <functioncall functionName="ERR_FAIL_COND_MSG"/>
    <functioncall functionName="ERR_FAIL_COND_V_MSG"/>
    <functioncall functionName="Engine"/>
    <functioncall functionName="GODOT_LICENSE_TEXT"/>
    <functioncall functionName="Singleton"/>
    <functioncall functionName="String"/>
    <functioncall functionName="StringName"/>
    <functioncall functionName="VERSION_BUILD"/>
    <functioncall functionName="VERSION_HASH"/>
    <functioncall functionName="VERSION_HEX"/>
    <functioncall functionName="VERSION_MAJOR"/>
    <functioncall functionName="VERSION_MINOR"/>
    <functioncall functionName="VERSION_PATCH"/>
    <functioncall functionName="VERSION_STATUS"/>
    <functioncall functionName="VERSION_YEAR"/>
    <functioncall functionName="array_from_info"/>
    <functioncall functionName="array_from_info_count"/>
    <functioncall functionName="component_dict"/>
    <functioncall functionName="component_index"/>
    <functioncall functionName="const"/>
    <functioncall functionName="copyright_count"/>
    <functioncall functionName="copyright_statements"/>
    <functioncall functionName="false"/>
    <functioncall functionName="file_count"/>
    <functioncall functionName="files"/>
    <functioncall functionName="find"/>
    <functioncall functionName="for"/>
    <functioncall functionName="front"/>
    <functioncall functionName="get"/>
    <functioncall functionName="has"/>
    <functioncall functionName="hash"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="length"/>
    <functioncall functionName="license"/>
    <functioncall functionName="name"/>
    <functioncall functionName="next"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="p_enabled"/>
    <functioncall functionName="p_fps"/>
    <functioncall functionName="p_ips"/>
    <functioncall functionName="p_msec"/>
    <functioncall functionName="p_name"/>
    <functioncall functionName="p_ptr"/>
    <functioncall functionName="p_scale"/>
    <functioncall functionName="p_singleton"/>
    <functioncall functionName="p_threshold"/>
    <functioncall functionName="part_count"/>
    <functioncall functionName="part_dict"/>
    <functioncall functionName="parts"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="stringver"/>
    <functioncall functionName="this"/>
  </FileInfo>
</analyzerinfo>
