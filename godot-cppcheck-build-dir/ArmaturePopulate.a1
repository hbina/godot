<?xml version="1.0"?>
<analyzerinfo checksum="3998258573">
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;Execute&apos; argument 1 names different: declaration &apos;pScene&apos; definition &apos;out&apos;." verbose="Function &apos;Execute&apos; argument 1 names different: declaration &apos;pScene&apos; definition &apos;out&apos;." cwe="628" inconclusive="true">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" line="68" column="41"/>
            <location file0="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.h" line="84" column="36"/>
            <symbol>Execute</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;bones&apos; can be declared with const" verbose="Parameter &apos;bones&apos; can be declared with const" cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" line="221" column="58"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" line="223" column="35"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.h:98:17" call-funcname="BuildBoneList" call-argnr="2" file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" line="140" col="5" my-id="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.h:98:17" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.h:84:18" my-argnr="1" my-argname="out" file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" line="74" col="17" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.h:98:17" my-argnr="1" my-argname="current_node" file="/home/hbina/git/godot/thirdparty/assimp/code/PostProcessing/ArmaturePopulate.cpp" line="113" col="42" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="IsActive" lineNumber="60"/>
    <functiondecl functionName="SetupProperties" lineNumber="64"/>
    <functiondecl functionName="Execute" lineNumber="68"/>
    <functiondecl functionName="BuildBoneList" lineNumber="108"/>
    <functiondecl functionName="BuildNodeList" lineNumber="145"/>
    <functiondecl functionName="BuildBoneStack" lineNumber="163"/>
    <functiondecl functionName="GetArmatureRoot" lineNumber="201"/>
    <functiondecl functionName="IsBoneNode" lineNumber="220"/>
    <functiondecl functionName="GetNodeFromStack" lineNumber="237"/>
    <functioncall functionName="ASSIMP_LOG_DEBUG_F"/>
    <functioncall functionName="ASSIMP_LOG_ERROR"/>
    <functioncall functionName="ASSIMP_LOG_INFO_F"/>
    <functioncall functionName="ArmaturePopulate"/>
    <functioncall functionName="BaseProcess"/>
    <functioncall functionName="BuildBoneList"/>
    <functioncall functionName="BuildBoneStack"/>
    <functioncall functionName="BuildNodeList"/>
    <functioncall functionName="C_Str"/>
    <functioncall functionName="GetArmatureRoot"/>
    <functioncall functionName="GetNodeFromStack"/>
    <functioncall functionName="IsBoneNode"/>
    <functioncall functionName="ai_assert"/>
    <functioncall functionName="armature"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="bone"/>
    <functioncall functionName="boneId"/>
    <functioncall functionName="bone_list"/>
    <functioncall functionName="bone_node"/>
    <functioncall functionName="bone_stack"/>
    <functioncall functionName="bones"/>
    <functioncall functionName="break"/>
    <functioncall functionName="child"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="current_node"/>
    <functioncall functionName="element"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="find"/>
    <functioncall functionName="first"/>
    <functioncall functionName="for"/>
    <functioncall functionName="if"/>
    <functioncall functionName="insert"/>
    <functioncall functionName="iter"/>
    <functioncall functionName="mMeshes"/>
    <functioncall functionName="mName"/>
    <functioncall functionName="mNumBones"/>
    <functioncall functionName="mNumChildren"/>
    <functioncall functionName="mNumMeshes"/>
    <functioncall functionName="mParent"/>
    <functioncall functionName="mRootNode"/>
    <functioncall functionName="mesh"/>
    <functioncall functionName="meshId"/>
    <functioncall functionName="mesh_index"/>
    <functioncall functionName="node"/>
    <functioncall functionName="nodeId"/>
    <functioncall functionName="node_stack"/>
    <functioncall functionName="nodes"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="out"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="return"/>
    <functioncall functionName="root_node"/>
    <functioncall functionName="scene"/>
    <functioncall functionName="second"/>
    <functioncall functionName="size"/>
    <functioncall functionName="while"/>
  </FileInfo>
</analyzerinfo>
