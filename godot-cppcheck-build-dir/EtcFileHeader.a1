<?xml version="1.0"?>
<analyzerinfo checksum="1004738907">
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="44" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator+</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator+&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="54" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator+</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="64" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator-</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator-&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="74" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator-</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::operator*&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::operator*&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="84" column="25"/>
            <symbol>Etc::ColorFloatRGBA::operator*</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::ScaleRGB&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::ScaleRGB&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="95" column="25"/>
            <symbol>Etc::ColorFloatRGBA::ScaleRGB</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::ClampRGB&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::ClampRGB&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="269" column="25"/>
            <symbol>Etc::ColorFloatRGBA::ClampRGB</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::ColorFloatRGBA::ClampRGBA&apos; can be const." verbose="The member function &apos;Etc::ColorFloatRGBA::ClampRGBA&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="282" column="25"/>
            <symbol>Etc::ColorFloatRGBA::ClampRGBA</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetSourceWidth&apos; can be const." verbose="The member function &apos;Etc::Image::GetSourceWidth&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="105" column="23"/>
            <symbol>Etc::Image::GetSourceWidth</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetSourceHeight&apos; can be const." verbose="The member function &apos;Etc::Image::GetSourceHeight&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="110" column="23"/>
            <symbol>Etc::Image::GetSourceHeight</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetExtendedWidth&apos; can be const." verbose="The member function &apos;Etc::Image::GetExtendedWidth&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="115" column="23"/>
            <symbol>Etc::Image::GetExtendedWidth</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetExtendedHeight&apos; can be const." verbose="The member function &apos;Etc::Image::GetExtendedHeight&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="120" column="23"/>
            <symbol>Etc::Image::GetExtendedHeight</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetNumberOfBlocks&apos; can be const." verbose="The member function &apos;Etc::Image::GetNumberOfBlocks&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="125" column="23"/>
            <symbol>Etc::Image::GetNumberOfBlocks</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetEncodingBitsBytes&apos; can be const." verbose="The member function &apos;Etc::Image::GetEncodingBitsBytes&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="140" column="23"/>
            <symbol>Etc::Image::GetEncodingBitsBytes</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetEncodingTimeMs&apos; can be const." verbose="The member function &apos;Etc::Image::GetEncodingTimeMs&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="145" column="14"/>
            <symbol>Etc::Image::GetEncodingTimeMs</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetFormat&apos; can be const." verbose="The member function &apos;Etc::Image::GetFormat&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="162" column="17"/>
            <symbol>Etc::Image::GetFormat</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::Image::GetErrorMetric&apos; can be const." verbose="The member function &apos;Etc::Image::GetErrorMetric&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcImage.h" line="174" column="22"/>
            <symbol>Etc::Image::GetErrorMetric</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetFilename&apos; can be const." verbose="The member function &apos;Etc::File::GetFilename&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="50" column="15"/>
            <symbol>Etc::File::GetFilename</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetSourceWidth&apos; can be const." verbose="The member function &apos;Etc::File::GetSourceWidth&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="55" column="23"/>
            <symbol>Etc::File::GetSourceWidth</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetSourceHeight&apos; can be const." verbose="The member function &apos;Etc::File::GetSourceHeight&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="60" column="23"/>
            <symbol>Etc::File::GetSourceHeight</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetExtendedWidth&apos; can be const." verbose="The member function &apos;Etc::File::GetExtendedWidth&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="65" column="23"/>
            <symbol>Etc::File::GetExtendedWidth</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetExtendedHeight&apos; can be const." verbose="The member function &apos;Etc::File::GetExtendedHeight&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="77" column="23"/>
            <symbol>Etc::File::GetExtendedHeight</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetImageFormat&apos; can be const." verbose="The member function &apos;Etc::File::GetImageFormat&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="89" column="24"/>
            <symbol>Etc::File::GetImageFormat</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetEncodingBitsBytes&apos; can be const." verbose="The member function &apos;Etc::File::GetEncodingBitsBytes&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="94" column="23"/>
            <symbol>Etc::File::GetEncodingBitsBytes</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Etc::File::GetNumMipmaps&apos; can be const." verbose="The member function &apos;Etc::File::GetNumMipmaps&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFile.h" line="118" column="23"/>
            <symbol>Etc::File::GetNumMipmaps</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FileHeader_Pkm&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FileHeader_Pkm&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h" line="46" column="3"/>
            <symbol>FileHeader_Pkm</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FileHeader_Ktx&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FileHeader_Ktx&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h" line="128" column="3"/>
            <symbol>FileHeader_Ktx</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Write&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Write&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h" line="48" column="16" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h" line="32" column="16" info="Virtual function in base class"/>
            <symbol>Write</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Write&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Write&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h" line="130" column="16" info="Function in derived class"/>
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h" line="32" column="16" info="Virtual function in base class"/>
            <symbol>Write</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;a_fLinear&apos; can be declared with const" verbose="Parameter &apos;a_fLinear&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColor.h" line="39" column="34"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;a_rfrgba&apos; can be declared with const" verbose="Parameter &apos;a_rfrgba&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="44" column="51"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;a_rfrgba&apos; can be declared with const" verbose="Parameter &apos;a_rfrgba&apos; can be declared with const" cwe="398">
            <location file0="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcColorFloatRGBA.h" line="74" column="51"/>
        </error>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h:48:16" my-argnr="1" my-argname="a_pfile" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" line="65" col="36" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h:130:16" my-argnr="1" my-argname="a_pfile" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" line="166" col="53" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h:48:16" my-argnr="1" my-argname="a_pfile" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" line="65" col="36" value="0"/>
    <unsafe-usage my-id="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.h:130:16" my-argnr="1" my-argname="a_pfile" file="/home/hbina/git/godot/thirdparty/etc2comp/EtcFileHeader.cpp" line="166" col="53" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="Write" lineNumber="62"/>
    <functiondecl functionName="Write" lineNumber="161"/>
    <functiondecl functionName="GetData" lineNumber="178"/>
    <functioncall functionName="ALPHA"/>
    <functioncall functionName="AddToEncodingStatus"/>
    <functioncall functionName="BYTES_PER_BLOCK"/>
    <functioncall functionName="Block4x4EncodingBits_RGB8"/>
    <functioncall functionName="ClampRGB"/>
    <functioncall functionName="ColorFloatRGBA"/>
    <functioncall functionName="Data"/>
    <functioncall functionName="ERROR_METRICS"/>
    <functioncall functionName="ETC1"/>
    <functioncall functionName="ETC1_RGB8"/>
    <functioncall functionName="ETC2_R11"/>
    <functioncall functionName="ETC2_RG11"/>
    <functioncall functionName="ETC2_RGB8"/>
    <functioncall functionName="ETC2_RGB8A1"/>
    <functioncall functionName="ETC2_RGBA8"/>
    <functioncall functionName="ETC2_SIGNED_R11"/>
    <functioncall functionName="ETC2_SIGNED_RG11"/>
    <functioncall functionName="EncodingStatus"/>
    <functioncall functionName="FORMATS"/>
    <functioncall functionName="File"/>
    <functioncall functionName="FileHeader_Ktx"/>
    <functioncall functionName="FileHeader_Pkm"/>
    <functioncall functionName="GetExtendedHeight"/>
    <functioncall functionName="GetExtendedWidth"/>
    <functioncall functionName="GetImageFormat"/>
    <functioncall functionName="GetNumMipmaps"/>
    <functioncall functionName="GetSourceHeight"/>
    <functioncall functionName="GetSourceWidth"/>
    <functioncall functionName="INFER_FROM_FILE_EXTENSION"/>
    <functioncall functionName="Image"/>
    <functioncall functionName="KTX"/>
    <functioncall functionName="LinearToLog"/>
    <functioncall functionName="LogToLinear"/>
    <functioncall functionName="NORMALXYZ"/>
    <functioncall functionName="NUMERIC"/>
    <functioncall functionName="ONE_PLUS_ALPHA"/>
    <functioncall functionName="PKM"/>
    <functioncall functionName="R11"/>
    <functioncall functionName="REC709"/>
    <functioncall functionName="RG11"/>
    <functioncall functionName="RGB8"/>
    <functioncall functionName="RGB8A1"/>
    <functioncall functionName="RGBA"/>
    <functioncall functionName="RGBA8"/>
    <functioncall functionName="RGBX"/>
    <functioncall functionName="RoundRGB"/>
    <functioncall functionName="SIGNED_R11"/>
    <functioncall functionName="SIGNED_RG11"/>
    <functioncall functionName="SRGB8"/>
    <functioncall functionName="SRGB8A1"/>
    <functioncall functionName="SRGBA8"/>
    <functioncall functionName="ScaleRGB"/>
    <functioncall functionName="UNKNOWN"/>
    <functioncall functionName="a_encStatus"/>
    <functioncall functionName="a_f"/>
    <functioncall functionName="a_fA"/>
    <functioncall functionName="a_fB"/>
    <functioncall functionName="a_fG"/>
    <functioncall functionName="a_fLinear"/>
    <functioncall functionName="a_fR"/>
    <functioncall functionName="a_format"/>
    <functioncall functionName="a_pfile"/>
    <functioncall functionName="a_ucB4"/>
    <functioncall functionName="a_ucG4"/>
    <functioncall functionName="a_ucR4"/>
    <functioncall functionName="a_uiH"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="break"/>
    <functioncall functionName="char"/>
    <functioncall functionName="default"/>
    <functioncall functionName="errorMetric"/>
    <functioncall functionName="fA"/>
    <functioncall functionName="fB"/>
    <functioncall functionName="fG"/>
    <functioncall functionName="fR"/>
    <functioncall functionName="false"/>
    <functioncall functionName="float"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fwrite"/>
    <functioncall functionName="get"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="m_data"/>
    <functioncall functionName="m_pkeyvaluepair"/>
    <functioncall functionName="m_u32KeyValuePairs"/>
    <functioncall functionName="mipmapIndex"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="powf"/>
    <functioncall functionName="return"/>
    <functioncall functionName="roundf"/>
    <functioncall functionName="s_acMagicNumberData"/>
    <functioncall functionName="s_acVersionData"/>
    <functioncall functionName="s_au8Itentfier"/>
    <functioncall functionName="short"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="u32KeyAndValueByteSize"/>
    <functioncall functionName="ui"/>
    <functioncall functionName="uiB4"/>
    <functioncall functionName="uiByte"/>
    <functioncall functionName="uiEncodingBitsBytes"/>
    <functioncall functionName="uiExtendedHeight"/>
    <functioncall functionName="uiExtendedWidth"/>
    <functioncall functionName="uiG4"/>
    <functioncall functionName="uiR4"/>
  </FileInfo>
</analyzerinfo>
