<?xml version="1.0"?>
<analyzerinfo checksum="2576817584">
        <error id="nullPointer" severity="warning" msg="Possible null pointer dereference: mp" verbose="Possible null pointer dereference: mp" cwe="476">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="533" column="69" info="Null pointer dereference"/>
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="518" column="48" info="Assignment &apos;mp=NULL&apos;, assigned value is 0"/>
            <symbol>mp</symbol>
        </error>
        <error id="nullPointer" severity="warning" msg="Possible null pointer dereference: mp" verbose="Possible null pointer dereference: mp" cwe="476">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="534" column="47" info="Null pointer dereference"/>
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="518" column="48" info="Assignment &apos;mp=NULL&apos;, assigned value is 0"/>
            <symbol>mp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;eh_tmp0__&apos; can be reduced." verbose="The scope of the variable &apos;eh_tmp0__&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="237" column="5"/>
            <symbol>eh_tmp0__</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;eh_tmp1__&apos; can be reduced." verbose="The scope of the variable &apos;eh_tmp1__&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="237" column="5"/>
            <symbol>eh_tmp1__</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp:64:10" call-funcname="Subdivide" call-argnr="1" file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="132" col="14" call-argexpr="&mesh" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp:64:10" call-funcname="Subdivide" call-argnr="3" file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="132" col="14" call-argexpr="&out" call-argvaluetype="7" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp:64:10" call-funcname="Subdivide" call-argnr="1" file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="132" col="14" call-argexpr="&mesh" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp:64:10" call-funcname="Subdivide" call-argnr="3" file="/home/hbina/git/godot/thirdparty/assimp/code/Common/Subdivision.cpp" line="132" col="14" call-argexpr="&out" call-argvaluetype="7" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="mydummy" lineNumber="54"/>
    <functiondecl functionName="Subdivide" lineNumber="123"/>
    <functiondecl functionName="Subdivide" lineNumber="137"/>
    <functiondecl functionName="InternSubdivide" lineNumber="229"/>
    <functiondecl functionName="mydummy" lineNumber="54"/>
    <functiondecl functionName="Subdivide" lineNumber="123"/>
    <functiondecl functionName="Subdivide" lineNumber="137"/>
    <functiondecl functionName="InternSubdivide" lineNumber="229"/>
    <functioncall functionName="ASSIMP_LOG_DEBUG"/>
    <functioncall functionName="ASSIMP_LOG_DEBUG_F"/>
    <functioncall functionName="ASSIMP_LOG_WARN"/>
    <functioncall functionName="Append"/>
    <functioncall functionName="CatmullClarkSubdivider"/>
    <functioncall functionName="ComputePositionEpsilon"/>
    <functioncall functionName="Copy"/>
    <functioncall functionName="Edge"/>
    <functioncall functionName="Finalize"/>
    <functioncall functionName="GenerateMappingTable"/>
    <functioncall functionName="HasNormals"/>
    <functioncall functionName="HasTangentsAndBitangents"/>
    <functioncall functionName="HasTextureCoords"/>
    <functioncall functionName="HasVertexColors"/>
    <functioncall functionName="InternSubdivide"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="SortBack"/>
    <functioncall functionName="Subdivide"/>
    <functioncall functionName="Vertex"/>
    <functioncall functionName="a"/>
    <functioncall functionName="aiMesh"/>
    <functioncall functionName="aiPrimitiveType_POINT"/>
    <functioncall functionName="aiPrimitiveType_POLYGON"/>
    <functioncall functionName="aiVector3D"/>
    <functioncall functionName="ai_assert"/>
    <functioncall functionName="algo"/>
    <functioncall functionName="bad_cnt"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="break"/>
    <functioncall functionName="centroids"/>
    <functioncall functionName="cnt"/>
    <functioncall functionName="cntadjfac"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="cur"/>
    <functioncall functionName="discard_input"/>
    <functioncall functionName="div"/>
    <functioncall functionName="eh_tmp0__"/>
    <functioncall functionName="eh_tmp1__"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="faceadjac"/>
    <functioncall functionName="false"/>
    <functioncall functionName="first"/>
    <functioncall functionName="for"/>
    <functioncall functionName="front"/>
    <functioncall functionName="haveit"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="m"/>
    <functioncall functionName="mMaterialIndex"/>
    <functioncall functionName="mNumFaces"/>
    <functioncall functionName="mNumIndices"/>
    <functioncall functionName="mNumVertices"/>
    <functioncall functionName="mPrimitiveTypes"/>
    <functioncall functionName="mVertices"/>
    <functioncall functionName="maptbl"/>
    <functioncall functionName="mesh"/>
    <functioncall functionName="midpoint"/>
    <functioncall functionName="minp"/>
    <functioncall functionName="moffsets"/>
    <functioncall functionName="mout"/>
    <functioncall functionName="mydummy"/>
    <functioncall functionName="n"/>
    <functioncall functionName="new_points"/>
    <functioncall functionName="nfacesout"/>
    <functioncall functionName="nidx"/>
    <functioncall functionName="nmesh"/>
    <functioncall functionName="num"/>
    <functioncall functionName="num_unique"/>
    <functioncall functionName="o"/>
    <functioncall functionName="ofsadjvec"/>
    <functioncall functionName="org"/>
    <functioncall functionName="out"/>
    <functioncall functionName="p"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="ref"/>
    <functioncall functionName="reserve"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="smesh"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="swap"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="tmp"/>
    <functioncall functionName="totfaces"/>
    <functioncall functionName="totvert"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint64_t"/>
  </FileInfo>
</analyzerinfo>
